diff --git a/package-lock.json b/package-lock.json
index d0d2d27..b726525 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,5 +1,5 @@
 {
-  "name": "edpsych-project",
+  "name": "edpsych-repo",
   "version": "0.1.0",
   "lockfileVersion": 3,
   "requires": true,
diff --git a/src/app/admin/users/page.tsx b/src/app/admin/users/page.tsx
index e037956..104a793 100644
--- a/src/app/admin/users/page.tsx
+++ b/src/app/admin/users/page.tsx
@@ -26,7 +26,7 @@ interface RoleOption {
 }
 
 export default function AdminUserManagement() {
-  const [users, setUsers] = useState<User: any[]>([]);
+  const [users, setUsers] = useState<User[]>([]);
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
   const [currentPage, setCurrentPage] = useState(1);
@@ -54,7 +54,7 @@ export default function AdminUserManagement() {
     fetchUsers();
   }, [currentPage, activeTab, searchQuery]);
   
-  const roleOptions: RoleOption: any[] = [
+  const roleOptions: RoleOption[] = [
     { value: 'STUDENT', label: 'Student' },
     { value: 'EDUCATOR', label: 'Educator' },
     { value: 'ADMIN', label: 'Administrator' },
diff --git a/src/app/api/ai/adaptive-complexity/route.ts b/src/app/api/ai/adaptive-complexity/route.ts
index 41fea2b..01eef52 100644
--- a/src/app/api/ai/adaptive-complexity/route.ts
+++ b/src/app/api/ai/adaptive-complexity/route.ts
@@ -29,7 +29,7 @@ interface PerformanceMetrics {
   readingLevel: number;
   comprehensionRate: number;
   engagementScore: number;
-  learningPreferences: string: any[];
+  learningPreferences: string[];
 }
 
 export async function POST(req: NextRequest) {
diff --git a/src/app/api/ai/curriculum-differentiation/route.ts b/src/app/api/ai/curriculum-differentiation/route.ts
index 0152bd6..2fdcc23 100644
--- a/src/app/api/ai/curriculum-differentiation/route.ts
+++ b/src/app/api/ai/curriculum-differentiation/route.ts
@@ -30,7 +30,7 @@ export async function POST(req: NextRequest) {
     
         // Get curriculum plan if ID is provided
     let planContent = curriculumContent;
-    let planObjectives: string: any[] = objectives || [];
+    let planObjectives: string[] = objectives || [];
     let planSubject = subject;
     let planKeyStage = keyStage;
     let planYear = year; year;
diff --git a/src/app/api/ai/embedding/route.ts b/src/app/api/ai/embedding/route.ts
index 2f0a69e..6594a58 100644
--- a/src/app/api/ai/embedding/route.ts
+++ b/src/app/api/ai/embedding/route.ts
@@ -12,7 +12,7 @@ type AIProvider = 'openai' | 'anthropic' | 'gemini' | 'grok' | 'openrouter';
 export interface AIEmbeddingRequest {
   provider: AIProvider;
   model: string;
-  text: string | string: any: any[];
+  text: string | string[];
 }
 
 // Handle AI embedding requests
diff --git a/src/app/api/assessment/[id]/submit/route.ts b/src/app/api/assessment/[id]/submit/route.ts
index db33cdf..4d8aa0a 100644
--- a/src/app/api/assessment/[id]/submit/route.ts
+++ b/src/app/api/assessment/[id]/submit/route.ts
@@ -108,7 +108,7 @@ export async function POST(
       switch (question.type) {
         case 'multiple-choice':
           // For multiple choice, check if selected options match correct answers
-          const correctOptions = question.correctAnswer as string: any: any[];
+          const correctOptions = question.correctAnswer as string[];
           isCorrect = Array.isArray(content) && 
                      Array.isArray(correctOptions) && 
                      content.length === correctOptions.length && 
diff --git a/src/app/api/assessment/response/[id]/grade/route.ts b/src/app/api/assessment/response/[id]/grade/route.ts
index c24a22f..a673aee 100644
--- a/src/app/api/assessment/response/[id]/grade/route.ts
+++ b/src/app/api/assessment/response/[id]/grade/route.ts
@@ -126,7 +126,7 @@ export async function PUT(
     }
     
     // Update each answer with the provided grade
-    for (const grade of grades as Grade: any: any[]) {
+    for (const grade of grades as Grade[]) {
       if (!grade.answerId) continue;
       
       await prisma.assessmentAnswer.update({
diff --git a/src/app/api/blog/auto-generate/route.ts b/src/app/api/blog/auto-generate/route.ts
index af2d0cf..dfe61a5 100644
--- a/src/app/api/blog/auto-generate/route.ts
+++ b/src/app/api/blog/auto-generate/route.ts
@@ -28,9 +28,9 @@ const BLOG_AUDIENCES = [
 
 interface BlogGenerationParams {
   topic: string;
-  audience: string: any[];
+  audience: string[];
   category: string;
-  keyPoints?: string: any[];
+  keyPoints?: string[];
   tone?: string;
   wordCount?: number;
 }
@@ -40,8 +40,8 @@ interface BlogPostData {
   content: string;
   summary: string;
   category: string;
-  tags: string: any[];
-  targetAudience: string: any[];
+  tags: string[];
+  targetAudience: string[];
   status: string;
   authorId: string;
   aiGenerationPrompt: string;
@@ -52,7 +52,7 @@ interface BlogPostData {
 interface BlogPostIdea {
   title: string;
   description: string;
-  targetAudience: string: any[];
+  targetAudience: string[];
   estimatedReadTime: number;
 }
 
@@ -80,12 +80,12 @@ async function saveBlogPost(postData: BlogPostData) {
 }
 
 // Mock function for generating blog post ideas
-async function generateBlogPostIdeas(count: number, topics?: string: any[]): Promise<BlogPostIdea: any[]> {
+async function generateBlogPostIdeas(count: number, topics?: string[]): Promise<BlogPostIdea[]> {
   // In a real implementation, this would call an AI service
   // For now, we'll return mock ideas
   await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API delay
   
-  const ideas: BlogPostIdea: any[] = [];
+  const ideas: BlogPostIdea[] = [];
   
   for (let i = 0; i < count; i++) {
     ideas.push({
diff --git a/src/app/api/educator/data-visualisation/route.ts b/src/app/api/educator/data-visualisation/route.ts
index ffd296a..1b85fc5 100644
--- a/src/app/api/educator/data-visualisation/route.ts
+++ b/src/app/api/educator/data-visualisation/route.ts
@@ -32,7 +32,7 @@ const dataRequestSchema = z.object({
 
 // Define type for chart settings to avoid 'any'
 interface ChartSettings {
-  [key: string]: string | number | boolean | string: any: any[] | number: any: any[] | null;
+  [key: string]: string | number | boolean | string[] | number[] | null;
 }
 
 // Define type for filters to avoid 'any'
diff --git a/src/app/api/professional-development/cpd-tracking/route.ts b/src/app/api/professional-development/cpd-tracking/route.ts
index 8e7fe35..8de5eec 100644
--- a/src/app/api/professional-development/cpd-tracking/route.ts
+++ b/src/app/api/professional-development/cpd-tracking/route.ts
@@ -56,8 +56,8 @@ interface CPDActivityData {
   date: string;
   duration: number;
   points: number;
-  categories: number: any[];
-  standards: number: any[];
+  categories: number[];
+  standards: number[];
   status: 'Planned' | 'In Progress' | 'Completed';
   evidence?: string;
   reflection?: string;
@@ -68,8 +68,8 @@ interface CPDGoalData {
   title: string;
   description?: string;
   targetPoints: number;
-  categories: number: any[];
-  standards: number: any[];
+  categories: number[];
+  standards: number[];
   deadline: string;
 }
 
diff --git a/src/app/api/professional-development/learning-communities/route.ts b/src/app/api/professional-development/learning-communities/route.ts
index 4059fda..7d81240 100644
--- a/src/app/api/professional-development/learning-communities/route.ts
+++ b/src/app/api/professional-development/learning-communities/route.ts
@@ -6,9 +6,9 @@ export interface Community {
   id: string;
   name: string;
   description: string;
-  categories: string: any[];
+  categories: string[];
   privacy: "open" | "restricted";
-  schools?: string: any[];
+  schools?: string[];
   createdAt?: string;
   updatedAt?: string;
   createdBy?: string;
@@ -25,7 +25,7 @@ export interface Resource {
   title: string;
   description: string;
   type: string;
-  tags: string: any[];
+  tags: string[];
   fileUrl?: string;
   fileType?: string;
   fileSize?: number;
@@ -66,7 +66,7 @@ export interface Discussion {
   views?: number;
   lastReplyAt?: string;
   pinned?: boolean;
-  tags?: string: any[];
+  tags?: string[];
 }
 
 export interface Event {
@@ -84,7 +84,7 @@ export interface Event {
     school: string;
   };
   capacity?: number;
-  attendees?: string: any[];
+  attendees?: string[];
   attendeeCount?: number;
   createdAt?: string;
   updatedAt?: string;
@@ -96,8 +96,8 @@ export interface Collaboration {
   title: string;
   description: string;
   type: string;
-  schools: string: any[];
-  members?: string: any[];
+  schools: string[];
+  members?: string[];
   memberCount?: number;
   status: "Planning" | "In Progress" | "Completed";
   progress: number;
@@ -105,8 +105,8 @@ export interface Collaboration {
   createdAt?: string;
   updatedAt?: string;
   createdBy?: string;
-  resources?: string: any[];
-  discussions?: string: any[];
+  resources?: string[];
+  discussions?: string[];
 }
 
 export interface Membership {
@@ -128,7 +128,7 @@ export interface PrivacySetting {
   enableAnonymization: boolean;
   requireApproval: boolean;
   maintainAttribution: boolean;
-  approvedSchools?: string: any[];
+  approvedSchools?: string[];
 }
 
 // Schema definitions for Learning Communities API
@@ -264,13 +264,13 @@ const MembershipSchema = z.object({
 // Mock data storage (would be replaced with database in production)
 // Using the exported interfaces defined above
 
-const communities: Community: any[] = [];
-let resources: Resource: any[] = [];
-let discussions: Discussion: any[] = [];
-let events: Event: any[] = [];
-let collaborations: Collaboration: any[] = [];
-let memberships: Membership: any[] = [];
-let privacySettings: PrivacySetting: any[] = [];
+const communities: Community[] = [];
+let resources: Resource[] = [];
+let discussions: Discussion[] = [];
+let events: Event[] = [];
+let collaborations: Collaboration[] = [];
+let memberships: Membership[] = [];
+let privacySettings: PrivacySetting[] = [];
 
 // Integration with other professional development modules
 const integrateCPDActivity = async (userId: string, activityType: string, details): Promise<{success: boolean, points?: number, error?: string}> => {
@@ -295,7 +295,7 @@ const integratePortfolio = async (userId: string, portfolioItem): Promise<{succe
   }
 };
 
-const integrateMentorMatching = async (userId: string, expertise: string: any[]): Promise<{success: boolean, error?: string}> => {
+const integrateMentorMatching = async (userId: string, expertise: string[]): Promise<{success: boolean, error?: string}> => {
   try {
     // In a real implementation, this would call the Mentor Matching API
     console.log(`Updating expertise for user ${userId}: ${expertise.join(', ')}`);
diff --git a/src/app/api/professional-development/webinar/route.ts b/src/app/api/professional-development/webinar/route.ts
index 27f7355..0ae4f7c 100644
--- a/src/app/api/professional-development/webinar/route.ts
+++ b/src/app/api/professional-development/webinar/route.ts
@@ -38,7 +38,7 @@ interface WebinarCreateData {
   date: string;
   duration: number;
   capacity: number;
-  topics: string: any[];
+  topics: string[];
   level: 'Beginner' | 'Intermediate' | 'Advanced' | 'All Levels';
   recordingEnabled: boolean;
 }
diff --git a/src/app/api/resource/recommendations/route.ts b/src/app/api/resource/recommendations/route.ts
index 5884198..65ef9b4 100644
--- a/src/app/api/resource/recommendations/route.ts
+++ b/src/app/api/resource/recommendations/route.ts
@@ -26,7 +26,7 @@ interface ResourceRecommendation {
   type: string;
   file?: string;
   url?: string;
-  tags: string: any[];
+  tags: string[];
   ageRange: string;
   subject: string;
   curriculum: string;
@@ -43,7 +43,7 @@ interface RecommendationRequestData {
   contextContent?: string;
   manualQuery?: string;
   filters?: {
-    resourceTypes?: string: any[];
+    resourceTypes?: string[];
     ageRange?: string;
     subject?: string;
     curriculum?: string;
@@ -77,11 +77,11 @@ export async function POST(request: NextRequest): Promise<NextResponse> {
   }
 }
 
-function generateMockRecommendations(data: RecommendationRequestData): ResourceRecommendation: any: any[] {
+function generateMockRecommendations(data: RecommendationRequestData): ResourceRecommendation[] {
   const { contextSource, contextContent, manualQuery } = data;
   
   // Base set of resources
-  const resources: ResourceRecommendation: any[] = [
+  const resources: ResourceRecommendation[] = [
     {
       id: 'rec-1',
       title: 'Fractions Visual Models Collection',
diff --git a/src/app/api/resources/route.ts b/src/app/api/resources/route.ts
index a156c0d..2dd88ca 100644
--- a/src/app/api/resources/route.ts
+++ b/src/app/api/resources/route.ts
@@ -133,7 +133,7 @@ export async function POST(req: NextRequest) {
     }
 
     // Get files
-    const files = formData.getAll('files') as File: any: any[];
+    const files = formData.getAll('files') as File[];
     if (files.length === 0) {
       return NextResponse.json(
         { error: 'At least one file is required' },
diff --git a/src/app/api/restorative-justice/staff-training/certificate/route.ts b/src/app/api/restorative-justice/staff-training/certificate/route.ts
index 8ba4e60..f0b93b5 100644
--- a/src/app/api/restorative-justice/staff-training/certificate/route.ts
+++ b/src/app/api/restorative-justice/staff-training/certificate/route.ts
@@ -16,7 +16,7 @@ interface TrainingProgress {
   id: string;
   userId: string;
   moduleId: string;
-  completedSections: string: any[];
+  completedSections: string[];
   certificateIssued?: boolean;
 }
 
diff --git a/src/app/api/restorative-justice/staff-training/modules/route.ts b/src/app/api/restorative-justice/staff-training/modules/route.ts
index 249db82..dc48478 100644
--- a/src/app/api/restorative-justice/staff-training/modules/route.ts
+++ b/src/app/api/restorative-justice/staff-training/modules/route.ts
@@ -58,8 +58,8 @@ interface TrainingModule {
   duration: string;
   level: string;
   order: number;
-  sections: TrainingModuleSection: any[];
-  resources: TrainingModuleResource: any[];
+  sections: TrainingModuleSection[];
+  resources: TrainingModuleResource[];
 }
 
 // GET handler for retrieving modules
diff --git a/src/app/api/restorative-justice/staff-training/progress/route.ts b/src/app/api/restorative-justice/staff-training/progress/route.ts
index 2331b11..6ed2e28 100644
--- a/src/app/api/restorative-justice/staff-training/progress/route.ts
+++ b/src/app/api/restorative-justice/staff-training/progress/route.ts
@@ -20,7 +20,7 @@ interface TrainingProgress {
   userId: string;
   moduleId: string;
   lastAccessedAt: Date;
-  completedSections: string: any[];
+  completedSections: string[];
   certificateIssued?: boolean;
 }
 
diff --git a/src/app/api/special-needs/emotional-regulation/pattern-recognition/route.ts b/src/app/api/special-needs/emotional-regulation/pattern-recognition/route.ts
index ffda117..499f6cd 100644
--- a/src/app/api/special-needs/emotional-regulation/pattern-recognition/route.ts
+++ b/src/app/api/special-needs/emotional-regulation/pattern-recognition/route.ts
@@ -97,7 +97,7 @@ export async function GET(req: Request) {
 }
 
 // Function to generate pattern analysis from emotion data
-function generatePatternAnalysis(emotionRecords: any: any[], emotionJournals: any: any[], analysisType: string = 'all') {
+function generatePatternAnalysis(emotionRecords: any[], emotionJournals: any[], analysisType: string = 'all') {
   // Initialize analysis object
   const analysis = {
     insights: [] as Array<{
@@ -105,15 +105,15 @@ function generatePatternAnalysis(emotionRecords: any: any[], emotionJournals: an
       type: string;
       title: string;
       description: string;
-      [key: string];
+      [key: string]: any;
     }>,
     triggerPatterns: [] as Array<{
       trigger: string;
       total: number;
-      [key: string];
+      [key: string]: any;
     }>,
     timePatterns: { hourly: [] as Array<{hour: number, count: number}>, daily: [] as Array<{day: number, name: string, count: number}> },
-    emotionTrends: [] as Array<{date: string, [key: string]}>,
+    emotionTrends: [] as Array<{date: string, [key: string]: any}>,
     emotionCorrelations: [] as Array<{source: string, target: string, count: number, strength: number}>
   };
   
@@ -150,7 +150,7 @@ function generatePatternAnalysis(emotionRecords: any: any[], emotionJournals: an
 }
 
 // Helper function to generate insights
-function generateInsights(emotionRecords: any: any[]) {
+function generateInsights(emotionRecords: any[]) {
   const insights = [];
   
   // Most common emotion
@@ -174,7 +174,7 @@ function generateInsights(emotionRecords: any: any[]) {
   }
   
   // Highest intensity emotion
-  const emotionIntensities: Record<string, number: any: any[]> = {};
+  const emotionIntensities: Record<string, number[]> = {};
   emotionRecords.forEach(record => {
     if (!emotionIntensities[record.emotion]) {
       emotionIntensities[record.emotion] = [];
@@ -314,7 +314,7 @@ function generateInsights(emotionRecords: any: any[]) {
 }
 
 // Helper function to generate trigger patterns
-function generateTriggerPatterns(emotionRecords: any: any[]) {
+function generateTriggerPatterns(emotionRecords: any[]) {
   // Group emotions by triggers
   const triggerEmotions: Record<string, Record<string, number>> = {};
   
@@ -348,7 +348,7 @@ function generateTriggerPatterns(emotionRecords: any: any[]) {
 }
 
 // Helper function to generate time patterns
-function generateTimePatterns(emotionRecords: any: any[]) {
+function generateTimePatterns(emotionRecords: any[]) {
   // Group by hour of day
   const hourCounts = Array(24).fill(0).map((_, i) => ({ hour: i, count: 0 }));
   
@@ -376,7 +376,7 @@ function generateTimePatterns(emotionRecords: any: any[]) {
 }
 
 // Helper function to generate emotion trends
-function generateEmotionTrends(emotionRecords: any: any[]) {
+function generateEmotionTrends(emotionRecords: any[]) {
   // Group by date
   const dateEmotions: Record<string, Record<string, number>> = {};
   
@@ -402,7 +402,7 @@ function generateEmotionTrends(emotionRecords: any: any[]) {
 }
 
 // Helper function to generate emotion correlations
-function generateEmotionCorrelations(emotionRecords: any: any[]) {
+function generateEmotionCorrelations(emotionRecords: any[]) {
   // Find emotions that often occur together or in sequence
   const emotionPairs: Record<string, { source: string; target: string; count: number; strength: number }> = {};
   
@@ -495,8 +495,7 @@ export async function POST(req: Request) {
       data: {
         userId: session.user.id,
         action: 'update_pattern_recognition_settings',
-        details: body,
-        timestamp: new Date()
+        details: JSON.stringify(body)
       }
     });
     
diff --git a/src/app/api/special-needs/emotional-regulation/strategy-recommendations/route.ts b/src/app/api/special-needs/emotional-regulation/strategy-recommendations/route.ts
index 3b59561..e2e3257 100644
--- a/src/app/api/special-needs/emotional-regulation/strategy-recommendations/route.ts
+++ b/src/app/api/special-needs/emotional-regulation/strategy-recommendations/route.ts
@@ -234,7 +234,7 @@ export async function POST(req: Request) {
 }
 
 // Helper function to generate personalized recommendations
-function generatePersonalizedRecommendations(emotionRecords: any: any[], strategyHistory: any: any[], userSettings, params) {
+function generatePersonalizedRecommendations(emotionRecords: any[], strategyHistory: any[], userSettings: any, params: any) {
   // This would be replaced with actual recommendation logic in production
   // For now, we'll return a placeholder response
   
@@ -358,7 +358,7 @@ function generatePersonalizedRecommendations(emotionRecords: any: any[], strateg
     id: string;
     title: string;
     description: string;
-    steps: string: any[];
+    steps: string[];
     category: string;
     suitability: number;
     timeRequired: string;
diff --git a/src/app/api/special-needs/parent-teacher-communication/route.ts b/src/app/api/special-needs/parent-teacher-communication/route.ts
index fbb16e7..00e5ab7 100644
--- a/src/app/api/special-needs/parent-teacher-communication/route.ts
+++ b/src/app/api/special-needs/parent-teacher-communication/route.ts
@@ -79,7 +79,7 @@ export async function GET(request: Request) {
       title: string;
       date: string;
       duration: string;
-      participants: string: any[];
+      participants: string[];
       location: string;
       agenda?: string;
       emotionalFocus: string;
diff --git a/src/app/assessment/curriculum/align/page.tsx b/src/app/assessment/curriculum/align/page.tsx
index 38eb9f7..e2c2aae 100644
--- a/src/app/assessment/curriculum/align/page.tsx
+++ b/src/app/assessment/curriculum/align/page.tsx
@@ -44,9 +44,9 @@ export default function AlignAssessmentPage() {
   const [error, setError] = useState('');
   const [standard, setStandard] = useState<CurriculumStandard | null>(null);
   const [assessments, setAssessments] = useState<Assessment[]>([]);
-  const [filteredAssessments, setFilteredAssessments] = useState<Assessment: any[]>([]);
+  const [filteredAssessments, setFilteredAssessments] = useState<Assessment[]>([]);
   const [searchQuery, setSearchQuery] = useState('');
-  const [selectedAssessments, setSelectedAssessments] = useState<string: any[]>([]);
+  const [selectedAssessments, setSelectedAssessments] = useState<string[]>([]);
 
   useEffect(() => {
     const fetchData = async () => {
diff --git a/src/app/assessment/curriculum/page.tsx b/src/app/assessment/curriculum/page.tsx
index 5abb8e1..db82f96 100644
--- a/src/app/assessment/curriculum/page.tsx
+++ b/src/app/assessment/curriculum/page.tsx
@@ -24,8 +24,8 @@ export default function CurriculumAlignmentPage() {
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
   const [activeTab, setActiveTab] = useState('browse');
-  const [standards, setStandards] = useState<CurriculumStandard: any[]>([]);
-  const [filteredStandards, setFilteredStandards] = useState<CurriculumStandard: any[]>([]);
+  const [standards, setStandards] = useState<CurriculumStandard[]>([]);
+  const [filteredStandards, setFilteredStandards] = useState<CurriculumStandard[]>([]);
   const [searchQuery, setSearchQuery] = useState('');
   const [selectedSubject, setSelectedSubject] = useState('');
   const [selectedKeyStage, setSelectedKeyStage] = useState('');
diff --git a/src/app/assessment/grade/[id]/page.tsx b/src/app/assessment/grade/[id]/page.tsx
index d4bbf7a..16de36b 100644
--- a/src/app/assessment/grade/[id]/page.tsx
+++ b/src/app/assessment/grade/[id]/page.tsx
@@ -13,9 +13,9 @@ interface Question {
   id: string;
   type: string;
   content: string;
-  options?: any: any[];
-  items?: any: any[];
-  allowedFileTypes?: string: any[];
+  options?: any[];
+  items?: any[];
+  allowedFileTypes?: string[];
   maxFileSize?: number;
   wordLimit?: number;
   points: number;
@@ -47,7 +47,7 @@ interface Response {
   startedAt: string;
   completedAt: string;
   user: User;
-  answers: Answer: any[];
+  answers: Answer[];
 }
 
 interface Assessment {
@@ -63,7 +63,7 @@ interface Assessment {
   randomizeQuestions: boolean;
   allowRetakes: boolean;
   status: string;
-  questions: Question: any[];
+  questions: Question[];
   createdById: string;
   createdAt: string;
   updatedAt: string;
diff --git a/src/app/assessment/preview/[id]/page.tsx b/src/app/assessment/preview/[id]/page.tsx
index 68a3945..346f8b8 100644
--- a/src/app/assessment/preview/[id]/page.tsx
+++ b/src/app/assessment/preview/[id]/page.tsx
@@ -12,9 +12,9 @@ interface Question {
   id: string;
   type: string;
   content: string;
-  options?: any: any[];
-  items?: any: any[];
-  allowedFileTypes?: string: any[];
+  options?: any[];
+  items?: any[];
+  allowedFileTypes?: string[];
   maxFileSize?: number;
   wordLimit?: number;
   points: number;
@@ -33,7 +33,7 @@ interface Assessment {
   randomizeQuestions: boolean;
   allowRetakes: boolean;
   status: string;
-  questions: Question: any[];
+  questions: Question[];
   createdById: string;
   createdAt: string;
   updatedAt: string;
diff --git a/src/app/assessment/pupil-voice/create/page.tsx b/src/app/assessment/pupil-voice/create/page.tsx
index 04fb76b..44674fc 100644
--- a/src/app/assessment/pupil-voice/create/page.tsx
+++ b/src/app/assessment/pupil-voice/create/page.tsx
@@ -14,7 +14,7 @@ interface QuestionType {
   text: string;
   type: 'multiple_choice' | 'likert_scale' | 'open_ended' | 'emoji_scale' | 'yes_no';
   required: boolean;
-  options: string: any[];
+  options: string[];
   order: number;
 }
 
@@ -28,7 +28,7 @@ export default function CreatePupilVoiceSurveyPage() {
   const [error, setError] = useState('');
   const [title, setTitle] = useState('');
   const [description, setDescription] = useState('');
-  const [questions, setQuestions] = useState<QuestionType: any[]>([]);
+  const [questions, setQuestions] = useState<QuestionType[]>([]);
   const [activeQuestionIndex, setActiveQuestionIndex] = useState<number | null>(null);
   const [currentStep, setCurrentStep] = useState(1);
 
diff --git a/src/app/assessment/pupil-voice/page.tsx b/src/app/assessment/pupil-voice/page.tsx
index b937738..5468315 100644
--- a/src/app/assessment/pupil-voice/page.tsx
+++ b/src/app/assessment/pupil-voice/page.tsx
@@ -15,8 +15,8 @@ export default function PupilVoicePage() {
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
   const [activeTab, setActiveTab] = useState('surveys');
-  const [surveys, setSurveys] = useState<PupilVoiceSurvey: any[]>([]);
-  const [filteredSurveys, setFilteredSurveys] = useState<PupilVoiceSurvey: any[]>([]);
+  const [surveys, setSurveys] = useState<PupilVoiceSurvey[]>([]);
+  const [filteredSurveys, setFilteredSurveys] = useState<PupilVoiceSurvey[]>([]);
   const [searchQuery, setSearchQuery] = useState('');
   const [selectedStatus, setSelectedStatus] = useState('all');
 
diff --git a/src/app/assessment/pupil-voice/preview/[id]/page.tsx b/src/app/assessment/pupil-voice/preview/[id]/page.tsx
index 733ba6f..42fa507 100644
--- a/src/app/assessment/pupil-voice/preview/[id]/page.tsx
+++ b/src/app/assessment/pupil-voice/preview/[id]/page.tsx
@@ -17,7 +17,7 @@ export default function PreviewPupilVoiceSurveyPage() {
   const [error, setError] = useState('');
   const [survey, setSurvey] = useState<any>(null);
   const [activeTab, setActiveTab] = useState('preview');
-  const [responses, setResponses] = useState<any: any[]>([]);
+  const [responses, setResponses] = useState<any[]>([]);
   
   useEffect(() => {
     const fetchSurvey = async () => {
diff --git a/src/app/assessment/pupil-voice/results/[id]/page.tsx b/src/app/assessment/pupil-voice/results/[id]/page.tsx
index 996a6f6..b49d158 100644
--- a/src/app/assessment/pupil-voice/results/[id]/page.tsx
+++ b/src/app/assessment/pupil-voice/results/[id]/page.tsx
@@ -16,7 +16,7 @@ export default function PupilVoiceResultsPage() {
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
   const [survey, setSurvey] = useState<any>(null);
-  const [responses, setResponses] = useState<any: any[]>([]);
+  const [responses, setResponses] = useState<any[]>([]);
   const [activeTab, setActiveTab] = useState('overview');
   
   useEffect(() => {
diff --git a/src/app/assessment/results/[id]/page.tsx b/src/app/assessment/results/[id]/page.tsx
index ac419cf..53ed92f 100644
--- a/src/app/assessment/results/[id]/page.tsx
+++ b/src/app/assessment/results/[id]/page.tsx
@@ -43,7 +43,7 @@ interface Response {
   startedAt: string;
   completedAt: string;
   user: User;
-  answers: Answer: any[];
+  answers: Answer[];
 }
 
 interface Assessment {
@@ -54,8 +54,8 @@ interface Assessment {
   subject: string;
   keyStage: string;
   passingScore: number;
-  questions: Question: any[];
-  responses: Response: any[];
+  questions: Question[];
+  responses: Response[];
 }
 
 export default function AssessmentResultsPage() {
@@ -132,7 +132,7 @@ export default function AssessmentResultsPage() {
         highestScore: 0,
         lowestScore: 0,
         medianScore: 0,
-        scoreDistribution: [] as number: any: any[],
+        scoreDistribution: [] as number[],
         questionSuccessRates: [] as { question: string; rate: number }[]
       };
     }
diff --git a/src/app/assessment/take/[id]/page.tsx b/src/app/assessment/take/[id]/page.tsx
index 2694ea5..6d9f31b 100644
--- a/src/app/assessment/take/[id]/page.tsx
+++ b/src/app/assessment/take/[id]/page.tsx
@@ -12,9 +12,9 @@ interface Question {
   id: string;
   type: string;
   content: string;
-  options?: any: any[];
-  items?: any: any[];
-  allowedFileTypes?: string: any[];
+  options?: any[];
+  items?: any[];
+  allowedFileTypes?: string[];
   maxFileSize?: number;
   wordLimit?: number;
   points: number;
@@ -34,7 +34,7 @@ interface Assessment {
   randomizeQuestions: boolean;
   allowRetakes: boolean;
   status: string;
-  questions: Question: any[];
+  questions: Question[];
   createdById: string;
   createdAt: string;
   updatedAt: string;
diff --git a/src/app/assessment/templates/page.tsx b/src/app/assessment/templates/page.tsx
index c8b17b1..3dd90b7 100644
--- a/src/app/assessment/templates/page.tsx
+++ b/src/app/assessment/templates/page.tsx
@@ -23,7 +23,7 @@ interface Template {
   };
   createdAt: string;
   isPublic: boolean;
-  tags: string: any[];
+  tags: string[];
   previewImage?: string;
 }
 
@@ -31,8 +31,8 @@ export default function AssessmentTemplatesPage() {
   const router = useRouter();
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
-  const [templates, setTemplates] = useState<Template: any[]>([]);
-  const [filteredTemplates, setFilteredTemplates] = useState<Template: any[]>([]);
+  const [templates, setTemplates] = useState<Template[]>([]);
+  const [filteredTemplates, setFilteredTemplates] = useState<Template[]>([]);
   const [activeTab, setActiveTab] = useState('all');
   const [searchQuery, setSearchQuery] = useState('');
   const [selectedSubject, setSelectedSubject] = useState('');
diff --git a/src/app/curriculum/collaboration/page.tsx b/src/app/curriculum/collaboration/page.tsx
index 9551707..94af669 100644
--- a/src/app/curriculum/collaboration/page.tsx
+++ b/src/app/curriculum/collaboration/page.tsx
@@ -50,7 +50,7 @@ interface Plan {
   id: string;
   title: string;
   description: string;
-  tasks: Task: any[];
+  tasks: Task[];
 }
 
 interface CollaborationData {
@@ -60,8 +60,8 @@ interface CollaborationData {
   createdAt: string;
   updatedAt: string;
   createdBy: User;
-  collaborators: Collaborator: any[];
-  comments: Comment: any[];
+  collaborators: Collaborator[];
+  comments: Comment[];
   plan: Plan;
 }
 
@@ -153,7 +153,7 @@ export default function CollaborationPage() {
           comments: [
             {
               id: 'comment-1',
-              content: 'I've added some resources for the electricity unit in the shared folder.',
+              content: 'I\'ve added some resources for the electricity unit in the shared folder.',
               createdAt: '2025-05-08T09:15:00Z',
               author: {
                 id: 'user-2',
@@ -164,7 +164,7 @@ export default function CollaborationPage() {
             },
             {
               id: 'comment-2',
-              content: 'The practical experiment for the water cycle looks great! I've made some minor adjustments to make it more accessible.',
+              content: 'The practical experiment for the water cycle looks great! I\'ve made some minor adjustments to make it more accessible.',
               createdAt: '2025-05-09T14:30:00Z',
               author: {
                 id: 'user-1',
@@ -455,18 +455,15 @@ export default function CollaborationPage() {
                           <div className="text-xs text-muted-foreground">{collaborator.user.email}</div>
                         </div>
                       </div>
-                      <Badge variant={collaborator.role === 'owner' ? 'default' : 'outline'}>
-                        {collaborator.role.charAt(0).toUpperCase() + collaborator.role.slice(1)}
+                      <Badge variant={
+                        collaborator.role === 'owner' ? 'default' :
+                        collaborator.role === 'editor' ? 'secondary' :
+                        'outline'
+                      }>
+                        {collaborator.role}
                       </Badge>
                     </div>
                   ))}
-                  
-                  {canEdit && (
-                    <Button variant="outline" className="w-full mt-2">
-                      <Users className="h-4 w-4 mr-2" />
-                      Invite Collaborator
-                    </Button>
-                  )}
                 </div>
               </CardContent>
             </Card>
@@ -477,37 +474,33 @@ export default function CollaborationPage() {
           <Card>
             <CardHeader>
               <CardTitle>Discussion</CardTitle>
-              <CardDescription>Collaborate and share ideas with your team</CardDescription>
+              <CardDescription>Collaborate and share ideas</CardDescription>
             </CardHeader>
             <CardContent>
               <div className="space-y-6">
                 {comments.map(comment => (
                   <div key={comment.id} className="flex items-start">
-                    <div className="mr-4">
-                      <Avatar>
-                        <AvatarImage src={comment.author.image} alt={comment.author.name} />
-                        <AvatarFallback>{comment.author.name.charAt(0)}</AvatarFallback>
-                      </Avatar>
-                    </div>
+                    <Avatar className="h-10 w-10 mr-4">
+                      <AvatarImage src={comment.author.image} alt={comment.author.name} />
+                      <AvatarFallback>{comment.author.name.charAt(0)}</AvatarFallback>
+                    </Avatar>
                     <div className="flex-1">
-                      <div className="flex items-center">
+                      <div className="flex items-center justify-between">
                         <div className="font-medium">{comment.author.name}</div>
-                        <div className="text-xs text-muted-foreground ml-2">
+                        <div className="text-xs text-muted-foreground">
                           {new Date(comment.createdAt).toLocaleString()}
                         </div>
                       </div>
-                      <div className="mt-1">{comment.content}</div>
+                      <p className="mt-1">{comment.content}</p>
                     </div>
                   </div>
                 ))}
                 
                 <div className="pt-4 border-t">
                   <div className="flex items-start">
-                    <div className="mr-4">
-                      <Avatar>
-                        <AvatarFallback>{currentUser.name.charAt(0)}</AvatarFallback>
-                      </Avatar>
-                    </div>
+                    <Avatar className="h-10 w-10 mr-4">
+                      <AvatarFallback>{currentUser.name.charAt(0)}</AvatarFallback>
+                    </Avatar>
                     <div className="flex-1">
                       <Textarea
                         placeholder="Add a comment..."
@@ -515,10 +508,7 @@ export default function CollaborationPage() {
                         onChange={(e) => setNewComment(e.target.value)}
                         className="mb-2"
                       />
-                      <Button onClick={handleAddComment} disabled={!newComment.trim()}>
-                        <MessageSquare className="h-4 w-4 mr-2" />
-                        Post Comment
-                      </Button>
+                      <Button onClick={handleAddComment}>Post Comment</Button>
                     </div>
                   </div>
                 </div>
@@ -529,243 +519,191 @@ export default function CollaborationPage() {
         
         <TabsContent value="tasks">
           <Card>
-            <CardHeader>
-              <div className="flex justify-between items-center">
-                <div>
-                  <CardTitle>{plan.title}</CardTitle>
-                  <CardDescription>{plan.description}</CardDescription>
-                </div>
-                
-                {canEdit && (
-                  <Dialog open={isAddingTask} onOpenChange={setIsAddingTask}>
-                    <DialogTrigger asChild>
-                      <Button>
-                        <Plus className="h-4 w-4 mr-2" />
-                        Add Task
-                      </Button>
-                    </DialogTrigger>
-                    <DialogContent>
-                      <DialogHeader>
-                        <DialogTitle>Add New Task</DialogTitle>
-                      </DialogHeader>
-                      <div className="space-y-4 py-4">
-                        <div>
-                          <label htmlFor="title" className="block text-sm font-medium mb-1">
-                            Task Title
-                          </label>
-                          <Input
-                            id="title"
-                            value={newTask.title}
-                            onChange={(e) => setNewTask({...newTask, title: e.target.value})}
-                            placeholder="Enter task title"
-                          />
-                        </div>
-                        
-                        <div>
-                          <label htmlFor="description" className="block text-sm font-medium mb-1">
-                            Description
-                          </label>
-                          <Textarea
-                            id="description"
-                            value={newTask.description}
-                            onChange={(e) => setNewTask({...newTask, description: e.target.value})}
-                            placeholder="Enter task description"
-                          />
-                        </div>
-                        
-                        <div>
-                          <label htmlFor="assignee" className="block text-sm font-medium mb-1">
-                            Assign To
-                          </label>
-                          <Select
-                            value={newTask.assignedToId}
-                            onValueChange={(value) => setNewTask({...newTask, assignedToId: value})}
-                          >
-                            <SelectTrigger>
-                              <SelectValue placeholder="Select assignee" />
-                            </SelectTrigger>
-                            <SelectContent>
-                              {collaborators.map(collaborator => (
-                                <SelectItem key={collaborator.userId} value={collaborator.userId}>
-                                  {collaborator.user.name}
-                                </SelectItem>
-                              ))}
-                            </SelectContent>
-                          </Select>
-                        </div>
-                        
-                        <div>
-                          <label htmlFor="dueDate" className="block text-sm font-medium mb-1">
-                            Due Date
-                          </label>
-                          <Popover>
-                            <PopoverTrigger asChild>
-                              <Button
-                                variant="outline"
-                                className="w-full justify-start text-left font-normal"
-                              >
-                                <CalendarIcon className="mr-2 h-4 w-4" />
-                                {newTask.dueDate ? format(newTask.dueDate, 'PPP') : <span>Pick a date</span>}
-                              </Button>
-                            </PopoverTrigger>
-                            <PopoverContent className="w-auto p-0">
-                              <Calendar
-                                mode="single"
-                                selected={newTask.dueDate || undefined}
-                                onSelect={(date) => setNewTask({...newTask, dueDate: date})}
-                                initialFocus
-                              />
-                            </PopoverContent>
-                          </Popover>
-                        </div>
-                        
-                        <div className="flex justify-end space-x-2 pt-4">
-                          <Button variant="outline" onClick={() => setIsAddingTask(false)}>
-                            Cancel
-                          </Button>
-                          <Button onClick={handleAddTask} disabled={!newTask.title.trim()}>
-                            Add Task
-                          </Button>
-                        </div>
-                      </div>
-                    </DialogContent>
-                  </Dialog>
-                )}
+            <CardHeader className="flex flex-row items-center justify-between">
+              <div>
+                <CardTitle>Tasks</CardTitle>
+                <CardDescription>Track and manage project tasks</CardDescription>
               </div>
+              {canEdit && (
+                <Button onClick={() => setIsAddingTask(true)} size="sm">
+                  <Plus className="mr-1 h-4 w-4" /> Add Task
+                </Button>
+              )}
             </CardHeader>
             <CardContent>
-              <div className="space-y-6">
+              <div className="space-y-4">
                 {tasks.length === 0 ? (
-                  <div className="text-center py-8">
-                    <p className="text-muted-foreground">No tasks yet</p>
-                    {canEdit && (
-                      <Button
-                        variant="outline"
-                        className="mt-4"
-                        onClick={() => setIsAddingTask(true)}
-                      >
-                        <Plus className="h-4 w-4 mr-2" />
-                        Add Your First Task
-                      </Button>
-                    )}
+                  <div className="text-center py-8 text-muted-foreground">
+                    No tasks yet. Add a task to get started.
                   </div>
                 ) : (
-                  <div className="space-y-6">
-                    {/* Pending Tasks */}
-                    <div>
-                      <h3 className="font-medium mb-3">Pending Tasks</h3>
-                      {tasks.filter(t => t.status === 'pending').length === 0 ? (
-                        <p className="text-sm text-muted-foreground">No pending tasks</p>
-                      ) : (
-                        tasks
-                          .filter(t => t.status === 'pending')
-                          .map((task) => (
-                            <div key={task.id} className="border rounded-lg p-4 mb-3">
-                              <div className="flex justify-between items-start">
-                                <div>
+                  <div>
+                    <h3 className="font-medium mb-2">Pending Tasks</h3>
+                    <div className="space-y-2">
+                      {tasks.filter(task => task.status === 'pending').map(task => (
+                        <Card key={task.id}>
+                          <CardContent className="p-4">
+                            <div className="flex items-start justify-between">
+                              <div className="flex-1">
+                                <div className="flex items-center">
+                                  <input
+                                    type="checkbox"
+                                    className="mr-2"
+                                    onChange={() => handleUpdateTaskStatus(task.id, 'completed')}
+                                  />
                                   <h4 className="font-medium">{task.title}</h4>
-                                  <p className="text-sm text-muted-foreground mt-1">{task.description}</p>
                                 </div>
-                                {canEdit && (
-                                  <Button
-                                    size="icon"
-                                    variant="ghost"
-                                    onClick={() => handleDeleteTask(task.id)}
-                                  >
-                                    <Trash2 className="h-4 w-4 text-muted-foreground" />
-                                  </Button>
-                                )}
-                              </div>
-                              <div className="flex flex-wrap items-center gap-2 mt-4">
-                                {task.assignedTo && (
-                                  <div className="flex items-center">
-                                    <Avatar className="h-6 w-6 mr-1">
-                                      <AvatarImage src={task.assignedTo.image} alt={task.assignedTo.name} />
-                                      <AvatarFallback>{task.assignedTo.name?.charAt(0) || 'U'}</AvatarFallback>
-                                    </Avatar>
-                                    <span className="text-xs">{task.assignedTo.name}</span>
-                                  </div>
-                                )}
-                                {task.dueDate && (
-                                  <Badge variant="outline" className="flex items-center">
-                                    <Clock className="h-3 w-3 mr-1" />
-                                    <span className="text-xs">
-                                      Due {new Date(task.dueDate).toLocaleDateString()}
-                                    </span>
-                                  </Badge>
-                                )}
-                                {canEdit && (
-                                  <Button
-                                    size="sm"
-                                    variant="outline"
-                                    className="ml-auto"
-                                    onClick={() => handleUpdateTaskStatus(task.id, 'completed')}
-                                  >
-                                    Mark Complete
-                                  </Button>
-                                )}
+                                <p className="text-sm text-muted-foreground mt-1">{task.description}</p>
+                                <div className="flex items-center mt-2 text-xs text-muted-foreground">
+                                  {task.assignedTo && (
+                                    <div className="flex items-center mr-4">
+                                      <Users className="mr-1 h-3 w-3" />
+                                      {task.assignedTo.name}
+                                    </div>
+                                  )}
+                                  {task.dueDate && (
+                                    <div className="flex items-center">
+                                      <Clock className="mr-1 h-3 w-3" />
+                                      Due: {new Date(task.dueDate).toLocaleDateString()}
+                                    </div>
+                                  )}
+                                </div>
                               </div>
+                              {canEdit && (
+                                <Button
+                                  variant="ghost"
+                                  size="icon"
+                                  onClick={() => handleDeleteTask(task.id)}
+                                >
+                                  <Trash2 className="h-4 w-4" />
+                                </Button>
+                              )}
                             </div>
-                          ))
-                      )}
+                          </CardContent>
+                        </Card>
+                      ))}
                     </div>
                     
-                    {/* Completed Tasks */}
-                    <div>
-                      <h3 className="font-medium mb-3">Completed Tasks</h3>
-                      {tasks.filter(t => t.status === 'completed').length === 0 ? (
-                        <p className="text-sm text-muted-foreground">No completed tasks</p>
-                      ) : (
-                        tasks
-                          .filter(t => t.status === 'completed')
-                          .map((task) => (
-                            <div key={task.id} className="border rounded-lg p-4 mb-3 bg-muted/30">
-                              <div className="flex justify-between items-start">
-                                <div>
-                                  <h4 className="font-medium line-through">{task.title}</h4>
-                                  <p className="text-sm text-muted-foreground mt-1">{task.description}</p>
+                    <h3 className="font-medium mb-2 mt-6">Completed Tasks</h3>
+                    <div className="space-y-2">
+                      {tasks.filter(task => task.status === 'completed').map(task => (
+                        <Card key={task.id}>
+                          <CardContent className="p-4">
+                            <div className="flex items-start justify-between">
+                              <div className="flex-1">
+                                <div className="flex items-center">
+                                  <input
+                                    type="checkbox"
+                                    className="mr-2"
+                                    checked
+                                    onChange={() => handleUpdateTaskStatus(task.id, 'pending')}
+                                  />
+                                  <h4 className="font-medium line-through text-muted-foreground">{task.title}</h4>
+                                </div>
+                                <p className="text-sm text-muted-foreground mt-1">{task.description}</p>
+                                <div className="flex items-center mt-2 text-xs text-muted-foreground">
+                                  {task.assignedTo && (
+                                    <div className="flex items-center mr-4">
+                                      <Users className="mr-1 h-3 w-3" />
+                                      {task.assignedTo.name}
+                                    </div>
+                                  )}
                                 </div>
-                                {canEdit && (
-                                  <Button
-                                    size="icon"
-                                    variant="ghost"
-                                    onClick={() => handleDeleteTask(task.id)}
-                                  >
-                                    <Trash2 className="h-4 w-4 text-muted-foreground" />
-                                  </Button>
-                                )}
-                              </div>
-                              <div className="flex flex-wrap items-center gap-2 mt-4">
-                                {task.assignedTo && (
-                                  <div className="flex items-center">
-                                    <Avatar className="h-6 w-6 mr-1">
-                                      <AvatarImage src={task.assignedTo.image} alt={task.assignedTo.name} />
-                                      <AvatarFallback>{task.assignedTo.name?.charAt(0) || 'U'}</AvatarFallback>
-                                    </Avatar>
-                                    <span className="text-xs">{task.assignedTo.name}</span>
-                                  </div>
-                                )}
-                                <Badge variant="secondary">Completed</Badge>
-                                {canEdit && (
-                                  <Button
-                                    size="sm"
-                                    variant="outline"
-                                    className="ml-auto"
-                                    onClick={() => handleUpdateTaskStatus(task.id, 'pending')}
-                                  >
-                                    Reopen
-                                  </Button>
-                                )}
                               </div>
+                              {canEdit && (
+                                <Button
+                                  variant="ghost"
+                                  size="icon"
+                                  onClick={() => handleDeleteTask(task.id)}
+                                >
+                                  <Trash2 className="h-4 w-4" />
+                                </Button>
+                              )}
                             </div>
-                          ))
-                      )}
+                          </CardContent>
+                        </Card>
+                      ))}
                     </div>
                   </div>
                 )}
               </div>
             </CardContent>
           </Card>
+          
+          {isAddingTask && (
+            <Dialog open={isAddingTask} onOpenChange={setIsAddingTask}>
+              <DialogContent>
+                <DialogHeader>
+                  <DialogTitle>Add New Task</DialogTitle>
+                </DialogHeader>
+                <div className="space-y-4 py-4">
+                  <div>
+                    <Label htmlFor="task-title">Title</Label>
+                    <Input
+                      id="task-title"
+                      value={newTask.title}
+                      onChange={(e) => setNewTask({...newTask, title: e.target.value})}
+                      placeholder="Task title"
+                    />
+                  </div>
+                  <div>
+                    <Label htmlFor="task-description">Description</Label>
+                    <Textarea
+                      id="task-description"
+                      value={newTask.description}
+                      onChange={(e) => setNewTask({...newTask, description: e.target.value})}
+                      placeholder="Task description"
+                    />
+                  </div>
+                  <div>
+                    <Label htmlFor="task-assignee">Assign To</Label>
+                    <Select
+                      value={newTask.assignedToId}
+                      onValueChange={(value) => setNewTask({...newTask, assignedToId: value})}
+                    >
+                      <SelectTrigger id="task-assignee">
+                        <SelectValue placeholder="Select person" />
+                      </SelectTrigger>
+                      <SelectContent>
+                        {collaborators.map(collaborator => (
+                          <SelectItem key={collaborator.userId} value={collaborator.userId}>
+                            {collaborator.user.name}
+                          </SelectItem>
+                        ))}
+                      </SelectContent>
+                    </Select>
+                  </div>
+                  <div>
+                    <Label htmlFor="task-due-date">Due Date</Label>
+                    <Popover>
+                      <PopoverTrigger asChild>
+                        <Button
+                          variant="outline"
+                          className="w-full justify-start text-left font-normal"
+                          id="task-due-date"
+                        >
+                          <CalendarIcon className="mr-2 h-4 w-4" />
+                          {newTask.dueDate ? format(newTask.dueDate, 'PPP') : <span>Pick a date</span>}
+                        </Button>
+                      </PopoverTrigger>
+                      <PopoverContent className="w-auto p-0">
+                        <Calendar
+                          mode="single"
+                          selected={newTask.dueDate || undefined}
+                          onSelect={(date) => setNewTask({...newTask, dueDate: date})}
+                          initialFocus
+                        />
+                      </PopoverContent>
+                    </Popover>
+                  </div>
+                </div>
+                <div className="flex justify-end space-x-2">
+                  <Button variant="outline" onClick={() => setIsAddingTask(false)}>Cancel</Button>
+                  <Button onClick={handleAddTask}>Add Task</Button>
+                </div>
+              </DialogContent>
+            </Dialog>
+          )}
         </TabsContent>
       </Tabs>
     </div>
diff --git a/src/app/immersive-learning/page.tsx b/src/app/immersive-learning/page.tsx
index c5d37da..57e06a5 100644
--- a/src/app/immersive-learning/page.tsx
+++ b/src/app/immersive-learning/page.tsx
@@ -73,7 +73,7 @@ export default function ImmersiveLearningPage() {
   const [isVRMode, setIsVRMode] = React.useState(false);
   
   // Mock data for immersive experiences
-  const experiences: ImmersiveExperience: any[] = [
+  const experiences: ImmersiveExperience[] = [
     {
       id: '1',
       title: 'Solar System Explorer',
diff --git a/src/app/innovations/ai-powered-assessment/page.tsx b/src/app/innovations/ai-powered-assessment/page.tsx
index 76553fd..e2ce90a 100644
--- a/src/app/innovations/ai-powered-assessment/page.tsx
+++ b/src/app/innovations/ai-powered-assessment/page.tsx
@@ -42,8 +42,8 @@ interface AssessmentQuestion {
   type: 'multiple-choice' | 'short-answer' | 'essay' | 'interactive';
   difficulty: number;
   question: string;
-  options?: string: any[];
-  correctAnswer?: string | string: any: any[];
+  options?: string[];
+  correctAnswer?: string | string[];
   rubric?: {
     criteria: string;
     levels: {
@@ -51,10 +51,10 @@ interface AssessmentQuestion {
       description: string;
     }[];
   }[];
-  conceptTags: string: any[];
+  conceptTags: string[];
   adaptiveFollowUp?: {
-    correct: string: any[];
-    incorrect: string: any[];
+    correct: string[];
+    incorrect: string[];
   };
 }
 
@@ -108,7 +108,7 @@ export default function AIPoweredAssessmentPage() {
   const [results, setResults] = useState<AssessmentResult[]>([]);
   
   // State for concept mastery
-  const [conceptMastery, setConceptMastery] = useState<ConceptMastery: any[]>([
+  const [conceptMastery, setConceptMastery] = useState<ConceptMastery[]>([
     {
       concept: "Algebraic Expressions",
       mastery: 85,
@@ -154,7 +154,7 @@ export default function AIPoweredAssessmentPage() {
   ]);
   
   // Sample assessment questions
-  const [questions, setQuestions] = useState<AssessmentQuestion: any[]>([
+  const [questions, setQuestions] = useState<AssessmentQuestion[]>([
     {
       id: "q1",
       type: "multiple-choice",
@@ -277,7 +277,7 @@ export default function AIPoweredAssessmentPage() {
       } else if ((currentQuestion.type === 'short-answer' || currentQuestion.type === 'essay') && textAnswer) {
         // Simulate AI evaluation for text answers
         if (currentQuestion.type === 'short-answer') {
-          const possibleAnswers = currentQuestion.correctAnswer as string: any: any[];
+          const possibleAnswers = currentQuestion.correctAnswer as string[];
           isCorrect = possibleAnswers.some(answer => 
             textAnswer.toLowerCase().includes(answer.toLowerCase())
           );
diff --git a/src/app/innovations/digital-twin-companion/page.tsx b/src/app/innovations/digital-twin-companion/page.tsx
index bf79ea0..77e4fdb 100644
--- a/src/app/innovations/digital-twin-companion/page.tsx
+++ b/src/app/innovations/digital-twin-companion/page.tsx
@@ -30,13 +30,13 @@ import {
 // This component demonstrates the concept of a persistent AI companion that evolves with the learner
 
 interface LearningProfile {
-  strengths: string: any[];
-  challenges: string: any[];
-  interests: string: any[];
+  strengths: string[];
+  challenges: string[];
+  interests: string[];
   learningStyle: 'visual' | 'auditory' | 'reading/writing' | 'kinesthetic' | 'multimodal';
   pacePreference: 'accelerated' | 'standard' | 'deliberate';
-  motivationFactors: string: any[];
-  recentTopics: string: any[];
+  motivationFactors: string[];
+  recentTopics: string[];
   skillLevels: Record<string, number>;
 }
 
diff --git a/src/app/innovations/immersive-learning-environments/page.tsx b/src/app/innovations/immersive-learning-environments/page.tsx
index 52b6605..d4687e3 100644
--- a/src/app/innovations/immersive-learning-environments/page.tsx
+++ b/src/app/innovations/immersive-learning-environments/page.tsx
@@ -135,7 +135,7 @@ export default function ImmersiveLearningEnvironmentsPage() {
     // Create particles based on active environment
     const createParticles = () => {
       particles = [];
-      let colorScheme: string: any[] = [];
+      let colorScheme: string[] = [];
       
       switch(activeTab) {
         case 'rainforest':
diff --git a/src/app/innovations/multilingual-support/page.tsx b/src/app/innovations/multilingual-support/page.tsx
index bac4c7e..fb77298 100644
--- a/src/app/innovations/multilingual-support/page.tsx
+++ b/src/app/innovations/multilingual-support/page.tsx
@@ -40,7 +40,7 @@ interface LanguageOption {
   nativeName: string;
   flag: string;
   supportLevel: 'full' | 'partial' | 'machine';
-  availableFeatures: string: any[];
+  availableFeatures: string[];
 }
 
 interface TranslationExample {
@@ -79,7 +79,7 @@ export default function MultilingualSupportPage() {
   const [culturalSensitivityEnabled, setCulturalSensitivityEnabled] = useState(true);
   
   // Available languages
-  const languages: LanguageOption: any[] = [
+  const languages: LanguageOption[] = [
     {
       code: 'en-GB',
       name: 'English (UK)',
@@ -179,7 +179,7 @@ export default function MultilingualSupportPage() {
   ];
   
   // Translation examples
-  const translationExamples: TranslationExample: any[] = [
+  const translationExamples: TranslationExample[] = [
     {
       original: "Today we're going to learn about fractions and how they relate to everyday life.",
       translated: "Aujourd'hui, nous allons apprendre les fractions et comment elles se rapportent à la vie quotidienne.",
diff --git a/src/app/innovations/parent-portal/page.tsx b/src/app/innovations/parent-portal/page.tsx
index 57791b3..af1f9fe 100644
--- a/src/app/innovations/parent-portal/page.tsx
+++ b/src/app/innovations/parent-portal/page.tsx
@@ -85,7 +85,7 @@ interface HomeworkItem {
   status: 'not-started' | 'in-progress' | 'completed' | 'submitted' | 'late' | 'graded';
   grade?: string;
   feedback?: string;
-  attachments?: string: any[];
+  attachments?: string[];
 }
 
 interface MessageThread {
@@ -136,7 +136,7 @@ export default function ParentPortalPage() {
   ]);
   
   // Activity updates
-  const [activityUpdates, setActivityUpdates] = useState<ActivityUpdate: any[]>([
+  const [activityUpdates, setActivityUpdates] = useState<ActivityUpdate[]>([
     {
       id: 'act1',
       childId: 'child1',
@@ -211,7 +211,7 @@ export default function ParentPortalPage() {
   ]);
   
   // Upcoming events
-  const [upcomingEvents, setUpcomingEvents] = useState<UpcomingEvent: any[]>([
+  const [upcomingEvents, setUpcomingEvents] = useState<UpcomingEvent[]>([
     {
       id: 'event1',
       title: 'Parent-Teacher Evening',
@@ -263,7 +263,7 @@ export default function ParentPortalPage() {
   ]);
   
   // Homework items
-  const [homeworkItems, setHomeworkItems] = useState<HomeworkItem: any[]>([
+  const [homeworkItems, setHomeworkItems] = useState<HomeworkItem[]>([
     {
       id: 'hw1',
       childId: 'child1',
@@ -323,7 +323,7 @@ export default function ParentPortalPage() {
   ]);
   
   // Message threads
-  const [messageThreads, setMessageThreads] = useState<MessageThread: any[]>([
+  const [messageThreads, setMessageThreads] = useState<MessageThread[]>([
     {
       id: 'msg1',
       with: 'Ms. Williams',
diff --git a/src/app/innovations/personalized-learning-pathways/page.tsx b/src/app/innovations/personalized-learning-pathways/page.tsx
index bebd750..612195a 100644
--- a/src/app/innovations/personalized-learning-pathways/page.tsx
+++ b/src/app/innovations/personalized-learning-pathways/page.tsx
@@ -46,13 +46,13 @@ interface LearnerProfile {
   name: string;
   age: number;
   educationLevel: string;
-  interests: string: any[];
-  strengths: string: any[];
-  areasForGrowth: string: any[];
+  interests: string[];
+  strengths: string[];
+  areasForGrowth: string[];
   learningStyle: LearningStyle;
   priorKnowledge: Record<string, number>;
-  learningGoals: string: any[];
-  accessibilityNeeds: string: any[];
+  learningGoals: string[];
+  accessibilityNeeds: string[];
 }
 
 interface LearningModule {
@@ -62,9 +62,9 @@ interface LearningModule {
   subject: string;
   difficulty: number;
   estimatedTime: number;
-  prerequisites: string: any[];
-  learningOutcomes: string: any[];
-  format: string: any[];
+  prerequisites: string[];
+  learningOutcomes: string[];
+  format: string[];
   engagementLevel: number;
   completionStatus: number;
 }
@@ -104,7 +104,7 @@ export default function PersonalizedLearningPathwaysPage() {
   });
   
   // State for learning modules
-  const [learningModules, setLearningModules] = useState<LearningModule: any[]>([
+  const [learningModules, setLearningModules] = useState<LearningModule[]>([
     {
       id: "math-001",
       title: "Algebraic Expressions and Equations",
@@ -193,7 +193,7 @@ export default function PersonalizedLearningPathwaysPage() {
   ]);
   
   // State for recommended pathway
-  const [recommendedPathway, setRecommendedPathway] = useState<string: any[]>(["sci-042", "math-001", "hist-019", "rob-007", "eng-023"]);
+  const [recommendedPathway, setRecommendedPathway] = useState<string[]>(["sci-042", "math-001", "hist-019", "rob-007", "eng-023"]);
   
   // State for active tab
   const [activeTab, setActiveTab] = useState('profile');
diff --git a/src/app/resources/create/page.tsx b/src/app/resources/create/page.tsx
index 46773be..4d7bb9b 100644
--- a/src/app/resources/create/page.tsx
+++ b/src/app/resources/create/page.tsx
@@ -29,9 +29,9 @@ export default function CreateResource() {
   const [isSubmitting, setIsSubmitting] = useState(false);
   const [activeTab, setActiveTab] = useState('details');
   const [resourceType, setResourceType] = useState('');
-  const [tags, setTags] = useState<string: any[]>([]);
+  const [tags, setTags] = useState<string[]>([]);
   const [tagInput, setTagInput] = useState('');
-  const [files, setFiles] = useState<File: any[]>([]);
+  const [files, setFiles] = useState<File[]>([]);
   const [previewUrl, setPreviewUrl] = useState<string | null>(null);
   const [formErrors, setFormErrors] = useState<Record<string, string>>({});
 
diff --git a/src/components/about/TeamMember.tsx b/src/components/about/TeamMember.tsx
index fca9220..98b6387 100644
--- a/src/components/about/TeamMember.tsx
+++ b/src/components/about/TeamMember.tsx
@@ -21,7 +21,7 @@ interface TeamMemberProps {
   bio: string;
   imageSrc: string;
   socialLinks: SocialLinks;
-  specialties: string: any[];
+  specialties: string[];
 }
 
 export function TeamMember({
diff --git a/src/components/accessibility/text-to-speech.tsx b/src/components/accessibility/text-to-speech.tsx
index 5248236..8506c2a 100644
--- a/src/components/accessibility/text-to-speech.tsx
+++ b/src/components/accessibility/text-to-speech.tsx
@@ -21,7 +21,7 @@ export default function TextToSpeechReader() {
   const [progress, setProgress] = useState(0);
   const [isSupported, setIsSupported] = useState(true);
   const [isLoading, setIsLoading] = useState(false);
-  const [availableVoices, setAvailableVoices] = useState<SpeechSynthesisVoice: any[]>([]);
+  const [availableVoices, setAvailableVoices] = useState<SpeechSynthesisVoice[]>([]);
   
   // State for settings
   const [voice, setVoice] = useState('');
diff --git a/src/components/admin/plugin-management.tsx b/src/components/admin/plugin-management.tsx
index 6443139..b0df5b4 100644
--- a/src/components/admin/plugin-management.tsx
+++ b/src/components/admin/plugin-management.tsx
@@ -74,9 +74,9 @@ interface Plugin {
   author: string;
   website?: string;
   icon?: string;
-  tags?: string: any[];
-  supportedFeatures: string: any[];
-  requiredPermissions: string: any[];
+  tags?: string[];
+  supportedFeatures: string[];
+  requiredPermissions: string[];
   status: PluginStatus;
   installedAt: Date;
   updatedAt: Date;
@@ -85,7 +85,7 @@ interface Plugin {
 }
 
 // Mock data for demonstration purposes
-const mockPlugins: Plugin: any[] = [
+const mockPlugins: Plugin[] = [
   {
     id: 'google-drive-integration',
     name: 'Google Drive Integration',
@@ -168,8 +168,8 @@ const StatusBadge = ({ status }: { status: PluginStatus }) => {
 };
 
 export default function PluginManagement() {
-  const [plugins, setPlugins] = useState<Plugin: any[]>(mockPlugins);
-  const [filteredPlugins, setFilteredPlugins] = useState<Plugin: any[]>(mockPlugins);
+  const [plugins, setPlugins] = useState<Plugin[]>(mockPlugins);
+  const [filteredPlugins, setFilteredPlugins] = useState<Plugin[]>(mockPlugins);
   const [searchTerm, setSearchTerm] = useState('');
   const [statusFilter, setStatusFilter] = useState<string>('all');
   const [categoryFilter, setCategoryFilter] = useState<string>('all');
diff --git a/src/components/adventure-quest/adventure-quest-saga-adaptive.tsx b/src/components/adventure-quest/adventure-quest-saga-adaptive.tsx
index 96b7eed..8ca918f 100644
--- a/src/components/adventure-quest/adventure-quest-saga-adaptive.tsx
+++ b/src/components/adventure-quest/adventure-quest-saga-adaptive.tsx
@@ -93,14 +93,14 @@ interface Quest {
   difficulty: string;
   duration: number;
   xpReward: number;
-  objectives: string: any[];
+  objectives: string[];
   challenges: Array<{
     id: string;
     title: string;
     description: string;
     content: string;
     type: string;
-    options?: string: any[];
+    options?: string[];
     correctAnswer?: string;
     minScore?: number;
   }>;
@@ -115,7 +115,7 @@ interface GenerationParams {
 
 interface CompletedQuest extends Quest {
   completedAt: string;
-  results?;
+  results?: any;
 }
 
 // Custom hook for feature credit usage
@@ -139,7 +139,7 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
   // State for quests
   const [quests, setQuests] = useState<Quest[]>([]);
   const [activeQuest, setActiveQuest] = useState<Quest | null>(null);
-  const [completedQuests, setCompletedQuests] = useState<CompletedQuest: any[]>([]);
+  const [completedQuests, setCompletedQuests] = useState<CompletedQuest[]>([]);
   
   // State for UI
   const [view, setView] = useState<'creation' | 'hub' | 'quest' | 'history' | 'generate'>('hub');
@@ -201,11 +201,11 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
   
   // Create adaptive quest based on user data
   const createAdaptiveQuest = (
-    userProfile, 
-    learningHistory: any: any[], 
-    assessmentResults: any: any[], 
+    userProfile: any, 
+    learningHistory: any[], 
+    assessmentResults: any[], 
     params: GenerationParams,
-    curriculumContext
+    curriculumContext: any
   ): Quest => {
     // In a real implementation, this would use AI to generate a quest
     // For now, return a mock quest
@@ -257,7 +257,7 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
   };
   
   // Handle quest completion
-  const handleCompleteQuest = (quest: Quest, results): void => {
+  const handleCompleteQuest = (quest: Quest, results: any): void => {
     // Add quest to completed quests
     setCompletedQuests([...completedQuests, {
       ...quest,
@@ -306,7 +306,7 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
   };
   
   // Handle parameter change
-  const handleParamChange = (param: string, value): void => {
+  const handleParamChange = (param: string, value: any): void => {
     setGenerationParams({
       ...generationParams,
       [param]: value
@@ -321,7 +321,7 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
     }
     
     // Initialize quests
-    setQuests(mockQuests as Quest: any: any[]);
+    setQuests(mockQuests as Quest[]);
     
     // Initialize completed quests
     setCompletedQuests([
@@ -506,33 +506,53 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
                           <CardDescription>{quest.description}</CardDescription>
                         </CardHeader>
                         <CardContent className="p-4 pt-0">
-                          <div className="flex flex-wrap gap-2 mb-2">
-                            <Badge variant="outline">{quest.subject}</Badge>
-                            <Badge variant="outline">{quest.keyStage}</Badge>
-                            <Badge variant="outline">{quest.duration} mins</Badge>
-                          </div>
-                          <div className="flex justify-between items-center mt-4">
+                          <div className="flex justify-between text-sm">
+                            <div className="flex items-center">
+                              <BookOpen className="mr-1 h-4 w-4" />
+                              <span>{quest.subject}</span>
+                            </div>
+                            <div className="flex items-center">
+                              <Hourglass className="mr-1 h-4 w-4" />
+                              <span>{quest.duration} min</span>
+                            </div>
                             <div className="flex items-center">
-                              <Trophy className="h-4 w-4 mr-1 text-yellow-500" />
-                              <span className="text-sm">{quest.xpReward} XP</span>
+                              <Star className="mr-1 h-4 w-4" />
+                              <span>{quest.xpReward} XP</span>
                             </div>
-                            <Button size="sm" onClick={() => handleSelectQuest(quest)}>
-                              Start Quest
-                            </Button>
                           </div>
                         </CardContent>
+                        <CardFooter className="p-4 pt-0">
+                          <Button 
+                            onClick={() => handleSelectQuest(quest)}
+                            variant="outline"
+                            className="w-full"
+                          >
+                            Begin Quest
+                          </Button>
+                        </CardFooter>
                       </Card>
                     ))}
                   </div>
                 )}
               </CardContent>
               <CardFooter className="flex justify-between">
-                <Button variant="outline" onClick={() => setView('generate')} disabled={generating}>
-                  {generating ? 'Generating...' : 'Generate New Quest'}
-                </Button>
                 <Button variant="outline" onClick={() => setView('history')}>
+                  <Trophy className="mr-2 h-4 w-4" />
                   Quest History
                 </Button>
+                <Button onClick={() => setView('generate')} disabled={generating}>
+                  {generating ? (
+                    <>
+                      <Sparkles className="mr-2 h-4 w-4 animate-spin" />
+                      Generating...
+                    </>
+                  ) : (
+                    <>
+                      <Sparkles className="mr-2 h-4 w-4" />
+                      Generate New Quest
+                    </>
+                  )}
+                </Button>
               </CardFooter>
             </Card>
           </div>
@@ -541,7 +561,7 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
             <Card>
               <CardHeader>
                 <CardTitle className="text-xl flex items-center">
-                  <Sword className="mr-2" /> Character Profile
+                  <Users className="mr-2" /> Character Profile
                 </CardTitle>
               </CardHeader>
               <CardContent>
@@ -549,86 +569,141 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
                   <div className="space-y-4">
                     <div className="flex items-center space-x-4">
                       <div className="h-16 w-16 rounded-full bg-primary/10 flex items-center justify-center">
-                        <Sword className="h-8 w-8 text-primary" />
+                        <Users className="h-8 w-8 text-primary" />
                       </div>
                       <div>
                         <h3 className="font-bold text-lg">{character.name}</h3>
-                        <p className="text-sm text-muted-foreground">Level {character.level} Adventurer</p>
+                        <p className="text-sm text-muted-foreground">Level {character.level} Explorer</p>
                       </div>
                     </div>
                     
                     <div>
                       <div className="flex justify-between text-sm mb-1">
-                        <span>XP Progress</span>
+                        <span>Experience</span>
                         <span>{character.xp} / {character.xpToNextLevel}</span>
                       </div>
-                      <Progress value={character.xp / character.xpToNextLevel * 100} className="h-2" />
+                      <Progress value={(character.xp / character.xpToNextLevel) * 100} className="h-2" />
                     </div>
                     
                     <Separator />
                     
-                    <div className="space-y-3">
-                      <h4 className="font-semibold">Attributes</h4>
-                      
-                      <div>
-                        <div className="flex justify-between text-sm mb-1">
-                          <span>Intelligence</span>
-                          <span>{character.attributes.intelligence}/10</span>
+                    <div>
+                      <h4 className="font-medium mb-2">Attributes</h4>
+                      <div className="space-y-2">
+                        <div>
+                          <div className="flex justify-between text-sm mb-1">
+                            <span>Intelligence</span>
+                            <span>{character.attributes.intelligence}/10</span>
+                          </div>
+                          <Progress value={character.attributes.intelligence * 10} className="h-1" />
                         </div>
-                        <Progress value={character.attributes.intelligence * 10} className="h-2" />
-                      </div>
-                      
-                      <div>
-                        <div className="flex justify-between text-sm mb-1">
-                          <span>Creativity</span>
-                          <span>{character.attributes.creativity}/10</span>
+                        <div>
+                          <div className="flex justify-between text-sm mb-1">
+                            <span>Creativity</span>
+                            <span>{character.attributes.creativity}/10</span>
+                          </div>
+                          <Progress value={character.attributes.creativity * 10} className="h-1" />
                         </div>
-                        <Progress value={character.attributes.creativity * 10} className="h-2" />
-                      </div>
-                      
-                      <div>
-                        <div className="flex justify-between text-sm mb-1">
-                          <span>Persistence</span>
-                          <span>{character.attributes.persistence}/10</span>
+                        <div>
+                          <div className="flex justify-between text-sm mb-1">
+                            <span>Persistence</span>
+                            <span>{character.attributes.persistence}/10</span>
+                          </div>
+                          <Progress value={character.attributes.persistence * 10} className="h-1" />
                         </div>
-                        <Progress value={character.attributes.persistence * 10} className="h-2" />
-                      </div>
-                      
-                      <div>
-                        <div className="flex justify-between text-sm mb-1">
-                          <span>Curiosity</span>
-                          <span>{character.attributes.curiosity}/10</span>
+                        <div>
+                          <div className="flex justify-between text-sm mb-1">
+                            <span>Curiosity</span>
+                            <span>{character.attributes.curiosity}/10</span>
+                          </div>
+                          <Progress value={character.attributes.curiosity * 10} className="h-1" />
                         </div>
-                        <Progress value={character.attributes.curiosity * 10} className="h-2" />
                       </div>
                     </div>
                     
                     <Separator />
                     
                     <div>
-                      <h4 className="font-semibold mb-2">Inventory</h4>
-                      {character.inventory && character.inventory.length > 0 ? (
-                        <div className="space-y-2">
-                          {character.inventory.map((item) => (
-                            <div key={item.id} className="flex justify-between items-center text-sm">
-                              <span>{item.name}</span>
-                              <Badge variant="outline">x{item.quantity}</Badge>
-                            </div>
-                          ))}
+                      <h4 className="font-medium mb-2">Stats</h4>
+                      <div className="grid grid-cols-2 gap-2 text-sm">
+                        <div className="flex items-center">
+                          <Trophy className="mr-1 h-4 w-4 text-yellow-500" />
+                          <span>Quests: {completedQuests.length}</span>
+                        </div>
+                        <div className="flex items-center">
+                          <Award className="mr-1 h-4 w-4 text-purple-500" />
+                          <span>Achievements: {character.achievements.length}</span>
+                        </div>
+                        <div className="flex items-center">
+                          <Star className="mr-1 h-4 w-4 text-amber-500" />
+                          <span>Total XP: {character.xp}</span>
+                        </div>
+                        <div className="flex items-center">
+                          <Backpack className="mr-1 h-4 w-4 text-emerald-500" />
+                          <span>Items: {character.inventory.length}</span>
                         </div>
-                      ) : (
-                        <p className="text-sm text-muted-foreground">No items in inventory</p>
-                      )}
+                      </div>
                     </div>
                   </div>
                 )}
               </CardContent>
               <CardFooter>
-                <Button variant="outline" className="w-full" onClick={() => setView('character')}>
+                <Button variant="outline" className="w-full">
+                  <Scroll className="mr-2 h-4 w-4" />
                   View Full Profile
                 </Button>
               </CardFooter>
             </Card>
+            
+            <Card className="mt-6">
+              <CardHeader>
+                <CardTitle className="text-xl flex items-center">
+                  <Activity className="mr-2" /> Learning Progress
+                </CardTitle>
+              </CardHeader>
+              <CardContent>
+                <div className="space-y-4">
+                  <div>
+                    <h4 className="font-medium mb-2 text-sm">Subject Mastery</h4>
+                    <div className="space-y-2">
+                      <div>
+                        <div className="flex justify-between text-sm mb-1">
+                          <span>Mathematics</span>
+                          <span>65%</span>
+                        </div>
+                        <Progress value={65} className="h-1" />
+                      </div>
+                      <div>
+                        <div className="flex justify-between text-sm mb-1">
+                          <span>English</span>
+                          <span>78%</span>
+                        </div>
+                        <Progress value={78} className="h-1" />
+                      </div>
+                      <div>
+                        <div className="flex justify-between text-sm mb-1">
+                          <span>Science</span>
+                          <span>82%</span>
+                        </div>
+                        <Progress value={82} className="h-1" />
+                      </div>
+                    </div>
+                  </div>
+                  
+                  <div>
+                    <h4 className="font-medium mb-2 text-sm">Recent Activity</h4>
+                    <div className="space-y-2">
+                      {completedQuests.slice(0, 3).map((quest) => (
+                        <div key={quest.id} className="flex justify-between items-center text-sm">
+                          <span className="truncate">{quest.title}</span>
+                          <Badge variant="outline">{quest.xpReward} XP</Badge>
+                        </div>
+                      ))}
+                    </div>
+                  </div>
+                </div>
+              </CardContent>
+            </Card>
           </div>
         </div>
       </div>
@@ -641,42 +716,53 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
     
     return (
       <div className="adventure-quest-detail">
-        <Card className="w-full max-w-4xl mx-auto">
+        <Card>
           <CardHeader>
             <div className="flex justify-between items-start">
               <div>
-                <CardTitle className="text-2xl flex items-center">
-                  <Scroll className="mr-2" /> {activeQuest.title}
-                </CardTitle>
+                <CardTitle className="text-2xl">{activeQuest.title}</CardTitle>
                 <CardDescription>{activeQuest.description}</CardDescription>
               </div>
-              <Badge variant={
-                activeQuest.difficulty === 'beginner' ? 'outline' : 
-                activeQuest.difficulty === 'intermediate' ? 'secondary' : 
-                'destructive'
-              }>
-                {activeQuest.difficulty}
-              </Badge>
+              <Button variant="outline" onClick={() => { setActiveQuest(null); setView('hub'); }}>
+                Back to Hub
+              </Button>
             </div>
           </CardHeader>
           <CardContent>
             <div className="space-y-6">
-              <div className="flex flex-wrap gap-2">
-                <Badge variant="outline">{activeQuest.subject}</Badge>
-                <Badge variant="outline">{activeQuest.keyStage}</Badge>
-                <Badge variant="outline">{activeQuest.duration} mins</Badge>
+              <div className="flex flex-wrap gap-4">
+                <Badge variant="outline" className="flex items-center">
+                  <BookOpen className="mr-1 h-4 w-4" />
+                  {activeQuest.subject}
+                </Badge>
                 <Badge variant="outline" className="flex items-center">
-                  <Trophy className="h-3 w-3 mr-1 text-yellow-500" />
+                  <Users className="mr-1 h-4 w-4" />
+                  {activeQuest.keyStage}
+                </Badge>
+                <Badge variant={
+                  activeQuest.difficulty === 'beginner' ? 'outline' : 
+                  activeQuest.difficulty === 'intermediate' ? 'secondary' : 
+                  'destructive'
+                } className="flex items-center">
+                  <Zap className="mr-1 h-4 w-4" />
+                  {activeQuest.difficulty}
+                </Badge>
+                <Badge variant="outline" className="flex items-center">
+                  <Hourglass className="mr-1 h-4 w-4" />
+                  {activeQuest.duration} minutes
+                </Badge>
+                <Badge variant="outline" className="flex items-center">
+                  <Star className="mr-1 h-4 w-4" />
                   {activeQuest.xpReward} XP
                 </Badge>
               </div>
               
               <div>
-                <h3 className="font-semibold mb-2">Objectives</h3>
+                <h3 className="text-lg font-medium mb-2">Objectives</h3>
                 <ul className="space-y-1">
                   {activeQuest.objectives.map((objective, index) => (
-                    <li key={`objective-${index}`} className="flex items-start">
-                      <Star className="h-4 w-4 mr-2 text-yellow-500 mt-0.5" />
+                    <li key={index} className="flex items-start">
+                      <div className="mr-2 mt-1 h-1.5 w-1.5 rounded-full bg-primary" />
                       <span>{objective}</span>
                     </li>
                   ))}
@@ -686,7 +772,7 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
               <Separator />
               
               <div>
-                <h3 className="font-semibold mb-3">Challenges</h3>
+                <h3 className="text-lg font-medium mb-4">Challenges</h3>
                 <div className="space-y-4">
                   {activeQuest.challenges.map((challenge) => (
                     <Card key={challenge.id}>
@@ -695,38 +781,23 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
                         <CardDescription>{challenge.description}</CardDescription>
                       </CardHeader>
                       <CardContent className="p-4 pt-0">
-                        <p>{challenge.content}</p>
+                        <p className="text-sm">{challenge.content}</p>
                         
                         {challenge.type === 'multiple-choice' && challenge.options && (
                           <div className="mt-4 space-y-2">
                             {challenge.options.map((option, index) => (
-                              <div key={`option-${index}`} className="flex items-center space-x-2">
+                              <div key={index} className="flex items-center space-x-2">
                                 <input 
                                   type="radio" 
                                   id={`option-${index}`} 
                                   name={`challenge-${challenge.id}`} 
-                                  className="h-4 w-4" 
+                                  className="h-4 w-4"
                                 />
                                 <Label htmlFor={`option-${index}`}>{option}</Label>
                               </div>
                             ))}
                           </div>
                         )}
-                        
-                        {challenge.type === 'text-input' && (
-                          <div className="mt-4">
-                            <Input placeholder="Enter your answer" />
-                          </div>
-                        )}
-                        
-                        {challenge.type === 'free-text' && (
-                          <div className="mt-4">
-                            <textarea 
-                              className="w-full min-h-[100px] p-2 border rounded-md" 
-                              placeholder="Enter your response"
-                            ></textarea>
-                          </div>
-                        )}
                       </CardContent>
                     </Card>
                   ))}
@@ -735,17 +806,10 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
             </div>
           </CardContent>
           <CardFooter className="flex justify-between">
-            <Button variant="outline" onClick={() => {
-              setActiveQuest(null);
-              setView('hub');
-            }}>
-              Back to Hub
+            <Button variant="outline" onClick={() => { setActiveQuest(null); setView('hub'); }}>
+              Cancel Quest
             </Button>
-            <Button onClick={() => handleCompleteQuest(activeQuest, {
-              score: 85,
-              timeSpent: '15 minutes',
-              completedChallenges: activeQuest.challenges.length
-            })}>
+            <Button onClick={() => handleCompleteQuest(activeQuest, { score: 85, completed: true })}>
               Complete Quest
             </Button>
           </CardFooter>
@@ -758,51 +822,54 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
   const renderQuestHistory = (): JSX.Element => {
     return (
       <div className="adventure-quest-history">
-        <Card className="w-full max-w-4xl mx-auto">
+        <Card>
           <CardHeader>
-            <CardTitle className="text-2xl flex items-center">
-              <BookOpen className="mr-2" /> Quest History
-            </CardTitle>
-            <CardDescription>
-              Review your completed quests and achievements
-            </CardDescription>
+            <div className="flex justify-between items-start">
+              <div>
+                <CardTitle className="text-2xl flex items-center">
+                  <Trophy className="mr-2" /> Quest History
+                </CardTitle>
+                <CardDescription>
+                  Review your completed quests and achievements
+                </CardDescription>
+              </div>
+              <Button variant="outline" onClick={() => setView('hub')}>
+                Back to Hub
+              </Button>
+            </div>
           </CardHeader>
           <CardContent>
             {completedQuests.length === 0 ? (
               <div className="text-center p-6 border rounded-lg bg-muted/50">
-                <p className="text-muted-foreground">No completed quests yet. Start a quest to begin your adventure!</p>
+                <p className="text-muted-foreground">You haven't completed any quests yet.</p>
               </div>
             ) : (
               <div className="space-y-4">
                 {completedQuests.map((quest) => (
-                  <Card key={quest.id} className="bg-muted/20">
+                  <Card key={quest.id}>
                     <CardHeader className="p-4">
                       <div className="flex justify-between items-start">
-                        <div>
-                          <CardTitle className="text-lg flex items-center">
-                            <Trophy className="h-4 w-4 mr-2 text-yellow-500" />
-                            {quest.title}
-                          </CardTitle>
-                          <CardDescription>
-                            Completed on {new Date(quest.completedAt).toLocaleDateString()}
-                          </CardDescription>
-                        </div>
-                        <Badge variant="outline">{quest.subject}</Badge>
+                        <CardTitle className="text-lg">{quest.title}</CardTitle>
+                        <Badge variant="outline">{quest.xpReward} XP</Badge>
                       </div>
+                      <CardDescription>
+                        Completed on {new Date(quest.completedAt).toLocaleDateString()}
+                      </CardDescription>
                     </CardHeader>
                     <CardContent className="p-4 pt-0">
-                      <div className="flex items-center justify-between">
+                      <div className="flex flex-wrap gap-2">
+                        <Badge variant="outline" className="flex items-center">
+                          <BookOpen className="mr-1 h-4 w-4" />
+                          {quest.subject}
+                        </Badge>
                         <Badge variant={
                           quest.difficulty === 'beginner' ? 'outline' : 
                           quest.difficulty === 'intermediate' ? 'secondary' : 
                           'destructive'
-                        }>
+                        } className="flex items-center">
+                          <Zap className="mr-1 h-4 w-4" />
                           {quest.difficulty}
                         </Badge>
-                        <div className="flex items-center">
-                          <Star className="h-4 w-4 mr-1 text-yellow-500" />
-                          <span className="text-sm">{quest.xpReward} XP earned</span>
-                        </div>
                       </div>
                     </CardContent>
                   </Card>
@@ -810,11 +877,6 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
               </div>
             )}
           </CardContent>
-          <CardFooter>
-            <Button variant="outline" onClick={() => setView('hub')} className="w-full">
-              Back to Hub
-            </Button>
-          </CardFooter>
         </Card>
       </div>
     );
@@ -824,85 +886,95 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
   const renderQuestGeneration = (): JSX.Element => {
     return (
       <div className="adventure-quest-generation">
-        <Card className="w-full max-w-4xl mx-auto">
+        <Card>
           <CardHeader>
-            <CardTitle className="text-2xl flex items-center">
-              <Sparkles className="mr-2" /> Generate Adaptive Quest
-            </CardTitle>
-            <CardDescription>
-              Customize parameters to generate a quest tailored to your learning needs
-            </CardDescription>
+            <div className="flex justify-between items-start">
+              <div>
+                <CardTitle className="text-2xl flex items-center">
+                  <Sparkles className="mr-2" /> Generate Adaptive Quest
+                </CardTitle>
+                <CardDescription>
+                  Create a personalized learning quest tailored to your needs
+                </CardDescription>
+              </div>
+              <Button variant="outline" onClick={() => setView('hub')}>
+                Back to Hub
+              </Button>
+            </div>
           </CardHeader>
           <CardContent>
-            <div className="space-y-4">
+            <div className="space-y-6">
               <div>
                 <Label htmlFor="subject">Subject</Label>
-                <select 
-                  id="subject"
-                  className="w-full p-2 border rounded-md"
-                  value={generationParams.subject}
-                  onChange={(e) => handleParamChange('subject', e.target.value)}
+                <Select 
+                  value={generationParams.subject} 
+                  onValueChange={(value) => handleParamChange('subject', value)}
                 >
-                  <option value="Mathematics">Mathematics</option>
-                  <option value="English">English</option>
-                  <option value="Science">Science</option>
-                  <option value="History">History</option>
-                  <option value="Geography">Geography</option>
-                </select>
+                  <SelectTrigger id="subject">
+                    <SelectValue placeholder="Select subject" />
+                  </SelectTrigger>
+                  <SelectContent>
+                    <SelectItem value="Mathematics">Mathematics</SelectItem>
+                    <SelectItem value="English">English</SelectItem>
+                    <SelectItem value="Science">Science</SelectItem>
+                    <SelectItem value="History">History</SelectItem>
+                    <SelectItem value="Geography">Geography</SelectItem>
+                  </SelectContent>
+                </Select>
               </div>
               
               <div>
                 <Label htmlFor="difficulty">Difficulty</Label>
-                <div className="grid grid-cols-3 gap-4 mt-2">
-                  {['beginner', 'intermediate', 'advanced'].map((difficulty) => (
-                    <div 
-                      key={difficulty}
-                      className={`p-3 border rounded-md cursor-pointer text-center ${
-                        generationParams.difficulty === difficulty ? 'bg-primary text-primary-foreground' : ''
-                      }`}
-                      onClick={() => handleParamChange('difficulty', difficulty)}
-                    >
-                      {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)}
-                    </div>
-                  ))}
-                </div>
+                <Select 
+                  value={generationParams.difficulty} 
+                  onValueChange={(value) => handleParamChange('difficulty', value)}
+                >
+                  <SelectTrigger id="difficulty">
+                    <SelectValue placeholder="Select difficulty" />
+                  </SelectTrigger>
+                  <SelectContent>
+                    <SelectItem value="beginner">Beginner</SelectItem>
+                    <SelectItem value="intermediate">Intermediate</SelectItem>
+                    <SelectItem value="advanced">Advanced</SelectItem>
+                  </SelectContent>
+                </Select>
               </div>
               
               <div>
                 <Label htmlFor="duration">Duration (minutes)</Label>
-                <div className="grid grid-cols-4 gap-4 mt-2">
-                  {[10, 20, 30, 45].map((duration) => (
-                    <div 
-                      key={duration}
-                      className={`p-3 border rounded-md cursor-pointer text-center ${
-                        generationParams.duration === duration ? 'bg-primary text-primary-foreground' : ''
-                      }`}
-                      onClick={() => handleParamChange('duration', duration)}
-                    >
-                      {duration} mins
-                    </div>
-                  ))}
-                </div>
+                <Select 
+                  value={generationParams.duration.toString()} 
+                  onValueChange={(value) => handleParamChange('duration', parseInt(value))}
+                >
+                  <SelectTrigger id="duration">
+                    <SelectValue placeholder="Select duration" />
+                  </SelectTrigger>
+                  <SelectContent>
+                    <SelectItem value="10">10 minutes</SelectItem>
+                    <SelectItem value="20">20 minutes</SelectItem>
+                    <SelectItem value="30">30 minutes</SelectItem>
+                    <SelectItem value="45">45 minutes</SelectItem>
+                    <SelectItem value="60">60 minutes</SelectItem>
+                  </SelectContent>
+                </Select>
               </div>
               
               <div>
-                <Label>Learning Style</Label>
-                <div className="grid grid-cols-2 gap-4 mt-2">
-                  {learningStyles.map((style) => (
-                    <div 
-                      key={style.id}
-                      className={`p-3 border rounded-md cursor-pointer ${
-                        generationParams.learningStyle === style.id ? 'bg-primary text-primary-foreground' : ''
-                      }`}
-                      onClick={() => handleParamChange('learningStyle', style.id)}
-                    >
-                      <h4 className="font-semibold">{style.name}</h4>
-                      <p className={`text-sm ${generationParams.learningStyle === style.id ? 'text-primary-foreground/80' : 'text-muted-foreground'}`}>
-                        {style.description}
-                      </p>
-                    </div>
-                  ))}
-                </div>
+                <Label htmlFor="learning-style">Learning Style</Label>
+                <Select 
+                  value={generationParams.learningStyle} 
+                  onValueChange={(value) => handleParamChange('learningStyle', value)}
+                >
+                  <SelectTrigger id="learning-style">
+                    <SelectValue placeholder="Select learning style" />
+                  </SelectTrigger>
+                  <SelectContent>
+                    <SelectItem value="visual">Visual</SelectItem>
+                    <SelectItem value="auditory">Auditory</SelectItem>
+                    <SelectItem value="reading">Reading/Writing</SelectItem>
+                    <SelectItem value="kinesthetic">Kinesthetic</SelectItem>
+                  </SelectContent>
+                </Select>
               </div>
             </div>
           </CardContent>
@@ -913,7 +985,7 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
             <Button onClick={generateAdaptiveQuest} disabled={generating}>
               {generating ? (
                 <>
-                  <Hourglass className="mr-2 h-4 w-4 animate-spin" />
+                  <Sparkles className="mr-2 h-4 w-4 animate-spin" />
                   Generating...
                 </>
               ) : (
@@ -929,25 +1001,38 @@ export const AdventureQuestSagaAdaptive = (): JSX.Element => {
     );
   };
   
-  // Render main component
+  // Render the appropriate view
+  const renderView = (): JSX.Element => {
+    switch (view) {
+      case 'creation':
+        return renderCharacterCreation();
+      case 'hub':
+        return renderQuestHub();
+      case 'quest':
+        return renderQuestDetail();
+      case 'history':
+        return renderQuestHistory();
+      case 'generate':
+        return renderQuestGeneration();
+      default:
+        return renderQuestHub();
+    }
+  };
+  
   return (
-    <div className="adventure-quest-saga p-4">
-      <div className="max-w-7xl mx-auto">
-        <div className="mb-8">
-          <h1 className="text-3xl font-bold flex items-center">
-            <Sword className="mr-2" /> Adventure Quest Saga
-          </h1>
-          <p className="text-muted-foreground">
-            Embark on personalized learning quests tailored to your learning style and curriculum needs
+    <div className="adventure-quest-saga container mx-auto py-8">
+      <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-8">
+        <div>
+          <h1 className="text-4xl font-bold tracking-tight">Adventure Quest Saga</h1>
+          <p className="text-xl text-muted-foreground mt-2">
+            Learn through adaptive, personalized quests
           </p>
         </div>
-        
-        {!character && renderCharacterCreation()}
-        {character && view === 'hub' && renderQuestHub()}
-        {character && view === 'quest' && renderQuestDetail()}
-        {character && view === 'history' && renderQuestHistory()}
-        {character && view === 'generate' && renderQuestGeneration()}
       </div>
+      
+      {renderView()}
     </div>
   );
 };
+
+export default AdventureQuestSagaAdaptive;
diff --git a/src/components/adventure-quest/adventure-quest-saga-integrated.tsx b/src/components/adventure-quest/adventure-quest-saga-integrated.tsx
index 2da2b41..70e6c38 100644
--- a/src/components/adventure-quest/adventure-quest-saga-integrated.tsx
+++ b/src/components/adventure-quest/adventure-quest-saga-integrated.tsx
@@ -83,14 +83,14 @@ interface Quest {
   difficulty: string;
   duration: number;
   xpReward: number;
-  objectives: string: any[];
+  objectives: string[];
   challenges: Array<{
     id: string;
     title: string;
     description: string;
     content: string;
     type: string;
-    options?: string: any[];
+    options?: string[];
     correctAnswer?: string;
     minScore?: number;
   }>;
@@ -123,7 +123,7 @@ export const AdventureQuestSagaIntegrated = (): JSX.Element => {
   // State for quests
   const [quests, setQuests] = useState<Quest[]>([]);
   const [activeQuest, setActiveQuest] = useState<Quest | null>(null);
-  const [completedQuests, setCompletedQuests] = useState<CompletedQuest: any[]>([]);
+  const [completedQuests, setCompletedQuests] = useState<CompletedQuest[]>([]);
   
   // State for UI
   const [view, setView] = useState<'creation' | 'hub' | 'quest' | 'history' | 'generate' | 'character'>('hub');
@@ -208,7 +208,7 @@ export const AdventureQuestSagaIntegrated = (): JSX.Element => {
     }
     
     // Initialize quests
-    setQuests(mockQuests as Quest: any: any[]);
+    setQuests(mockQuests as Quest[]);
     
     // Initialize completed quests
     setCompletedQuests([
diff --git a/src/components/adventure-quest/adventure-quest-saga.tsx b/src/components/adventure-quest/adventure-quest-saga.tsx
index a561a75..2f34da5 100644
--- a/src/components/adventure-quest/adventure-quest-saga.tsx
+++ b/src/components/adventure-quest/adventure-quest-saga.tsx
@@ -82,14 +82,14 @@ interface Quest {
   difficulty: string;
   duration: number;
   xpReward: number;
-  objectives: string: any[];
+  objectives: string[];
   challenges: Array<{
     id: string;
     title: string;
     description: string;
     content: string;
     type: string;
-    options?: string: any[];
+    options?: string[];
     correctAnswer?: string;
     minScore?: number;
   }>;
@@ -110,7 +110,7 @@ export const AdventureQuestSaga = (): JSX.Element => {
   // State for quests
   const [quests, setQuests] = useState<Quest[]>([]);
   const [activeQuest, setActiveQuest] = useState<Quest | null>(null);
-  const [completedQuests, setCompletedQuests] = useState<CompletedQuest: any[]>([]);
+  const [completedQuests, setCompletedQuests] = useState<CompletedQuest[]>([]);
   
   // State for UI
   const [view, setView] = useState<'hub' | 'quest' | 'history' | 'generate' | 'character'>('hub');
@@ -179,7 +179,7 @@ export const AdventureQuestSaga = (): JSX.Element => {
     }
     
     // Initialize quests
-    setQuests(mockQuests as Quest: any: any[]);
+    setQuests(mockQuests as Quest[]);
     
     // Initialize completed quests
     setCompletedQuests([
diff --git a/src/components/adventure-quest/character-creation.tsx b/src/components/adventure-quest/character-creation.tsx
index 95cf51e..465f3d3 100644
--- a/src/components/adventure-quest/character-creation.tsx
+++ b/src/components/adventure-quest/character-creation.tsx
@@ -37,14 +37,14 @@ interface Quest {
   difficulty: string;
   duration: number;
   xpReward: number;
-  objectives: string: any[];
+  objectives: string[];
   challenges: Array<{
     id: string;
     title: string;
     description: string;
     content: string;
     type: string;
-    options?: string: any[];
+    options?: string[];
     correctAnswer?: string;
     minScore?: number;
   }>;
@@ -61,7 +61,7 @@ interface QuestDetailProps {
 }
 
 interface QuestHubProps {
-  quests: Quest: any[];
+  quests: Quest[];
   character: Character | null;
   onSelectQuest: (quest: Quest) => void;
   onGenerateQuest: () => void;
@@ -69,7 +69,7 @@ interface QuestHubProps {
 
 interface CharacterDashboardProps {
   character: Character | null;
-  completedQuests: Quest: any[];
+  completedQuests: Quest[];
   onBack: () => void;
 }
 
diff --git a/src/components/ai-avatar/ai-avatar-video-library.tsx b/src/components/ai-avatar/ai-avatar-video-library.tsx
index 4a052f0..f16612b 100644
--- a/src/components/ai-avatar/ai-avatar-video-library.tsx
+++ b/src/components/ai-avatar/ai-avatar-video-library.tsx
@@ -19,8 +19,8 @@ import { Skeleton } from '../ui/skeleton';
  */
 export const AIAvatarVideoLibrary: React.FC = () => {
   const [loading, setLoading] = useState(true);
-  const [videos, setVideos] = useState<AIAvatarVideo: any[]>([]);
-  const [filteredVideos, setFilteredVideos] = useState<AIAvatarVideo: any[]>([]);
+  const [videos, setVideos] = useState<AIAvatarVideo[]>([]);
+  const [filteredVideos, setFilteredVideos] = useState<AIAvatarVideo[]>([]);
   const [searchQuery, setSearchQuery] = useState('');
   const [selectedCategory, setSelectedCategory] = useState<AIAvatarVideoCategory | 'all'>('all');
   const [selectedAudience, setSelectedAudience] = useState<AIAvatarVideoAudience | 'all'>('all');
diff --git a/src/components/ai-avatar/ai-avatar-video-service.ts b/src/components/ai-avatar/ai-avatar-video-service.ts
index a8628b9..0599f7d 100644
--- a/src/components/ai-avatar/ai-avatar-video-service.ts
+++ b/src/components/ai-avatar/ai-avatar-video-service.ts
@@ -8,7 +8,7 @@ import { AIAvatarVideo, AIAvatarVideoCategory, AIAvatarVideoAudience } from './t
  */
 export class AIAvatarVideoService {
   private static instance: AIAvatarVideoService;
-  private videos: AIAvatarVideo: any[] = [];
+  private videos: AIAvatarVideo[] = [];
   private initialized: boolean = false;
 
   private constructor() {}
@@ -43,22 +43,22 @@ export class AIAvatarVideoService {
     return video;
   }
 
-  public async getVideosByCategory(category: AIAvatarVideoCategory): Promise<AIAvatarVideo: any[]> {
+  public async getVideosByCategory(category: AIAvatarVideoCategory): Promise<AIAvatarVideo[]> {
     await this.ensureInitialized();
     return this.videos.filter(v => v.category === category);
   }
 
-  public async getVideosByAudience(audience: AIAvatarVideoAudience): Promise<AIAvatarVideo: any[]> {
+  public async getVideosByAudience(audience: AIAvatarVideoAudience): Promise<AIAvatarVideo[]> {
     await this.ensureInitialized();
     return this.videos.filter(v => v.audience === audience);
   }
 
-  public async getFeaturedVideos(): Promise<AIAvatarVideo: any[]> {
+  public async getFeaturedVideos(): Promise<AIAvatarVideo[]> {
     await this.ensureInitialized();
     return this.videos.filter(v => v.featured);
   }
 
-  public async searchVideos(query: string): Promise<AIAvatarVideo: any[]> {
+  public async searchVideos(query: string): Promise<AIAvatarVideo[]> {
     await this.ensureInitialized();
     const lowerQuery = query.toLowerCase();
     return this.videos.filter(v => 
@@ -68,7 +68,7 @@ export class AIAvatarVideoService {
     );
   }
 
-  public async getAllVideos(): Promise<AIAvatarVideo: any[]> {
+  public async getAllVideos(): Promise<AIAvatarVideo[]> {
     await this.ensureInitialized();
     return [...this.videos];
   }
@@ -79,7 +79,7 @@ export class AIAvatarVideoService {
     }
   }
 
-  private async loadVideoMetadata(): Promise<AIAvatarVideo: any[]> {
+  private async loadVideoMetadata(): Promise<AIAvatarVideo[]> {
     // In production, this would fetch from an API or database
     // For now, we'll return our predefined video metadata
     return [
diff --git a/src/components/ai-avatar/types.ts b/src/components/ai-avatar/types.ts
index 6d6f63c..f4e52b4 100644
--- a/src/components/ai-avatar/types.ts
+++ b/src/components/ai-avatar/types.ts
@@ -13,7 +13,7 @@ export interface AIAvatarVideo {
   videoPath?: string;
   thumbnailPath?: string;
   featured: boolean;
-  tags: string: any[];
+  tags: string[];
   createdAt: Date;
   updatedAt: Date;
 }
@@ -49,16 +49,16 @@ export interface AIAvatarVideoPlayer {
 }
 
 export interface AIAvatarVideoLibrary {
-  videos: AIAvatarVideo: any[];
-  categories: AIAvatarVideoCategory: any[];
-  audiences: AIAvatarVideoAudience: any[];
-  featuredVideos: AIAvatarVideo: any[];
+  videos: AIAvatarVideo[];
+  categories: AIAvatarVideoCategory[];
+  audiences: AIAvatarVideoAudience[];
+  featuredVideos: AIAvatarVideo[];
 }
 
 export interface AIAvatarVideoService {
   getVideo: (id: string) => Promise<AIAvatarVideo>;
-  getVideosByCategory: (category: AIAvatarVideoCategory) => Promise<AIAvatarVideo: any[]>;
-  getVideosByAudience: (audience: AIAvatarVideoAudience) => Promise<AIAvatarVideo: any[]>;
-  getFeaturedVideos: () => Promise<AIAvatarVideo: any[]>;
-  searchVideos: (query: string) => Promise<AIAvatarVideo: any[]>;
+  getVideosByCategory: (category: AIAvatarVideoCategory) => Promise<AIAvatarVideo[]>;
+  getVideosByAudience: (audience: AIAvatarVideoAudience) => Promise<AIAvatarVideo[]>;
+  getFeaturedVideos: () => Promise<AIAvatarVideo[]>;
+  searchVideos: (query: string) => Promise<AIAvatarVideo[]>;
 }
diff --git a/src/components/ai/accessibility/high-contrast-mode-engine.tsx b/src/components/ai/accessibility/high-contrast-mode-engine.tsx
index 58ad39b..f5a3ca6 100644
--- a/src/components/ai/accessibility/high-contrast-mode-engine.tsx
+++ b/src/components/ai/accessibility/high-contrast-mode-engine.tsx
@@ -31,7 +31,7 @@ interface HighContrastModeEngineProps {
 interface OptimizationResults {
   elementsProcessed: number;
   elementsEnhanced: number;
-  warnings: string: any[];
+  warnings: string[];
 }
 
 export const HighContrastModeEngine: React.FC<HighContrastModeEngineProps> = ({ 
diff --git a/src/components/ai/accessibility/keyboard-navigation-engine.tsx b/src/components/ai/accessibility/keyboard-navigation-engine.tsx
index 5f661aa..8e5670c 100644
--- a/src/components/ai/accessibility/keyboard-navigation-engine.tsx
+++ b/src/components/ai/accessibility/keyboard-navigation-engine.tsx
@@ -30,7 +30,7 @@ interface KeyboardNavigationEngineProps {
 interface OptimizationResults {
   elementsProcessed: number;
   elementsEnhanced: number;
-  warnings: string: any[];
+  warnings: string[];
 }
 
 export const KeyboardNavigationEngine: React.FC<KeyboardNavigationEngineProps> = ({ 
diff --git a/src/components/ai/accessibility/reduced-motion-mode-engine.tsx b/src/components/ai/accessibility/reduced-motion-mode-engine.tsx
index 5940dc3..7a7437b 100644
--- a/src/components/ai/accessibility/reduced-motion-mode-engine.tsx
+++ b/src/components/ai/accessibility/reduced-motion-mode-engine.tsx
@@ -27,7 +27,7 @@ interface ReducedMotionModeEngineProps {
 interface OptimizationResults {
   elementsProcessed: number;
   motionsReduced: number;
-  warnings: string: any[];
+  warnings: string[];
 }
 
 export const ReducedMotionModeEngine: React.FC<ReducedMotionModeEngineProps> = ({ 
diff --git a/src/components/ai/accessibility/screen-reader-optimization-engine.tsx b/src/components/ai/accessibility/screen-reader-optimization-engine.tsx
index fdf36a7..4b7b2b2 100644
--- a/src/components/ai/accessibility/screen-reader-optimization-engine.tsx
+++ b/src/components/ai/accessibility/screen-reader-optimization-engine.tsx
@@ -31,7 +31,7 @@ interface ScreenReaderOptimizationEngineProps {
 interface OptimizationResults {
   elementsProcessed: number;
   elementsEnhanced: number;
-  warnings: string: any[];
+  warnings: string[];
 }
 
 export const ScreenReaderOptimizationEngine: React.FC<ScreenReaderOptimizationEngineProps> = ({ 
diff --git a/src/components/ai/accessibility/text-to-speech-engine.tsx b/src/components/ai/accessibility/text-to-speech-engine.tsx
index 6ef8bb1..27027fa 100644
--- a/src/components/ai/accessibility/text-to-speech-engine.tsx
+++ b/src/components/ai/accessibility/text-to-speech-engine.tsx
@@ -50,7 +50,7 @@ export const TextToSpeechEngine: React.FC<TextToSpeechEngineProps> = ({
   const [isSpeaking, setIsSpeaking] = useState<boolean>(false);
   const [isPaused, setIsPaused] = useState<boolean>(false);
   const [text, setText] = useState<string>('');
-  const [availableVoices, setAvailableVoices] = useState<SpeechSynthesisVoiceType: any[]>([]);
+  const [availableVoices, setAvailableVoices] = useState<SpeechSynthesisVoiceType[]>([]);
   const [selectedVoice, setSelectedVoice] = useState<SpeechSynthesisVoiceType | null>(null);
   const [speechSupported, setSpeechSupported] = useState<boolean>(true);
   
diff --git a/src/components/ai/adaptive-content-suggestions.tsx b/src/components/ai/adaptive-content-suggestions.tsx
index 152c7d1..6fea45f 100644
--- a/src/components/ai/adaptive-content-suggestions.tsx
+++ b/src/components/ai/adaptive-content-suggestions.tsx
@@ -101,7 +101,7 @@ const mockLearningPath: LearningPath = {
 export default function AdaptiveContentSuggestions() {
   const [activeTab, setActiveTab] = useState<string>('for-you');
   const [isLoading, setIsLoading] = useState<boolean>(false);
-  const [contentSuggestions, setContentSuggestions] = useState<ContentSuggestion: any[]>([]);
+  const [contentSuggestions, setContentSuggestions] = useState<ContentSuggestion[]>([]);
   const [learnerProfile, setLearnerProfile] = useState<LearnerProfile>(mockLearnerProfile);
   const [currentLearningPath, setCurrentLearningPath] = useState<LearningPath | null>(mockLearningPath);
   
diff --git a/src/components/ai/ai-prompt.tsx b/src/components/ai/ai-prompt.tsx
index 54d21ea..3afa1f4 100644
--- a/src/components/ai/ai-prompt.tsx
+++ b/src/components/ai/ai-prompt.tsx
@@ -65,7 +65,7 @@ export function AIPrompt({
   // Mock these values since they don't exist in the actual service
   const defaultProvider = 'openai';
   const defaultModel = 'gpt-4';
-  const allModels: AIModel: any[] = [
+  const allModels: AIModel[] = [
     { id: 'gpt-4', name: 'GPT-4', provider: 'openai' },
     { id: 'gpt-3.5-turbo', name: 'GPT-3.5 Turbo', provider: 'openai' },
     { id: 'claude-3', name: 'Claude 3', provider: 'anthropic' }
diff --git a/src/components/ai/curriculum-differentiation/curriculum-differentiation-engine.tsx b/src/components/ai/curriculum-differentiation/curriculum-differentiation-engine.tsx
index 5d53e25..0d097d9 100644
--- a/src/components/ai/curriculum-differentiation/curriculum-differentiation-engine.tsx
+++ b/src/components/ai/curriculum-differentiation/curriculum-differentiation-engine.tsx
@@ -26,7 +26,7 @@ import {
 interface CurriculumDifferentiationEngineProps {
   curriculumPlanId?: string;
   curriculumContent?: string;
-  objectives?: string: any[];
+  objectives?: string[];
   subject?: string;
   keyStage?: string;
   year?: string;
@@ -46,7 +46,7 @@ export default function CurriculumDifferentiationEngine({
 }: CurriculumDifferentiationEngineProps) {
   const [isGenerating, setIsGenerating] = useState(false);
   const [differentiatedContent, setDifferentiatedContent] = useState<any>(null);
-  const [learningProfiles, setLearningProfiles] = useState<any: any[]>([]);
+  const [learningProfiles, setLearningProfiles] = useState<any[]>([]);
   const [selectedProfile, setSelectedProfile] = useState<string>('');
   const [settings, setSettings] = useState({
     adaptToLearningStyle: true,
diff --git a/src/components/ai/emotional-wellbeing/emotional-checkin.tsx b/src/components/ai/emotional-wellbeing/emotional-checkin.tsx
index 415fb86..4726aec 100644
--- a/src/components/ai/emotional-wellbeing/emotional-checkin.tsx
+++ b/src/components/ai/emotional-wellbeing/emotional-checkin.tsx
@@ -20,8 +20,8 @@ type CheckinData = {
   mood: string;
   intensity: number;
   notes: string;
-  triggers: string: any[];
-  strategies: string: any[];
+  triggers: string[];
+  strategies: string[];
 };
 
 // Export both as default and named export to fix build warnings
@@ -37,15 +37,15 @@ export function EmotionalCheckin() {
     triggers: [],
     strategies: []
   });
-  const [suggestedStrategies, setSuggestedStrategies] = useState<string: any[]>([]);
-  const [selectedTriggers, setSelectedTriggers] = useState<string: any[]>([]);
+  const [suggestedStrategies, setSuggestedStrategies] = useState<string[]>([]);
+  const [selectedTriggers, setSelectedTriggers] = useState<string[]>([]);
   const [customTrigger, setCustomTrigger] = useState('');
   const [historicalPatterns, setHistoricalPatterns] = useState<Record<string, any> | null>(null);
   const [voiceInput, setVoiceInput] = useState(false);
   const [isRecording, setIsRecording] = useState(false);
 
   // Sample emotions with descriptions
-  const emotions: Emotion: any[] = [
+  const emotions: Emotion[] = [
     { name: 'Happy', color: 'bg-green-500', description: 'Feeling joyful, content, or pleased' },
     { name: 'Calm', color: 'bg-blue-400', description: 'Feeling peaceful, relaxed, or at ease' },
     { name: 'Excited', color: 'bg-yellow-400', description: 'Feeling enthusiastic, eager, or energetic' },
@@ -105,7 +105,7 @@ export function EmotionalCheckin() {
     setStep(2);
   };
 
-  const handleIntensityChange = (value: number: any[]) => {
+  const handleIntensityChange = (value: number[]) => {
     setCheckinData(prev => ({
       ...prev,
       intensity: value[0]
@@ -207,7 +207,7 @@ export function EmotionalCheckin() {
     }
   };
 
-  const saveSelectedStrategies = (strategies: string: any[]) => {
+  const saveSelectedStrategies = (strategies: string[]) => {
     setCheckinData(prev => ({
       ...prev,
       strategies
diff --git a/src/components/ai/executive-dysfunction/executive-dysfunction-support.tsx b/src/components/ai/executive-dysfunction/executive-dysfunction-support.tsx
index 2b7fe1c..7f54f62 100644
--- a/src/components/ai/executive-dysfunction/executive-dysfunction-support.tsx
+++ b/src/components/ai/executive-dysfunction/executive-dysfunction-support.tsx
@@ -52,7 +52,7 @@ export default function ExecutiveDysfunctionSupport({
   const [activeTab, setActiveTab] = useState('task-management');
   const [isLoading, setIsLoading] = useState(false);
   const [userData, setUserData] = useState<any>(null);
-  const [tasks, setTasks] = useState<any: any[]>([]);
+  const [tasks, setTasks] = useState<any[]>([]);
   const [newTask, setNewTask] = useState({
     title: '',
     description: '',
diff --git a/src/components/ai/learning-style/learning-style-assessment.tsx b/src/components/ai/learning-style/learning-style-assessment.tsx
index 7d1d71a..120c52a 100644
--- a/src/components/ai/learning-style/learning-style-assessment.tsx
+++ b/src/components/ai/learning-style/learning-style-assessment.tsx
@@ -15,14 +15,14 @@ type Question = {
   id: string;
   text: string;
   type: 'multiple-choice' | 'open-ended';
-  options?: string: any[];
+  options?: string[];
 };
 
 type LearningStyle = {
   name: string;
   score: number;
   description: string;
-  strategies: string: any[];
+  strategies: string[];
 };
 
 export default function LearningStyleAssessment() {
@@ -34,12 +34,12 @@ export default function LearningStyleAssessment() {
   const [results, setResults] = useState<{
     primaryStyle: LearningStyle;
     secondaryStyle: LearningStyle;
-    allStyles: LearningStyle: any[];
-    personalizedRecommendations: string: any[];
+    allStyles: LearningStyle[];
+    personalizedRecommendations: string[];
   } | null>(null);
 
   // Sample questions - in production, these would be more comprehensive
-  const questions: Question: any[] = [
+  const questions: Question[] = [
     {
       id: 'q1',
       text: 'When learning something new, I prefer to:',
diff --git a/src/components/ai/progress-monitoring-alerts.tsx b/src/components/ai/progress-monitoring-alerts.tsx
index 0abe62e..8605ae8 100644
--- a/src/components/ai/progress-monitoring-alerts.tsx
+++ b/src/components/ai/progress-monitoring-alerts.tsx
@@ -78,7 +78,7 @@ const mockLearnerProfile: LearnerProfile = {
 };
 
 // Mock learning paths for demonstration
-const mockLearningPaths: LearningPath: any[] = [
+const mockLearningPaths: LearningPath[] = [
   {
     id: 'path-1',
     learnerId: 'learner-1',
@@ -155,7 +155,7 @@ const mockRecentActivities = [
 ];
 
 // Mock intervention alerts for demonstration
-const mockInterventionAlerts: InterventionAlert: any[] = [
+const mockInterventionAlerts: InterventionAlert[] = [
   {
     id: 'alert-1',
     learnerId: 'learner-1',
@@ -285,11 +285,11 @@ enum LearningStyle {
 export default function ProgressMonitoringAlerts() {
   const [activeTab, setActiveTab] = useState<string>('alerts');
   const [isLoading, setIsLoading] = useState<boolean>(false);
-  const [interventionAlerts, setInterventionAlerts] = useState<InterventionAlert: any[]>(mockInterventionAlerts);
+  const [interventionAlerts, setInterventionAlerts] = useState<InterventionAlert[]>(mockInterventionAlerts);
   const [progressReport, setProgressReport] = useState<ProgressReport | null>(mockProgressReport);
   const [learnerProfile, setLearnerProfile] = useState<LearnerProfile>(mockLearnerProfile);
   const [learningPaths, setLearningPaths] = useState<LearningPath[]>(mockLearningPaths);
-  const [recentActivities, setRecentActivities] = useState<any: any[]>(mockRecentActivities);
+  const [recentActivities, setRecentActivities] = useState<any[]>(mockRecentActivities);
   
   // Monitor progress and generate alerts
   const monitorProgress = async () => {
diff --git a/src/components/ai/speech-recognition/advanced-speech-recognition.tsx b/src/components/ai/speech-recognition/advanced-speech-recognition.tsx
index a5a4b1c..ab39049 100644
--- a/src/components/ai/speech-recognition/advanced-speech-recognition.tsx
+++ b/src/components/ai/speech-recognition/advanced-speech-recognition.tsx
@@ -62,7 +62,7 @@ export default function AdvancedSpeechRecognition({
   const [isCalibrating, setIsCalibrating] = useState(false);
   const [calibrationStep, setCalibrationStep] = useState(0);
   const [calibrationProgress, setCalibrationProgress] = useState(0);
-  const [calibrationSamples, setCalibrationSamples] = useState<number: any[]>([]);
+  const [calibrationSamples, setCalibrationSamples] = useState<number[]>([]);
   
   // References
   const recognitionRef = useRef<any>(null);
diff --git a/src/components/ai/teacher-automation/teacher-automation.tsx b/src/components/ai/teacher-automation/teacher-automation.tsx
index b491d21..f5d3359 100644
--- a/src/components/ai/teacher-automation/teacher-automation.tsx
+++ b/src/components/ai/teacher-automation/teacher-automation.tsx
@@ -21,8 +21,8 @@ export default function TeacherAutomation() {
     topic: '',
     objectives: '',
     duration: '60',
-    learningStyles: [] as string: any: any[],
-    specialNeeds: [] as string: any: any[]
+    learningStyles: [] as string[],
+    specialNeeds: [] as string[]
   });
   const [reportInput, setReportInput] = useState({
     studentName: '',
diff --git a/src/components/analytics/accessibility-validator.tsx b/src/components/analytics/accessibility-validator.tsx
index 510af9a..6f9ce73 100644
--- a/src/components/analytics/accessibility-validator.tsx
+++ b/src/components/analytics/accessibility-validator.tsx
@@ -11,7 +11,7 @@ import { DashboardConfig } from '@/lib/analytics/types';
 
 interface AccessibilityValidatorProps {
   dashboard: DashboardConfig;
-  onFixIssues?: (issues: AccessibilityIssue: any[]) => void;
+  onFixIssues?: (issues: AccessibilityIssue[]) => void;
 }
 
 export interface AccessibilityIssue {
@@ -30,7 +30,7 @@ export const AccessibilityValidator: React.FC<AccessibilityValidatorProps> = ({
   const [isValidating, setIsValidating] = useState(false);
   const [validationComplete, setValidationComplete] = useState(false);
   const [accessibilityScore, setAccessibilityScore] = useState(0);
-  const [issues, setIssues] = useState<AccessibilityIssue: any[]>([]);
+  const [issues, setIssues] = useState<AccessibilityIssue[]>([]);
   const [validationResults, setValidationResults] = useState<{
     perceivable: number;
     operable: number;
@@ -50,7 +50,7 @@ export const AccessibilityValidator: React.FC<AccessibilityValidatorProps> = ({
     // Simulate validation process
     setTimeout(() => {
       // This would be replaced with actual validation logic in a real implementation
-      const mockIssues: AccessibilityIssue: any[] = [];
+      const mockIssues: AccessibilityIssue[] = [];
       
       // Check for missing alt text in charts
       dashboard.widgets.forEach(widget => {
diff --git a/src/components/analytics/analytics-dashboard.tsx b/src/components/analytics/analytics-dashboard.tsx
index 97eb37f..e9c0e97 100644
--- a/src/components/analytics/analytics-dashboard.tsx
+++ b/src/components/analytics/analytics-dashboard.tsx
@@ -49,7 +49,7 @@ export const AnalyticsDashboard: React.FC<AnalyticsDashboardProps> = ({
   initialDashboardId
 }) => {
   const [isLoading, setIsLoading] = useState(true);
-  const [dashboards, setDashboards] = useState<DashboardConfig: any[]>([]);
+  const [dashboards, setDashboards] = useState<DashboardConfig[]>([]);
   const [currentDashboard, setCurrentDashboard] = useState<DashboardConfig | null>(null);
   const [filter, setFilter] = useState<AnalyticsFilter>({
     timePeriod: TimePeriod.MONTH,
diff --git a/src/components/analytics/curriculum-alignment-validator.tsx b/src/components/analytics/curriculum-alignment-validator.tsx
index 24c4f00..69d16f9 100644
--- a/src/components/analytics/curriculum-alignment-validator.tsx
+++ b/src/components/analytics/curriculum-alignment-validator.tsx
@@ -11,7 +11,7 @@ import { DashboardConfig } from '@/lib/analytics/types';
 
 interface CurriculumAlignmentValidatorProps {
   dashboard: DashboardConfig;
-  onFixIssues?: (issues: CurriculumAlignmentIssue: any[]) => void;
+  onFixIssues?: (issues: CurriculumAlignmentIssue[]) => void;
 }
 
 export interface CurriculumAlignmentIssue {
@@ -30,7 +30,7 @@ export const CurriculumAlignmentValidator: React.FC<CurriculumAlignmentValidator
   const [isValidating, setIsValidating] = useState(false);
   const [validationComplete, setValidationComplete] = useState(false);
   const [alignmentScore, setAlignmentScore] = useState(0);
-  const [issues, setIssues] = useState<CurriculumAlignmentIssue: any[]>([]);
+  const [issues, setIssues] = useState<CurriculumAlignmentIssue[]>([]);
   const [validationResults, setValidationResults] = useState<{
     keyStageAlignment: number;
     subjectCoverage: number;
@@ -50,7 +50,7 @@ export const CurriculumAlignmentValidator: React.FC<CurriculumAlignmentValidator
     // Simulate validation process
     setTimeout(() => {
       // This would be replaced with actual validation logic in a real implementation
-      const mockIssues: CurriculumAlignmentIssue: any[] = [];
+      const mockIssues: CurriculumAlignmentIssue[] = [];
       
       // Check for missing curriculum metadata
       dashboard.widgets.forEach(widget => {
diff --git a/src/components/analytics/custom-report-builder.tsx b/src/components/analytics/custom-report-builder.tsx
index 3a3c82c..cf36766 100644
--- a/src/components/analytics/custom-report-builder.tsx
+++ b/src/components/analytics/custom-report-builder.tsx
@@ -157,7 +157,7 @@ const allComponents = [
 ];
 
 // Draggable component for the sidebar
-const DraggableComponent = ({ component }: { component }): React.ReactNode => {
+const DraggableComponent = ({ component }: { component: any }): React.ReactNode => {
   const [{ isDragging }, drag] = useDrag(() => ({
     type: component.type,
     item: { ...component, id: `${component.id}-${uuidv4()}` },
@@ -182,8 +182,8 @@ const DraggableComponent = ({ component }: { component }): React.ReactNode => {
 
 // Droppable report canvas
 const ReportCanvas = ({ items, setItems, onEditItem, onRemoveItem, onMoveItem, onDuplicateItem }: {
-  items: any: any[];
-  setItems: (items: any: any[]) => void;
+  items: any[];
+  setItems: (items: any[]) => void;
   onEditItem: (id: string) => void;
   onRemoveItem: (id: string) => void;
   onMoveItem: (fromIndex: number, toIndex: number) => void;
@@ -266,7 +266,7 @@ const ReportItem = ({
   canMoveUp, 
   canMoveDown 
 }: {
-  item;
+  item: any;
   index: number;
   onEdit: () => void;
   onRemove: () => void;
@@ -400,7 +400,7 @@ const TablePreview = ({ dataType }: { dataType: string }): React.ReactNode => {
           </tr>
         </thead>
         <tbody>
-          {data.rows.slice(0, 3).map((row: string: any[], rowIndex: number) => (
+          {data.rows.slice(0, 3).map((row: string[], rowIndex: number) => (
             <tr key={`row-${rowIndex}`} className={rowIndex % 2 === 0 ? "bg-white" : "bg-muted/50"}>
               {row.map((cell: string, cellIndex: number) => (
                 <td key={`cell-${rowIndex}-${cellIndex}`} className="border px-4 py-2 text-sm">
@@ -441,225 +441,56 @@ const MetricPreview = (): React.ReactNode => {
   );
 };
 
-// Component for editing report items
-const ItemEditor = ({ item, onSave, onCancel }: {
-  item;
-  onSave: (updatedItem) => void;
-  onCancel: () => void;
-}): React.ReactNode => {
-  const [editedItem, setEditedItem] = useState(item);
-  
-  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
-    const { name, value } = e.target;
-    setEditedItem(prev => ({ ...prev, [name]: value }));
-  };
-  
-  const renderEditor = () => {
-    switch (editedItem.type) {
-      case ItemTypes.CHART:
-        return (
-          <div className="space-y-4">
-            <div>
-              <Label htmlFor="name">Chart Title</Label>
-              <Input
-                id="name"
-                name="name"
-                value={editedItem.name}
-                onChange={handleChange}
-              />
-            </div>
-            <div>
-              <Label htmlFor="chartType">Chart Type</Label>
-              <Select
-                value={editedItem.chartType}
-                onValueChange={(value) => setEditedItem(prev => ({ ...prev, chartType: value }))}
-              >
-                <SelectTrigger>
-                  <SelectValue placeholder="Select chart type" />
-                </SelectTrigger>
-                <SelectContent>
-                  <SelectItem value="bar">Bar Chart</SelectItem>
-                  <SelectItem value="line">Line Chart</SelectItem>
-                  <SelectItem value="pie">Pie Chart</SelectItem>
-                  <SelectItem value="area">Area Chart</SelectItem>
-                  <SelectItem value="scatter">Scatter Plot</SelectItem>
-                  <SelectItem value="radar">Radar Chart</SelectItem>
-                </SelectContent>
-              </Select>
-            </div>
-          </div>
-        );
-      case ItemTypes.TABLE:
-        return (
-          <div className="space-y-4">
-            <div>
-              <Label htmlFor="name">Table Title</Label>
-              <Input
-                id="name"
-                name="name"
-                value={editedItem.name}
-                onChange={handleChange}
-              />
-            </div>
-            <div>
-              <Label htmlFor="dataType">Data Type</Label>
-              <Select
-                value={editedItem.dataType}
-                onValueChange={(value) => setEditedItem(prev => ({ ...prev, dataType: value }))}
-              >
-                <SelectTrigger>
-                  <SelectValue placeholder="Select data type" />
-                </SelectTrigger>
-                <SelectContent>
-                  <SelectItem value="students">Student Data</SelectItem>
-                  <SelectItem value="subjects">Subject Data</SelectItem>
-                  <SelectItem value="resources">Resource Data</SelectItem>
-                </SelectContent>
-              </Select>
-            </div>
-          </div>
-        );
-      case ItemTypes.TEXT:
-        return (
-          <div className="space-y-4">
-            <div>
-              <Label htmlFor="name">Section Name</Label>
-              <Input
-                id="name"
-                name="name"
-                value={editedItem.name}
-                onChange={handleChange}
-              />
-            </div>
-            <div>
-              <Label htmlFor="content">Text Content</Label>
-              <Textarea
-                id="content"
-                name="content"
-                value={editedItem.content || ""}
-                onChange={handleChange}
-                className="min-h-[150px]"
-              />
-            </div>
-          </div>
-        );
-      case ItemTypes.HEADING:
-        return (
-          <div className="space-y-4">
-            <div>
-              <Label htmlFor="name">Section Name</Label>
-              <Input
-                id="name"
-                name="name"
-                value={editedItem.name}
-                onChange={handleChange}
-              />
-            </div>
-            <div>
-              <Label htmlFor="content">Heading Text</Label>
-              <Input
-                id="content"
-                name="content"
-                value={editedItem.content || ""}
-                onChange={handleChange}
-              />
-            </div>
-          </div>
-        );
-      case ItemTypes.METRIC:
-        return (
-          <div className="space-y-4">
-            <div>
-              <Label htmlFor="name">Metric Name</Label>
-              <Input
-                id="name"
-                name="name"
-                value={editedItem.name}
-                onChange={handleChange}
-              />
-            </div>
-          </div>
-        );
-      case ItemTypes.IMAGE:
-        return (
-          <div className="space-y-4">
-            <div>
-              <Label htmlFor="name">Image Name</Label>
-              <Input
-                id="name"
-                name="name"
-                value={editedItem.name}
-                onChange={handleChange}
-              />
-            </div>
-            <div>
-              <Label htmlFor="imageUrl">Image URL (optional)</Label>
-              <Input
-                id="imageUrl"
-                name="imageUrl"
-                value={editedItem.imageUrl || ""}
-                onChange={handleChange}
-                placeholder="https://example.com/image.jpg"
-              />
-            </div>
-          </div>
-        );
-      default:
-        return null;
-    }
-  };
-  
-  return (
-    <Card>
-      <CardHeader>
-        <CardTitle>Edit {editedItem.name}</CardTitle>
-        <CardDescription>
-          Customize this report component
-        </CardDescription>
-      </CardHeader>
-      <CardContent>
-        {renderEditor()}
-      </CardContent>
-      <CardFooter className="flex justify-between">
-        <Button variant="outline" onClick={onCancel}>
-          Cancel
-        </Button>
-        <Button onClick={() => onSave(editedItem)}>
-          Save Changes
-        </Button>
-      </CardFooter>
-    </Card>
-  );
-};
+// Component categories for the sidebar
+const componentCategories = [
+  { id: 'charts', name: 'Charts', icon: BarChart2, components: chartComponents },
+  { id: 'tables', name: 'Tables', icon: Table, components: tableComponents },
+  { id: 'text', name: 'Text', icon: Type, components: textComponents },
+  { id: 'metrics', name: 'Metrics', icon: Activity, components: metricComponents },
+  { id: 'images', name: 'Images', icon: ImageIcon, components: imageComponents },
+];
 
-// Main custom report builder component
-export default function CustomReportBuilder(): React.ReactNode {
-  const [reportItems, setReportItems] = useState<any: any[]>([]);
-  const [editingItem, setEditingItem] = useState<any>(null);
-  const [reportName, setReportName] = useState("Untitled Report");
-  const [reportDescription, setReportDescription] = useState("");
-  const [activeTab, setActiveTab] = useState("charts");
+// Main component
+export default function CustomReportBuilder() {
+  const [activeTab, setActiveTab] = useState('builder');
+  const [activeCategory, setActiveCategory] = useState('charts');
+  const [reportItems, setReportItems] = useState<any[]>([]);
+  const [reportTitle, setReportTitle] = useState('Custom Analytics Report');
+  const [reportDescription, setReportDescription] = useState('A comprehensive overview of key educational metrics and trends');
+  const [editingItemId, setEditingItemId] = useState<string | null>(null);
+  const [editingItemContent, setEditingItemContent] = useState('');
   
+  // Handle editing an item
   const handleEditItem = (id: string) => {
     const item = reportItems.find(item => item.id === id);
     if (item) {
-      setEditingItem(item);
+      setEditingItemId(id);
+      setEditingItemContent(item.content || '');
     }
   };
   
-  const handleSaveItem = (updatedItem) => {
+  // Save edited item
+  const handleSaveEdit = () => {
+    if (!editingItemId) return;
+    
     setReportItems(prevItems => 
       prevItems.map(item => 
-        item.id === updatedItem.id ? updatedItem : item
+        item.id === editingItemId 
+          ? { ...item, content: editingItemContent } 
+          : item
       )
     );
-    setEditingItem(null);
+    
+    setEditingItemId(null);
+    setEditingItemContent('');
   };
   
+  // Remove an item
   const handleRemoveItem = (id: string) => {
     setReportItems(prevItems => prevItems.filter(item => item.id !== id));
   };
   
+  // Move an item
   const handleMoveItem = (fromIndex: number, toIndex: number) => {
     if (toIndex < 0 || toIndex >= reportItems.length) return;
     
@@ -670,206 +501,346 @@ export default function CustomReportBuilder(): React.ReactNode {
     setReportItems(newItems);
   };
   
+  // Duplicate an item
   const handleDuplicateItem = (id: string) => {
-    const item = reportItems.find(item => item.id === id);
-    if (item) {
-      const duplicatedItem = {
-        ...item,
-        id: `${item.id.split('-')[0]}-${uuidv4()}`,
-        name: `${item.name} (Copy)`,
-      };
-      setReportItems(prevItems => [...prevItems, duplicatedItem]);
-    }
+    const itemToDuplicate = reportItems.find(item => item.id === id);
+    if (!itemToDuplicate) return;
+    
+    const duplicatedItem = {
+      ...itemToDuplicate,
+      id: `${itemToDuplicate.id.split('-')[0]}-${uuidv4()}`,
+    };
+    
+    setReportItems(prevItems => [...prevItems, duplicatedItem]);
   };
   
-  const handleGenerateReport = () => {
-    // In a real implementation, this would generate the actual report
-    console.log("Generating report with:", {
-      name: reportName,
-      description: reportDescription,
-      items: reportItems,
-    });
-    
-    // For demo purposes, just show a success message
-    alert("Report generated successfully!");
+  // Export report
+  const handleExportReport = () => {
+    // In a real implementation, this would generate a PDF or other format
+    console.log('Exporting report:', { title: reportTitle, description: reportDescription, items: reportItems });
+    alert('Report exported successfully!');
   };
   
-  const renderComponentList = () => {
-    switch (activeTab) {
-      case "charts":
-        return chartComponents.map(component => (
-          <DraggableComponent key={component.id} component={component} />
-        ));
-      case "tables":
-        return tableComponents.map(component => (
-          <DraggableComponent key={component.id} component={component} />
-        ));
-      case "text":
-        return textComponents.map(component => (
-          <DraggableComponent key={component.id} component={component} />
-        ));
-      case "metrics":
-        return metricComponents.map(component => (
-          <DraggableComponent key={component.id} component={component} />
-        ));
-      case "media":
-        return imageComponents.map(component => (
-          <DraggableComponent key={component.id} component={component} />
-        ));
-      case "all":
-      default:
-        return allComponents.map(component => (
-          <DraggableComponent key={component.id} component={component} />
-        ));
-    }
+  // Share report
+  const handleShareReport = () => {
+    // In a real implementation, this would open sharing options
+    console.log('Sharing report:', { title: reportTitle, description: reportDescription, items: reportItems });
+    alert('Report sharing options would appear here.');
   };
   
   return (
     <DndProvider backend={HTML5Backend}>
-      <div className="container mx-auto p-4 max-w-7xl">
-        <div className="flex items-centre justify-between mb-6">
+      <div className="container mx-auto py-8">
+        <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-8">
           <div>
-            <h1 className="text-3xl font-bold">Custom Report Builder</h1>
-            <p className="text-muted-foreground">
-              Create custom reports by dragging and dropping components
+            <h1 className="text-4xl font-bold tracking-tight">Custom Report Builder</h1>
+            <p className="text-xl text-muted-foreground mt-2">
+              Create tailored analytics reports with drag-and-drop simplicity
             </p>
           </div>
-          <div className="flex items-centre space-x-2">
-            <Button variant="outline" className="flex items-centre gap-1">
-              <HelpCircle className="h-4 w-4" />
-              Help
-            </Button>
-            <Button variant="outline" className="flex items-centre gap-1">
-              <Settings className="h-4 w-4" />
-              Settings
-            </Button>
-          </div>
         </div>
         
-        <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
-          {/* Left sidebar with components */}
-          <div className="md:col-span-1 space-y-6">
+        <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-8">
+          <TabsList className="grid grid-cols-3 w-full md:w-auto">
+            <TabsTrigger value="builder" className="flex items-center">
+              <Layout className="mr-2 h-4 w-4" />
+              Report Builder
+            </TabsTrigger>
+            <TabsTrigger value="preview" className="flex items-center">
+              <Eye className="mr-2 h-4 w-4" />
+              Preview
+            </TabsTrigger>
+            <TabsTrigger value="settings" className="flex items-center">
+              <Settings className="mr-2 h-4 w-4" />
+              Settings
+            </TabsTrigger>
+          </TabsList>
+          
+          {/* Builder Tab */}
+          <TabsContent value="builder" className="space-y-6">
+            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
+              {/* Component Sidebar */}
+              <Card className="md:col-span-1">
+                <CardHeader>
+                  <CardTitle className="flex items-center">
+                    <PlusCircle className="mr-2 h-5 w-5" />
+                    Components
+                  </CardTitle>
+                  <CardDescription>
+                    Drag and drop components to build your report
+                  </CardDescription>
+                </CardHeader>
+                <CardContent className="space-y-6">
+                  <Tabs defaultValue={activeCategory} onValueChange={setActiveCategory}>
+                    <TabsList className="grid grid-cols-5 w-full">
+                      {componentCategories.map(category => (
+                        <TabsTrigger 
+                          key={category.id} 
+                          value={category.id}
+                          className="p-2"
+                          title={category.name}
+                        >
+                          <category.icon className="h-4 w-4" />
+                        </TabsTrigger>
+                      ))}
+                    </TabsList>
+                    
+                    {componentCategories.map(category => (
+                      <TabsContent key={category.id} value={category.id} className="pt-4">
+                        <div className="space-y-2">
+                          {category.components.map(component => (
+                            <DraggableComponent key={component.id} component={component} />
+                          ))}
+                        </div>
+                      </TabsContent>
+                    ))}
+                  </Tabs>
+                </CardContent>
+              </Card>
+              
+              {/* Report Canvas */}
+              <Card className="md:col-span-3">
+                <CardHeader>
+                  <CardTitle className="flex items-center">
+                    <FileText className="mr-2 h-5 w-5" />
+                    Report Canvas
+                  </CardTitle>
+                  <CardDescription>
+                    Design your report by adding and arranging components
+                  </CardDescription>
+                </CardHeader>
+                <CardContent>
+                  <ReportCanvas 
+                    items={reportItems}
+                    setItems={setReportItems}
+                    onEditItem={handleEditItem}
+                    onRemoveItem={handleRemoveItem}
+                    onMoveItem={handleMoveItem}
+                    onDuplicateItem={handleDuplicateItem}
+                  />
+                </CardContent>
+                <CardFooter className="flex justify-between">
+                  <Button variant="outline" onClick={() => setReportItems([])}>
+                    Clear Canvas
+                  </Button>
+                  <div className="flex space-x-2">
+                    <Button variant="outline" onClick={() => setActiveTab('preview')}>
+                      <Eye className="mr-2 h-4 w-4" />
+                      Preview
+                    </Button>
+                    <Button onClick={handleExportReport}>
+                      <Download className="mr-2 h-4 w-4" />
+                      Export Report
+                    </Button>
+                  </div>
+                </CardFooter>
+              </Card>
+            </div>
+            
+            {/* Item Edit Dialog */}
+            {editingItemId && (
+              <Card className="fixed inset-0 z-50 flex items-center justify-center bg-black/50">
+                <div className="w-full max-w-md p-6 bg-white rounded-lg shadow-lg">
+                  <h3 className="text-lg font-medium mb-4">Edit Content</h3>
+                  <Textarea 
+                    value={editingItemContent}
+                    onChange={(e) => setEditingItemContent(e.target.value)}
+                    className="min-h-[200px] mb-4"
+                  />
+                  <div className="flex justify-end space-x-2">
+                    <Button variant="outline" onClick={() => setEditingItemId(null)}>
+                      Cancel
+                    </Button>
+                    <Button onClick={handleSaveEdit}>
+                      Save Changes
+                    </Button>
+                  </div>
+                </div>
+              </Card>
+            )}
+          </TabsContent>
+          
+          {/* Preview Tab */}
+          <TabsContent value="preview" className="space-y-6">
             <Card>
-              <CardHeader className="pb-3">
-                <CardTitle>Report Components</CardTitle>
-                <CardDescription>
-                  Drag components to the canvas
-                </CardDescription>
+              <CardHeader>
+                <div className="flex items-center justify-between">
+                  <div>
+                    <CardTitle className="text-2xl">{reportTitle}</CardTitle>
+                    <CardDescription>{reportDescription}</CardDescription>
+                  </div>
+                  <div className="flex space-x-2">
+                    <Button variant="outline" size="sm" onClick={handleShareReport}>
+                      <Share2 className="mr-2 h-4 w-4" />
+                      Share
+                    </Button>
+                    <Button variant="outline" size="sm" onClick={handleExportReport}>
+                      <Download className="mr-2 h-4 w-4" />
+                      Export
+                    </Button>
+                    <Button size="sm" onClick={() => setActiveTab('builder')}>
+                      <Edit className="mr-2 h-4 w-4" />
+                      Edit
+                    </Button>
+                  </div>
+                </div>
               </CardHeader>
-              <CardContent className="p-0">
-                <Tabs defaultValue="charts" value={activeTab} onValueChange={setActiveTab}>
-                  <TabsList className="grid grid-cols-3 w-full">
-                    <TabsTrigger value="charts">Charts</TabsTrigger>
-                    <TabsTrigger value="tables">Tables</TabsTrigger>
-                    <TabsTrigger value="text">Text</TabsTrigger>
-                  </TabsList>
-                  <TabsList className="grid grid-cols-3 w-full mt-1">
-                    <TabsTrigger value="metrics">Metrics</TabsTrigger>
-                    <TabsTrigger value="media">Media</TabsTrigger>
-                    <TabsTrigger value="all">All</TabsTrigger>
-                  </TabsList>
-                  
-                  <div className="p-4 space-y-2">
-                    {renderComponentList()}
+              <CardContent>
+                {reportItems.length === 0 ? (
+                  <div className="text-center py-12">
+                    <div className="mx-auto flex h-20 w-20 items-center justify-center rounded-full bg-muted">
+                      <FileText className="h-10 w-10 text-muted-foreground" />
+                    </div>
+                    <h3 className="mt-6 text-2xl font-semibold">No Report Content</h3>
+                    <p className="mt-2 text-muted-foreground">
+                      Add components to your report using the Report Builder tab.
+                    </p>
+                    <Button className="mt-6" onClick={() => setActiveTab('builder')}>
+                      Build Your Report
+                    </Button>
                   </div>
-                </Tabs>
+                ) : (
+                  <div className="space-y-6">
+                    {reportItems.map((item) => (
+                      <div key={item.id} className="border rounded-md overflow-hidden">
+                        {item.type === ItemTypes.CHART && (
+                          <ChartPreview chartType={item.chartType} />
+                        )}
+                        {item.type === ItemTypes.TABLE && (
+                          <TablePreview dataType={item.dataType} />
+                        )}
+                        {item.type === ItemTypes.TEXT && (
+                          <div className="p-4">
+                            <p>{item.content || "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}</p>
+                          </div>
+                        )}
+                        {item.type === ItemTypes.HEADING && (
+                          <div className="p-4">
+                            <h3 className="text-xl font-bold">{item.content || "Section Heading"}</h3>
+                          </div>
+                        )}
+                        {item.type === ItemTypes.METRIC && (
+                          <MetricPreview />
+                        )}
+                        {item.type === ItemTypes.IMAGE && (
+                          <div className="p-4 flex items-center justify-center">
+                            <div className="h-40 w-full bg-muted flex items-center justify-center rounded-md">
+                              <ImageIcon className="h-10 w-10 text-muted-foreground" />
+                              <span className="ml-2 text-sm text-muted-foreground">Image Placeholder</span>
+                            </div>
+                          </div>
+                        )}
+                        {item.type === ItemTypes.DIVIDER && (
+                          <div className="p-4">
+                            <div className="h-px w-full bg-muted-foreground/20" />
+                          </div>
+                        )}
+                      </div>
+                    ))}
+                  </div>
+                )}
               </CardContent>
             </Card>
-            
+          </TabsContent>
+          
+          {/* Settings Tab */}
+          <TabsContent value="settings" className="space-y-6">
             <Card>
-              <CardHeader className="pb-3">
-                <CardTitle>Report Settings</CardTitle>
+              <CardHeader>
+                <CardTitle className="flex items-center">
+                  <Settings className="mr-2 h-5 w-5" />
+                  Report Settings
+                </CardTitle>
                 <CardDescription>
-                  Configure your report
+                  Configure your report details and appearance
                 </CardDescription>
               </CardHeader>
-              <CardContent className="space-y-4">
-                <div>
-                  <Label htmlFor="reportName">Report Name</Label>
-                  <Input
-                    id="reportName"
-                    value={reportName}
-                    onChange={(e) => setReportName(e.target.value)}
+              <CardContent className="space-y-6">
+                <div className="space-y-2">
+                  <Label htmlFor="report-title">Report Title</Label>
+                  <Input 
+                    id="report-title" 
+                    value={reportTitle}
+                    onChange={(e) => setReportTitle(e.target.value)}
+                    placeholder="Enter report title"
                   />
                 </div>
-                <div>
-                  <Label htmlFor="reportDescription">Description</Label>
-                  <Textarea
-                    id="reportDescription"
+                
+                <div className="space-y-2">
+                  <Label htmlFor="report-description">Report Description</Label>
+                  <Textarea 
+                    id="report-description" 
                     value={reportDescription}
                     onChange={(e) => setReportDescription(e.target.value)}
-                    className="min-h-[100px]"
+                    placeholder="Enter report description"
                   />
                 </div>
+                
                 <div className="space-y-2">
-                  <Label className="block">Report Options</Label>
-                  <div className="flex items-centre space-x-2">
-                    <Checkbox id="includeHeader" />
-                    <Label htmlFor="includeHeader" className="text-sm font-normal">Include header</Label>
-                  </div>
-                  <div className="flex items-centre space-x-2">
-                    <Checkbox id="includeFooter" />
-                    <Label htmlFor="includeFooter" className="text-sm font-normal">Include footer</Label>
+                  <Label>Report Theme</Label>
+                  <div className="grid grid-cols-3 gap-2">
+                    <div className="border rounded-md p-2 flex items-center space-x-2 cursor-pointer bg-primary/5">
+                      <div className="h-4 w-4 rounded-full bg-primary" />
+                      <span className="text-sm">Default</span>
+                    </div>
+                    <div className="border rounded-md p-2 flex items-center space-x-2 cursor-pointer">
+                      <div className="h-4 w-4 rounded-full bg-blue-500" />
+                      <span className="text-sm">Blue</span>
+                    </div>
+                    <div className="border rounded-md p-2 flex items-center space-x-2 cursor-pointer">
+                      <div className="h-4 w-4 rounded-full bg-green-500" />
+                      <span className="text-sm">Green</span>
+                    </div>
                   </div>
-                  <div className="flex items-centre space-x-2">
-                    <Checkbox id="pageNumbers" defaultChecked />
-                    <Label htmlFor="pageNumbers" className="text-sm font-normal">Show page numbers</Label>
+                </div>
+                
+                <div className="space-y-2">
+                  <Label>Page Size</Label>
+                  <Select defaultValue="a4">
+                    <SelectTrigger>
+                      <SelectValue placeholder="Select page size" />
+                    </SelectTrigger>
+                    <SelectContent>
+                      <SelectItem value="a4">A4</SelectItem>
+                      <SelectItem value="letter">Letter</SelectItem>
+                      <SelectItem value="legal">Legal</SelectItem>
+                      <SelectItem value="custom">Custom</SelectItem>
+                    </SelectContent>
+                  </Select>
+                </div>
+                
+                <div className="space-y-2">
+                  <Label>Additional Options</Label>
+                  <div className="space-y-2">
+                    <div className="flex items-center space-x-2">
+                      <Checkbox id="include-date" defaultChecked />
+                      <Label htmlFor="include-date">Include generation date</Label>
+                    </div>
+                    <div className="flex items-center space-x-2">
+                      <Checkbox id="include-page-numbers" defaultChecked />
+                      <Label htmlFor="include-page-numbers">Include page numbers</Label>
+                    </div>
+                    <div className="flex items-center space-x-2">
+                      <Checkbox id="include-logo" defaultChecked />
+                      <Label htmlFor="include-logo">Include school logo</Label>
+                    </div>
                   </div>
                 </div>
               </CardContent>
-              <CardFooter>
-                <Button 
-                  onClick={handleGenerateReport} 
-                  className="w-full flex items-centre gap-1"
-                  disabled={reportItems.length === 0}
-                >
-                  <FileText className="h-4 w-4" />
-                  Generate Report
+              <CardFooter className="flex justify-between">
+                <Button variant="outline" onClick={() => {
+                  setReportTitle('Custom Analytics Report');
+                  setReportDescription('A comprehensive overview of key educational metrics and trends');
+                }}>
+                  Reset to Default
+                </Button>
+                <Button onClick={() => setActiveTab('builder')}>
+                  Apply Settings
                 </Button>
               </CardFooter>
             </Card>
-          </div>
-          
-          {/* Main canvas area */}
-          <div className="md:col-span-3">
-            {editingItem ? (
-              <ItemEditor
-                item={editingItem}
-                onSave={handleSaveItem}
-                onCancel={() => setEditingItem(null)}
-              />
-            ) : (
-              <>
-                <div className="flex items-centre justify-between mb-4">
-                  <h2 className="text-xl font-bold">{reportName}</h2>
-                  <div className="flex items-centre space-x-2">
-                    <Button variant="outline" className="flex items-centre gap-1">
-                      <Download className="h-4 w-4" />
-                      Export
-                    </Button>
-                    <Button variant="outline" className="flex items-centre gap-1">
-                      <Share2 className="h-4 w-4" />
-                      Share
-                    </Button>
-                    <Button className="flex items-centre gap-1">
-                      <Maximize2 className="h-4 w-4" />
-                      Preview
-                    </Button>
-                  </div>
-                </div>
-                
-                <ReportCanvas
-                  items={reportItems}
-                  setItems={setReportItems}
-                  onEditItem={handleEditItem}
-                  onRemoveItem={handleRemoveItem}
-                  onMoveItem={handleMoveItem}
-                  onDuplicateItem={handleDuplicateItem}
-                />
-              </>
-            )}
-          </div>
-        </div>
+          </TabsContent>
+        </Tabs>
       </div>
     </DndProvider>
   );
diff --git a/src/components/assessment/assessment-module.tsx b/src/components/assessment/assessment-module.tsx
index a66e66b..34ba9ce 100644
--- a/src/components/assessment/assessment-module.tsx
+++ b/src/components/assessment/assessment-module.tsx
@@ -22,8 +22,8 @@ interface Assessment {
     id: string;
     type: 'multiple_choice' | 'short_answer' | 'essay' | 'matching' | 'true_false';
     text: string;
-    options?: string: any[];
-    correctAnswer?: string | string: any: any[];
+    options?: string[];
+    correctAnswer?: string | string[];
     points: number;
   }[];
   createdAt: string;
@@ -31,7 +31,7 @@ interface Assessment {
 }
 
 interface AssessmentModuleProps {
-  initialAssessments?: Assessment: any[];
+  initialAssessments?: Assessment[];
   onAssessmentSelect?: (assessment: Assessment) => void;
   className?: string;
 }
@@ -42,7 +42,7 @@ export function AssessmentModule({
   className = ''
 }: AssessmentModuleProps) {
   const { showToast } = useToast();
-  const [assessments, setAssessments] = useState<Assessment: any[]>(initialAssessments);
+  const [assessments, setAssessments] = useState<Assessment[]>(initialAssessments);
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
   
@@ -63,7 +63,7 @@ export function AssessmentModule({
         }
         
         // Mock data for demonstration
-        const mockAssessments: Assessment: any[] = [
+        const mockAssessments: Assessment[] = [
           {
             id: '1',
             title: 'Year 8 Algebra Assessment',
diff --git a/src/components/assessment/question-types/file-upload.tsx b/src/components/assessment/question-types/file-upload.tsx
index d542ca9..52604d8 100644
--- a/src/components/assessment/question-types/file-upload.tsx
+++ b/src/components/assessment/question-types/file-upload.tsx
@@ -8,13 +8,13 @@ interface FileUploadQuestionProps {
   initialData?: {
     content: string;
     points: number;
-    allowedFileTypes: string: any[];
+    allowedFileTypes: string[];
     maxFileSize: number;
   };
   onSave: (data: {
     type: string;
     content: string;
-    allowedFileTypes: string: any[];
+    allowedFileTypes: string[];
     maxFileSize: number;
     points: number;
   }) => void;
@@ -30,7 +30,7 @@ export default function FileUploadQuestion({
 }: FileUploadQuestionProps) {
   const [content, setContent] = useState(initialData?.content || '');
   const [points, setPoints] = useState(initialData?.points || 1);
-  const [allowedFileTypes, setAllowedFileTypes] = useState<string: any[]>(
+  const [allowedFileTypes, setAllowedFileTypes] = useState<string[]>(
     initialData?.allowedFileTypes || ['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png']
   );
   const [maxFileSize, setMaxFileSize] = useState(initialData?.maxFileSize || 5);
diff --git a/src/components/assessment/question-types/matching.tsx b/src/components/assessment/question-types/matching.tsx
index 953d657..c8d9124 100644
--- a/src/components/assessment/question-types/matching.tsx
+++ b/src/components/assessment/question-types/matching.tsx
@@ -13,14 +13,14 @@ interface MatchingItem {
 interface MatchingQuestionProps {
   initialData?: {
     content: string;
-    items: MatchingItem: any[];
+    items: MatchingItem[];
     points: number;
     shuffleOptions: boolean;
   };
   onSave: (data: {
     type: string;
     content: string;
-    items: MatchingItem: any[];
+    items: MatchingItem[];
     points: number;
     shuffleOptions: boolean;
   }) => void;
@@ -35,7 +35,7 @@ export default function MatchingQuestion({
   isEditing = false
 }: MatchingQuestionProps) {
   const [content, setContent] = useState(initialData?.content || '');
-  const [items, setItems] = useState<MatchingItem: any[]>(
+  const [items, setItems] = useState<MatchingItem[]>(
     initialData?.items || [
       { id: '1', left: '', right: '' },
       { id: '2', left: '', right: '' },
diff --git a/src/components/assessment/question-types/multiple-choice.tsx b/src/components/assessment/question-types/multiple-choice.tsx
index 33c0ddc..e434653 100644
--- a/src/components/assessment/question-types/multiple-choice.tsx
+++ b/src/components/assessment/question-types/multiple-choice.tsx
@@ -13,14 +13,14 @@ interface MultipleChoiceOption {
 interface MultipleChoiceQuestionProps {
   initialData?: {
     content: string;
-    options: MultipleChoiceOption: any[];
+    options: MultipleChoiceOption[];
     points: number;
   };
   onSave: (data: {
     type: string;
     content: string;
-    options: MultipleChoiceOption: any[];
-    correctAnswer: string: any[];
+    options: MultipleChoiceOption[];
+    correctAnswer: string[];
     points: number;
   }) => void;
   onCancel: () => void;
@@ -34,7 +34,7 @@ export default function MultipleChoiceQuestion({
   isEditing = false
 }: MultipleChoiceQuestionProps) {
   const [content, setContent] = useState(initialData?.content || '');
-  const [options, setOptions] = useState<MultipleChoiceOption: any[]>(
+  const [options, setOptions] = useState<MultipleChoiceOption[]>(
     initialData?.options || [
       { id: '1', text: '', isCorrect: false },
       { id: '2', text: '', isCorrect: false },
diff --git a/src/components/avatar/script-editor.tsx b/src/components/avatar/script-editor.tsx
index 9a28152..5d94e2f 100644
--- a/src/components/avatar/script-editor.tsx
+++ b/src/components/avatar/script-editor.tsx
@@ -62,7 +62,7 @@ export const ScriptEditor: React.FC<ScriptEditorProps> = ({
   const [content, setContent] = useState(initialScript?.content || '');
   const [notes, setNotes] = useState(initialScript?.notes || '');
   const [category, setCategory] = useState<ContentCategory>(initialScript?.category || ContentCategory.LESSON);
-  const [targetAudience, setTargetAudience] = useState<TargetAudience: any[]>(initialScript?.targetAudience || [TargetAudience.KEY_STAGE_2]);
+  const [targetAudience, setTargetAudience] = useState<TargetAudience[]>(initialScript?.targetAudience || [TargetAudience.KEY_STAGE_2]);
   const [isSubmitting, setIsSubmitting] = useState(false);
   const [wordCount, setWordCount] = useState(0);
   const [estimatedDuration, setEstimatedDuration] = useState('0:00');
diff --git a/src/components/avatar/video-generator.tsx b/src/components/avatar/video-generator.tsx
index 42a576b..42e0d49 100644
--- a/src/components/avatar/video-generator.tsx
+++ b/src/components/avatar/video-generator.tsx
@@ -55,7 +55,7 @@ export const VideoGenerator: React.FC<VideoGeneratorProps> = ({
   script,
   onVideoGenerated
 }) => {
-  const [avatarModels, setAvatarModels] = useState<AvatarModel: any[]>([]);
+  const [avatarModels, setAvatarModels] = useState<AvatarModel[]>([]);
   const [selectedAvatarId, setSelectedAvatarId] = useState<string>('');
   const [emotion, setEmotion] = useState<AvatarEmotion>(AvatarEmotion.PROFESSIONAL);
   const [speakingStyle, setSpeakingStyle] = useState<AvatarSpeakingStyle>(AvatarSpeakingStyle.EDUCATIONAL);
diff --git a/src/components/avatar/video-library.tsx b/src/components/avatar/video-library.tsx
index 6e21cee..627669b 100644
--- a/src/components/avatar/video-library.tsx
+++ b/src/components/avatar/video-library.tsx
@@ -52,8 +52,8 @@ interface VideoLibraryProps {
 export const VideoLibrary: React.FC<VideoLibraryProps> = ({
   onSelectVideo
 }) => {
-  const [videos, setVideos] = useState<AvatarVideoMetadata: any[]>([]);
-  const [scripts, setScripts] = useState<AvatarVideoScript: any[]>([]);
+  const [videos, setVideos] = useState<AvatarVideoMetadata[]>([]);
+  const [scripts, setScripts] = useState<AvatarVideoScript[]>([]);
   const [isLoading, setIsLoading] = useState(true);
   const [activeTab, setActiveTab] = useState('videos');
   const [searchQuery, setSearchQuery] = useState('');
@@ -73,7 +73,7 @@ export const VideoLibrary: React.FC<VideoLibraryProps> = ({
         
         // In a real implementation, this would fetch from the API
         // For now, we'll use mock data
-        const mockVideos: AvatarVideoMetadata: any[] = [
+        const mockVideos: AvatarVideoMetadata[] = [
           {
             id: 'video1',
             title: 'Introduction to Fractions',
@@ -141,7 +141,7 @@ export const VideoLibrary: React.FC<VideoLibraryProps> = ({
           }
         ];
         
-        const mockScripts: AvatarVideoScript: any[] = [
+        const mockScripts: AvatarVideoScript[] = [
           {
             id: 'script1',
             title: 'Introduction to Fractions',
diff --git a/src/components/avatar/video-player.tsx b/src/components/avatar/video-player.tsx
index e9e41d5..4b2392b 100644
--- a/src/components/avatar/video-player.tsx
+++ b/src/components/avatar/video-player.tsx
@@ -126,7 +126,7 @@ export const VideoPlayer: React.FC<VideoPlayerProps> = ({
   };
   
   // Handle seek
-  const handleSeek = (value: number: any[]) => {
+  const handleSeek = (value: number[]) => {
     const videoElement = videoRef.current;
     if (!videoElement) return;
     
@@ -136,7 +136,7 @@ export const VideoPlayer: React.FC<VideoPlayerProps> = ({
   };
   
   // Handle volume change
-  const handleVolumeChange = (value: number: any[]) => {
+  const handleVolumeChange = (value: number[]) => {
     const videoElement = videoRef.current;
     if (!videoElement) return;
     
diff --git a/src/components/blog/BlogCard.tsx b/src/components/blog/BlogCard.tsx
index 8497376..27cf132 100644
--- a/src/components/blog/BlogCard.tsx
+++ b/src/components/blog/BlogCard.tsx
@@ -15,7 +15,7 @@ interface BlogCardProps {
     publishedAt: string | Date | null;
     keyStage?: string | null;
     curriculumArea?: string | null;
-    tags: string: any[];
+    tags: string[];
     readingTime?: number | null;
     readingLevel?: string | null;
     author: {
diff --git a/src/components/blog/BlogCommentList.tsx b/src/components/blog/BlogCommentList.tsx
index ad4b93a..59c85f4 100644
--- a/src/components/blog/BlogCommentList.tsx
+++ b/src/components/blog/BlogCommentList.tsx
@@ -18,7 +18,7 @@ interface Comment {
     name: string | null;
     image: string | null;
   };
-  replies: Comment: any[];
+  replies: Comment[];
 }
 
 interface BlogCommentListProps {
@@ -27,7 +27,7 @@ interface BlogCommentListProps {
 
 export function BlogCommentList({ postId }: BlogCommentListProps) {
   const { data: session } = useSession();
-  const [comments, setComments] = useState<Comment: any[]>([]);
+  const [comments, setComments] = useState<Comment[]>([]);
   const [isLoading, setIsLoading] = useState(true);
   const [error, setError] = useState<string | null>(null);
   const [replyingTo, setReplyingTo] = useState<string | null>(null);
diff --git a/src/components/blog/BlogList.tsx b/src/components/blog/BlogList.tsx
index 401a43e..c2f7c87 100644
--- a/src/components/blog/BlogList.tsx
+++ b/src/components/blog/BlogList.tsx
@@ -13,7 +13,7 @@ interface BlogPost {
   publishedAt: string | Date | null;
   keyStage?: string | null;
   curriculumArea?: string | null;
-  tags: string: any[];
+  tags: string[];
   readingTime?: number | null;
   readingLevel?: string | null;
   author: {
@@ -26,7 +26,7 @@ interface BlogPost {
 }
 
 interface BlogListProps {
-  posts: BlogPost: any[];
+  posts: BlogPost[];
   isLoading?: boolean;
   error?: string;
   pagination?: {
diff --git a/src/components/blog/BlogPostView.tsx b/src/components/blog/BlogPostView.tsx
index 4043299..01ac5c7 100644
--- a/src/components/blog/BlogPostView.tsx
+++ b/src/components/blog/BlogPostView.tsx
@@ -15,7 +15,7 @@ interface BlogPostViewProps {
     featuredImage?: string;
     likeCount?: number;
   };
-  relatedPosts?: any: any[];
+  relatedPosts?: any[];
   onLike?: () => void;
   isLikeLoading?: boolean;
 }
diff --git a/src/components/blog/BlogRelatedPosts.tsx b/src/components/blog/BlogRelatedPosts.tsx
index 21bd610..32fadc9 100644
--- a/src/components/blog/BlogRelatedPosts.tsx
+++ b/src/components/blog/BlogRelatedPosts.tsx
@@ -11,7 +11,7 @@ interface BlogRelatedPostsProps {
     publishedAt: string | Date | null;
     keyStage?: string | null;
     curriculumArea?: string | null;
-    tags: string: any[];
+    tags: string[];
     readingTime?: number | null;
     readingLevel?: string | null;
     author: {
diff --git a/src/components/blog/blog-post-editor.tsx b/src/components/blog/blog-post-editor.tsx
index 27952d4..3b6a607 100644
--- a/src/components/blog/blog-post-editor.tsx
+++ b/src/components/blog/blog-post-editor.tsx
@@ -152,9 +152,9 @@ const BlogPostEditor = () => {
   const [isGeneratingWithAI, setIsGeneratingWithAI] = useState(false);
   const [showAIDialog, setShowAIDialog] = useState(false);
   const [aiPrompt, setAiPrompt] = useState("");
-  const [selectedTags, setSelectedTags] = useState<string: any[]>([]);
-  const [selectedCurriculumAreas, setSelectedCurriculumAreas] = useState<string: any[]>([]);
-  const [selectedAgeRanges, setSelectedAgeRanges] = useState<string: any[]>([]);
+  const [selectedTags, setSelectedTags] = useState<string[]>([]);
+  const [selectedCurriculumAreas, setSelectedCurriculumAreas] = useState<string[]>([]);
+  const [selectedAgeRanges, setSelectedAgeRanges] = useState<string[]>([]);
   
   // Form state
   const [postData, setPostData] = useState({
diff --git a/src/components/blog/educational-ai-blog.tsx b/src/components/blog/educational-ai-blog.tsx
index 097454c..0623d1b 100644
--- a/src/components/blog/educational-ai-blog.tsx
+++ b/src/components/blog/educational-ai-blog.tsx
@@ -164,7 +164,7 @@ const popularTags = [
 ];
 
 // Featured Blog Post Component
-const FeaturedPost = ({ post }: { post }) => {
+const FeaturedPost = ({ post }: { post: any }) => {
   return (
     <Card className="overflow-hidden">
       <div className="relative h-[300px] w-full">
@@ -217,7 +217,7 @@ const FeaturedPost = ({ post }: { post }) => {
 };
 
 // Blog Post Card Component
-const BlogPostCard = ({ post }: { post }) => {
+const BlogPostCard = ({ post }: { post: any }) => {
   return (
     <Card className="overflow-hidden h-full flex flex-col">
       <div className="relative h-48">
@@ -276,7 +276,7 @@ const BlogPostCard = ({ post }: { post }) => {
 };
 
 // Category List Component
-const CategoryList = ({ categories }: { categories: any: any[] }) => {
+const CategoryList = ({ categories }: { categories: any[] }) => {
   return (
     <div className="space-y-1">
       {categories.map((category) => (
@@ -293,7 +293,7 @@ const CategoryList = ({ categories }: { categories: any: any[] }) => {
 };
 
 // Tag Cloud Component
-const TagCloud = ({ tags }: { tags: any: any[] }) => {
+const TagCloud = ({ tags }: { tags: any[] }) => {
   return (
     <div className="flex flex-wrap gap-2">
       {tags.map((tag) => (
@@ -445,7 +445,7 @@ export function EducationalAIBlog() {
                   placeholder="Search articles..."
                   className="pl-8"
                   value={searchQuery}
-                  onChange={(e) => setSearchQuery(e.target.value)}
+                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchQuery(e.target.value)}
                 />
               </div>
             </CardContent>
@@ -485,60 +485,39 @@ export function EducationalAIBlog() {
         <div className="lg:col-span-2 space-y-6">
           {/* Tabs */}
           <Tabs defaultValue="all" value={activeTab} onValueChange={setActiveTab}>
-            <TabsList className="grid grid-cols-4">
+            <TabsList className="grid grid-cols-4 mb-6">
               <TabsTrigger value="all">All</TabsTrigger>
               <TabsTrigger value="ai-generated">AI Generated</TabsTrigger>
               <TabsTrigger value="human-authored">Human Authored</TabsTrigger>
               <TabsTrigger value="teaching-strategies">Teaching</TabsTrigger>
             </TabsList>
-            <TabsContent value="all" className="mt-6">
-              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                {filteredPosts.map(post => (
-                  <BlogPostCard key={post.id} post={post} />
-                ))}
-              </div>
-            </TabsContent>
-            <TabsContent value="ai-generated" className="mt-6">
-              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                {filteredPosts.map(post => (
-                  <BlogPostCard key={post.id} post={post} />
-                ))}
-              </div>
-            </TabsContent>
-            <TabsContent value="human-authored" className="mt-6">
-              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                {filteredPosts.map(post => (
-                  <BlogPostCard key={post.id} post={post} />
-                ))}
-              </div>
-            </TabsContent>
-            <TabsContent value="teaching-strategies" className="mt-6">
+            
+            <TabsContent value={activeTab} className="mt-0">
               <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                 {filteredPosts.map(post => (
                   <BlogPostCard key={post.id} post={post} />
                 ))}
               </div>
+              
+              {filteredPosts.length === 0 && (
+                <Card className="p-8 text-center">
+                  <p className="text-muted-foreground mb-4">No articles found matching your criteria.</p>
+                  <Button variant="outline" onClick={() => setActiveTab("all")}>
+                    View All Articles
+                  </Button>
+                </Card>
+              )}
+              
+              {filteredPosts.length > 0 && (
+                <div className="flex justify-center mt-8">
+                  <Button variant="outline">
+                    Load More Articles
+                    <ChevronRight className="ml-2 h-4 w-4" />
+                  </Button>
+                </div>
+              )}
             </TabsContent>
           </Tabs>
-          
-          {/* Pagination */}
-          <div className="flex items-center justify-center space-x-2 mt-8">
-            <Button variant="outline" size="sm" disabled>
-              Previous
-            </Button>
-            <Button variant="outline" size="sm" className="bg-primary text-primary-foreground">
-              1
-            </Button>
-            <Button variant="outline" size="sm">
-              2
-            </Button>
-            <Button variant="outline" size="sm">
-              3
-            </Button>
-            <Button variant="outline" size="sm">
-              Next
-            </Button>
-          </div>
         </div>
       </div>
     </div>
diff --git a/src/components/collaboration/collaborative-workspace.tsx b/src/components/collaboration/collaborative-workspace.tsx
index b28fa0e..157a873 100644
--- a/src/components/collaboration/collaborative-workspace.tsx
+++ b/src/components/collaboration/collaborative-workspace.tsx
@@ -352,12 +352,12 @@ export default function CollaborativeWorkspace() {
   const [activeTab, setActiveTab] = useState<string>('document');
   const [session, setSession] = useState<CollaborationSession>(mockSession);
   const [document, setDocument] = useState<CollaborativeDocument>(mockDocument);
-  const [chatMessages, setChatMessages] = useState<any: any[]>(mockChatMessages);
+  const [chatMessages, setChatMessages] = useState<any[]>(mockChatMessages);
   const [newMessage, setNewMessage] = useState<string>('');
   const [isConnected, setIsConnected] = useState<boolean>(false);
   const [isEditing, setIsEditing] = useState<boolean>(false);
   const [documentContent, setDocumentContent] = useState<string>(mockDocument.content);
-  const [participants, setParticipants] = useState<CollaborationParticipant: any[]>(mockSession.participants);
+  const [participants, setParticipants] = useState<CollaborationParticipant[]>(mockSession.participants);
   
   const chatEndRef = useRef<HTMLDivElement>(null);
   const editorRef = useRef<HTMLTextAreaElement>(null);
diff --git a/src/components/communication/accessibility-validator.tsx b/src/components/communication/accessibility-validator.tsx
index 27bf2cd..ef5ef85 100644
--- a/src/components/communication/accessibility-validator.tsx
+++ b/src/components/communication/accessibility-validator.tsx
@@ -10,7 +10,7 @@ import { CheckCircle2, AlertCircle, AlertTriangle, Info, HelpCircle } from 'luci
 
 interface AccessibilityValidatorProps {
   componentName: string;
-  onFixIssues?: (issues: AccessibilityIssue: any[]) => void;
+  onFixIssues?: (issues: AccessibilityIssue[]) => void;
 }
 
 export interface AccessibilityIssue {
@@ -29,7 +29,7 @@ export const AccessibilityValidator: React.FC<AccessibilityValidatorProps> = ({
   const [isValidating, setIsValidating] = useState(false);
   const [validationComplete, setValidationComplete] = useState(false);
   const [accessibilityScore, setAccessibilityScore] = useState(0);
-  const [issues, setIssues] = useState<AccessibilityIssue: any[]>([]);
+  const [issues, setIssues] = useState<AccessibilityIssue[]>([]);
   const [validationResults, setValidationResults] = useState<{
     perceivable: number;
     operable: number;
@@ -49,7 +49,7 @@ export const AccessibilityValidator: React.FC<AccessibilityValidatorProps> = ({
     // Simulate validation process
     setTimeout(() => {
       // This would be replaced with actual validation logic in a real implementation
-      const mockIssues: AccessibilityIssue: any[] = [];
+      const mockIssues: AccessibilityIssue[] = [];
       
       // Check for common accessibility issues based on component name
       if (componentName.toLowerCase().includes('message') || componentName.toLowerCase().includes('chat')) {
diff --git a/src/components/communication/shared-goal-tracker.tsx b/src/components/communication/shared-goal-tracker.tsx
index 8ece795..67a5fd0 100644
--- a/src/components/communication/shared-goal-tracker.tsx
+++ b/src/components/communication/shared-goal-tracker.tsx
@@ -57,7 +57,7 @@ export const SharedGoalTracker: React.FC<SharedGoalTrackerProps> = ({
   userId,
   userRole
 }) => {
-  const [goals, setGoals] = useState<SharedGoal: any[]>([]);
+  const [goals, setGoals] = useState<SharedGoal[]>([]);
   const [isLoading, setIsLoading] = useState(true);
   const [isCreatingGoal, setIsCreatingGoal] = useState(false);
   const [selectedGoal, setSelectedGoal] = useState<SharedGoal | null>(null);
@@ -73,7 +73,7 @@ export const SharedGoalTracker: React.FC<SharedGoalTrackerProps> = ({
       try {
         // In a real implementation, this would fetch goals from the API
         // For now, we'll use mock data
-        const mockGoals: SharedGoal: any[] = [
+        const mockGoals: SharedGoal[] = [
           {
             id: 'goal1',
             studentId,
diff --git a/src/components/content-creation/content-sharing.tsx b/src/components/content-creation/content-sharing.tsx
index c96e91a..4e1f068 100644
--- a/src/components/content-creation/content-sharing.tsx
+++ b/src/components/content-creation/content-sharing.tsx
@@ -36,7 +36,7 @@ export const ContentSharing: React.FC<ContentSharingProps> = ({
   const [isLoading, setIsLoading] = useState(false);
   const [error, setError] = useState<string | null>(null);
   const [collaborators, setCollaborators] = useState<any[]>([]);
-  const [invitations, setInvitations] = useState<ContentSharingInvitation: any[]>([]);
+  const [invitations, setInvitations] = useState<ContentSharingInvitation[]>([]);
   
   // New invitation state
   const [newInvitation, setNewInvitation] = useState<Partial<ContentSharingInvitation>>({
diff --git a/src/components/content-creation/curriculum-alignment-checker.tsx b/src/components/content-creation/curriculum-alignment-checker.tsx
index b010237..bc386f8 100644
--- a/src/components/content-creation/curriculum-alignment-checker.tsx
+++ b/src/components/content-creation/curriculum-alignment-checker.tsx
@@ -33,8 +33,8 @@ export const CurriculumAlignmentChecker: React.FC<CurriculumAlignmentCheckerProp
   const [error, setError] = useState<string | null>(null);
   const [results, setResults] = useState<{
     alignmentScore: number;
-    suggestions: string: any[];
-    curriculumLinks: string: any[];
+    suggestions: string[];
+    curriculumLinks: string[];
   } | null>(null);
   
   const { toast } = useToast();
@@ -106,7 +106,7 @@ export const CurriculumAlignmentChecker: React.FC<CurriculumAlignmentCheckerProp
   };
   
   // Get curriculum links based on key stage
-  const getCurriculumLinks = (keyStage: KeyStage): string: any: any[] => {
+  const getCurriculumLinks = (keyStage: KeyStage): string[] => {
     switch (keyStage) {
       case KeyStage.EARLY_YEARS:
         return [
diff --git a/src/components/curriculum/curriculum-planner.tsx b/src/components/curriculum/curriculum-planner.tsx
index 055ddad..af717a6 100644
--- a/src/components/curriculum/curriculum-planner.tsx
+++ b/src/components/curriculum/curriculum-planner.tsx
@@ -18,15 +18,15 @@ interface CurriculumPlan {
   ageRange: string;
   curriculum: string;
   duration: string;
-  objectives: string: any[];
-  resources: string: any[];
-  assessments: string: any[];
+  objectives: string[];
+  resources: string[];
+  assessments: string[];
   createdAt: string;
   updatedAt: string;
 }
 
 interface CurriculumPlannerProps {
-  initialPlans?: CurriculumPlan: any[];
+  initialPlans?: CurriculumPlan[];
   onPlanSelect?: (plan: CurriculumPlan) => void;
   className?: string;
 }
@@ -37,7 +37,7 @@ export function CurriculumPlanner({
   className = ''
 }: CurriculumPlannerProps) {
   const { showToast } = useToast();
-  const [plans, setPlans] = useState<CurriculumPlan: any[]>(initialPlans);
+  const [plans, setPlans] = useState<CurriculumPlan[]>(initialPlans);
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
   
@@ -58,7 +58,7 @@ export function CurriculumPlanner({
         }
         
         // Mock data for demonstration
-        const mockPlans: CurriculumPlan: any[] = [
+        const mockPlans: CurriculumPlan[] = [
           {
             id: '1',
             title: 'Algebraic Expressions and Equations',
diff --git a/src/components/educator/automated-documentation.tsx b/src/components/educator/automated-documentation.tsx
index eee816c..6ee38c1 100644
--- a/src/components/educator/automated-documentation.tsx
+++ b/src/components/educator/automated-documentation.tsx
@@ -28,7 +28,7 @@ interface DocumentationTemplate {
   }[];
 }
 
-const documentationTemplates: DocumentationTemplate: any[] = [
+const documentationTemplates: DocumentationTemplate[] = [
   {
     id: 'classroom-observation',
     name: 'Classroom Observation',
@@ -278,7 +278,7 @@ export default function AutomatedDocumentation() {
   
   // Reference for MediaRecorder
   const mediaRecorderRef = useRef<MediaRecorder | null>(null);
-  const audioChunksRef = useRef<Blob: any[]>([]);
+  const audioChunksRef = useRef<Blob[]>([]);
   
   // Initialize saved documents from localStorage
   useEffect(() => {
diff --git a/src/components/educator/automated-progress-report-generation.tsx b/src/components/educator/automated-progress-report-generation.tsx
index 655f8cc..4862b41 100644
--- a/src/components/educator/automated-progress-report-generation.tsx
+++ b/src/components/educator/automated-progress-report-generation.tsx
@@ -159,8 +159,8 @@ export default function AutomatedProgressReportGeneration() {
   const aiService = useAIService();
   const [activeTab, setActiveTab] = useState('create');
   const [selectedTemplate, setSelectedTemplate] = useState('');
-  const [selectedStudents, setSelectedStudents] = useState<number: any[]>([]);
-  const [selectedSubjects, setSelectedSubjects] = useState<string: any[]>([]);
+  const [selectedStudents, setSelectedStudents] = useState<number[]>([]);
+  const [selectedSubjects, setSelectedSubjects] = useState<string[]>([]);
   const [reportPeriod, setReportPeriod] = useState('current-term');
   const [includeAttendance, setIncludeAttendance] = useState(true);
   const [includeBehavior, setIncludeBehavior] = useState(true);
@@ -168,8 +168,8 @@ export default function AutomatedProgressReportGeneration() {
   const [includeNextSteps, setIncludeNextSteps] = useState(true);
   const [commentStyle, setCommentStyle] = useState('balanced');
   const [isGenerating, setIsGenerating] = useState(false);
-  const [generatedReports, setGeneratedReports] = useState<any: any[]>([]);
-  const [savedReports, setSavedReports] = useState<any: any[]>([]);
+  const [generatedReports, setGeneratedReports] = useState<any[]>([]);
+  const [savedReports, setSavedReports] = useState<any[]>([]);
   const [currentReport, setCurrentReport] = useState<any>(null);
   const [editingReport, setEditingReport] = useState(false);
   const [editedComments, setEditedComments] = useState<Record<string, string>>({});
@@ -304,10 +304,10 @@ export default function AutomatedProgressReportGeneration() {
         
         // Generate overall summary
         // In a real implementation, this would use the AI service
-        const overallComments = generateOverallComments(student, subjectReports, commentStyle);
+        const overallComments = generateOverallComments(student, subjectReports as any[], commentStyle);
         
         // Generate next steps
-        const nextSteps = includeNextSteps ? generateNextSteps(subjectReports) : [];
+        const nextSteps = includeNextSteps ? generateNextSteps(subjectReports as any[]) : [];
         
         return {
           id: Date.now() + studentId,
@@ -324,7 +324,7 @@ export default function AutomatedProgressReportGeneration() {
         };
       }).filter(Boolean);
       
-      setGeneratedReports(reports as any: any: any[]);
+      setGeneratedReports(reports as any[]);
       setActiveTab('preview');
       
       toast({
@@ -345,7 +345,7 @@ export default function AutomatedProgressReportGeneration() {
   };
   
   // Generate overall comments based on subject reports
-  const generateOverallComments = (student, subjectReports: any: any[], style: string) => {
+  const generateOverallComments = (student: any, subjectReports: any[], style: string) => {
     // Calculate average scores and progress
     const averageCurrentScore = Math.round(
       subjectReports.reduce((sum, report) => sum + report.currentScore, 0) / subjectReports.length
@@ -379,20 +379,19 @@ export default function AutomatedProgressReportGeneration() {
         break;
         
       case 'constructive':
-        comment = `${student.name} has achieved an average attainment of ${averageCurrentScore}% this term. `;
-        comment += averageProgress > 0 ? `While showing improvement of ${averageProgress}% on average, ` : `While maintaining similar levels to previous assessments, `;
-        comment += `there are several areas where focused effort could yield significant improvements. `;
-        comment += `Particular attention should be given to ${subjectReports.sort((a, b) => a.currentScore - b.currentScore)[0].subject}, where targeted support could help address current challenges. `;
-        comment += effortRatio < 0.7 ? `Consistent effort across all subjects would benefit overall progress. ` : `The good effort shown in most subjects should be maintained. `;
+        comment = `${student.name} has achieved an average attainment of ${averageCurrentScore}%, which represents ${averageProgress > 0 ? 'an improvement of ' + averageProgress + '% from the previous assessment' : 'a consistent performance compared to previous assessments'}. `;
+        comment += `There are clear areas for development in ${subjectReports.sort((a, b) => a.currentScore - b.currentScore)[0].subject}, where focused attention would be beneficial. `;
+        comment += effortRatio < 0.7 ? `Increased effort across all subjects would help to improve overall attainment. ` : `The good effort shown in most subjects should be maintained. `;
+        comment += `Setting specific targets in each subject area will help ${student.name} to make further progress next term.`;
         break;
         
       case 'balanced':
       default:
-        comment = `${student.name} has achieved an average attainment of ${averageCurrentScore}% this term, representing a ${averageProgress > 0 ? 'positive change' : 'slight change'} of ${Math.abs(averageProgress)}% from previous assessments. `;
-        comment += `Particular strengths are evident in ${subjectReports.sort((a, b) => b.currentScore - a.currentScore)[0].subject}, while additional support in ${subjectReports.sort((a, b) => a.currentScore - b.currentScore)[0].subject} could help address current challenges. `;
-        comment += effortRatio > 0.7 ? `Effort has been consistently good across most subjects. ` : `Effort has been variable across different subjects. `;
-        comment += behaviorRatio > 0.7 ? `Behaviour has been positive throughout the term. ` : `Behaviour has been generally appropriate with some inconsistencies. `;
-        comment += `Overall, ${student.name} ${averageProgress > 3 ? 'is making excellent progress' : averageProgress > 0 ? 'is making steady progress' : 'would benefit from additional support'} at this stage of the academic year.`;
+        comment = `${student.name} has achieved an average attainment of ${averageCurrentScore}%, which represents ${averageProgress > 0 ? 'a positive improvement of ' + averageProgress + '%' : 'a consistent performance'} compared to previous assessments. `;
+        comment += `Particular strengths are evident in ${subjectReports.sort((a, b) => b.currentScore - a.currentScore)[0].subject}, while ${subjectReports.sort((a, b) => a.currentScore - b.currentScore)[0].subject} presents opportunities for further development. `;
+        comment += effortRatio > 0.7 ? `${student.name}'s consistent effort across most subjects is commendable. ` : `Increasing effort in some subject areas would help to improve overall attainment. `;
+        comment += behaviorRatio > 0.7 ? `Behaviour has been positive throughout the term. ` : `Some improvements in classroom behaviour would enhance learning experiences. `;
+        comment += `With continued focus and appropriate support, ${student.name} should continue to make good progress.`;
         break;
     }
     
@@ -400,39 +399,45 @@ export default function AutomatedProgressReportGeneration() {
   };
   
   // Generate next steps based on subject reports
-  const generateNextSteps = (subjectReports: any: any[]) => {
-    // Find subjects with lowest scores for targeted improvement
-    const lowestSubjects = [...subjectReports].sort((a, b) => a.currentScore - b.currentScore).slice(0, 2);
+  const generateNextSteps = (subjectReports: any[]) => {
+    const nextSteps = [];
     
-    // Collect areas for development from these subjects
-    const developmentAreas = lowestSubjects.flatMap(subject => 
-      subject.areasForDevelopment.map(area => ({
-        subject: subject.subject,
-        area
-      }))
-    );
+    // Find lowest performing subject
+    const lowestSubject = subjectReports.sort((a, b) => a.currentScore - b.currentScore)[0];
+    if (lowestSubject) {
+      nextSteps.push(`Focus on improving ${lowestSubject.subject} skills, particularly in areas of ${lowestSubject.areasForDevelopment.join(' and ')}.`);
+    }
     
-    // Generate specific next steps
-    return developmentAreas.map(({ subject, area }) => {
-      return `Focus on improving ${area} in ${subject} through regular practise and targeted support.`;
-    });
+    // Find subject with most progress
+    const mostProgressSubject = subjectReports.sort((a, b) => b.progress - a.progress)[0];
+    if (mostProgressSubject && mostProgressSubject.progress > 0) {
+      nextSteps.push(`Continue the excellent progress in ${mostProgressSubject.subject} by building on strengths in ${mostProgressSubject.strengths.join(' and ')}.`);
+    }
+    
+    // General recommendations
+    nextSteps.push('Develop independent study skills through regular revision and self-assessment.');
+    nextSteps.push('Actively participate in class discussions to deepen understanding of key concepts.');
+    
+    return nextSteps;
   };
   
   // View a specific report
-  const viewReport = (report) => {
-    setCurrentReport(report);
-    setEditingReport(false);
-    setEditedComments({});
-    setActiveTab('view');
+  const viewReport = (reportId: string | number) => {
+    const report = [...generatedReports, ...savedReports].find(r => r.id === reportId);
+    if (report) {
+      setCurrentReport(report);
+      setEditingReport(false);
+      setActiveTab('view');
+    }
   };
   
   // Edit a report
   const editReport = () => {
     if (!currentReport) return;
     
-    // Initialize edited comments with current values
-    const initialComments: Record<string, string> = {};
-    currentReport.subjects.forEach((subject) => {
+    // Initialize edited comments with current comments
+    const initialComments = {};
+    currentReport.subjects.forEach((subject: any) => {
       initialComments[subject.subject] = subject.comments;
     });
     initialComments['overall'] = currentReport.overallComments;
@@ -446,22 +451,37 @@ export default function AutomatedProgressReportGeneration() {
     if (!currentReport) return;
     
     // Update subject comments
-    const updatedSubjects = currentReport.subjects.map((subject) => ({
+    const updatedSubjects = currentReport.subjects.map((subject: any) => ({
       ...subject,
       comments: editedComments[subject.subject] || subject.comments
     }));
     
-    // Update overall comments
+    // Create updated report
     const updatedReport = {
       ...currentReport,
       subjects: updatedSubjects,
-      overallComments: editedComments['overall'] || currentReport.overallComments
+      overallComments: editedComments['overall'] || currentReport.overallComments,
+      lastEdited: new Date().toISOString()
     };
     
-    // Update in generated reports list
-    setGeneratedReports(prev => 
-      prev.map(report => report.id === updatedReport.id ? updatedReport : report)
-    );
+    // Update in generated reports if it exists there
+    const genIndex = generatedReports.findIndex(r => r.id === currentReport.id);
+    if (genIndex >= 0) {
+      const updatedGenReports = [...generatedReports];
+      updatedGenReports[genIndex] = updatedReport;
+      setGeneratedReports(updatedGenReports);
+    }
+    
+    // Update in saved reports if it exists there
+    const savedIndex = savedReports.findIndex(r => r.id === currentReport.id);
+    if (savedIndex >= 0) {
+      const updatedSavedReports = [...savedReports];
+      updatedSavedReports[savedIndex] = updatedReport;
+      setSavedReports(updatedSavedReports);
+      
+      // Update localStorage
+      localStorage.setItem('savedProgressReports', JSON.stringify(updatedSavedReports));
+    }
     
     setCurrentReport(updatedReport);
     setEditingReport(false);
@@ -474,783 +494,716 @@ export default function AutomatedProgressReportGeneration() {
   };
   
   // Save report to localStorage
-  const saveReport = (report) => {
-    const updatedSavedReports = [...savedReports, report];
+  const saveReport = (report: any) => {
+    const updatedSavedReports = [...savedReports, { ...report, savedAt: new Date().toISOString() }];
     setSavedReports(updatedSavedReports);
     
-    // Save to localStorage
-    try {
-      localStorage.setItem('savedProgressReports', JSON.stringify(updatedSavedReports));
-      
-      toast({
-        title: "Report saved",
-        description: "The report has been saved to your collection.",
-        variant: "default"
-      });
-    } catch (error) {
-      console.error('Error saving report:', error);
-      toast({
-        title: "Error saving report",
-        description: "An error occurred while saving the report. Please try again.",
-        variant: "destructive"
-      });
-    }
+    // Update localStorage
+    localStorage.setItem('savedProgressReports', JSON.stringify(updatedSavedReports));
+    
+    toast({
+      title: "Report saved",
+      description: "The report has been saved to your local storage.",
+      variant: "default"
+    });
   };
   
-  // Delete report from saved collection
-  const deleteReport = (reportId) => {
-    const updatedReports = savedReports.filter(report => report.id !== reportId);
-    setSavedReports(updatedReports);
-    
-    // Update localStorage
-    try {
-      localStorage.setItem('savedProgressReports', JSON.stringify(updatedReports));
+  // Delete report
+  const deleteReport = (reportId: string | number, isSaved: boolean) => {
+    if (isSaved) {
+      const updatedSavedReports = savedReports.filter(r => r.id !== reportId);
+      setSavedReports(updatedSavedReports);
       
-      toast({
-        title: "Report deleted",
-        description: "The report has been removed from your collection.",
-        variant: "default"
-      });
-    } catch (error) {
-      console.error('Error deleting report:', error);
+      // Update localStorage
+      localStorage.setItem('savedProgressReports', JSON.stringify(updatedSavedReports));
+    } else {
+      setGeneratedReports(generatedReports.filter(r => r.id !== reportId));
     }
+    
+    // If viewing the deleted report, go back to list
+    if (currentReport && currentReport.id === reportId) {
+      setCurrentReport(null);
+      setActiveTab(isSaved ? 'saved' : 'preview');
+    }
+    
+    toast({
+      title: "Report deleted",
+      description: "The report has been deleted.",
+      variant: "default"
+    });
   };
   
-  // Generate PDF report
-  const generatePDF = (report) => {
-    // In a real implementation, this would call a backend API to generate a PDF
-    // For now, we'll simulate PDF generation with a toast notification
+  // Export report as PDF
+  const exportReportAsPDF = () => {
+    if (!currentReport) return;
     
+    // In a real implementation, this would generate a PDF
+    // For now, we'll just show a toast
     toast({
-      title: "Generating PDF",
-      description: "Your PDF report is being generated and will download shortly.",
+      title: "Export initiated",
+      description: "The report is being exported as PDF. It will download automatically when ready.",
       variant: "default"
     });
     
     // Simulate download delay
     setTimeout(() => {
       toast({
-        title: "PDF Generated",
-        description: "Your PDF report has been generated successfully.",
+        title: "Export complete",
+        description: "The report has been exported as PDF and downloaded.",
         variant: "default"
       });
     }, 2000);
   };
   
-  // Format date for display
-  const formatDate = (dateString: string) => {
-    return new Date(dateString).toLocaleDateString('en-GB', {
-      day: 'numeric',
-      month: 'long',
-      year: 'numeric'
+  // Print report
+  const printReport = () => {
+    if (!currentReport) return;
+    
+    // In a real implementation, this would open the print dialog
+    // For now, we'll just show a toast
+    toast({
+      title: "Print dialog",
+      description: "The print dialog would normally open here.",
+      variant: "default"
     });
   };
   
-  // Get period display name
-  const getPeriodDisplayName = (period: string) => {
-    const periodMap: Record<string, string> = {
-      'current-term': 'Current Term',
-      'previous-term': 'Previous Term',
-      'full-year': 'Full Academic Year',
-      'custom': 'Custom Period'
-    };
+  // Share report
+  const shareReport = () => {
+    if (!currentReport) return;
     
-    return periodMap[period] || period;
+    // In a real implementation, this would open sharing options
+    // For now, we'll just show a toast
+    toast({
+      title: "Share options",
+      description: "Sharing options would normally appear here.",
+      variant: "default"
+    });
   };
   
   return (
-    <div className="space-y-6">
-      <Card>
-        <CardHeader>
-          <CardTitle className="flex items-centre">
-            <FileText className="mr-2 h-5 w-5" />
-            Automated Progress Report Generation
-          </CardTitle>
-          <CardDescription>
-            Create comprehensive, data-driven student progress reports with minimal effort
-          </CardDescription>
-        </CardHeader>
-        <CardContent>
-          <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
-            <TabsList className="grid w-full grid-cols-4">
-              <TabsTrigger value="create">Create</TabsTrigger>
-              <TabsTrigger value="preview">Preview</TabsTrigger>
-              <TabsTrigger value="view">View</TabsTrigger>
-              <TabsTrigger value="saved">Saved</TabsTrigger>
-            </TabsList>
+    <div className="container mx-auto py-8">
+      <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-8">
+        <div>
+          <h1 className="text-4xl font-bold tracking-tight">Progress Report Generator</h1>
+          <p className="text-xl text-muted-foreground mt-2">
+            Create detailed student progress reports with AI assistance
+          </p>
+        </div>
+      </div>
+      
+      <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-8">
+        <TabsList className="grid grid-cols-3 md:grid-cols-4 w-full md:w-auto">
+          <TabsTrigger value="create" className="flex items-center">
+            <FileText className="mr-2 h-4 w-4" />
+            Create Reports
+          </TabsTrigger>
+          <TabsTrigger value="preview" className="flex items-center">
+            <Eye className="mr-2 h-4 w-4" />
+            Generated Reports
+          </TabsTrigger>
+          <TabsTrigger value="saved" className="flex items-center">
+            <Save className="mr-2 h-4 w-4" />
+            Saved Reports
+          </TabsTrigger>
+          <TabsTrigger value="view" className="flex items-center md:hidden">
+            <BookOpen className="mr-2 h-4 w-4" />
+            View Report
+          </TabsTrigger>
+        </TabsList>
+        
+        {/* Create Reports Tab */}
+        <TabsContent value="create" className="space-y-6">
+          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
+            {/* Report Template Selection */}
+            <Card className="md:col-span-1">
+              <CardHeader>
+                <CardTitle className="flex items-center">
+                  <FileText className="mr-2 h-5 w-5" />
+                  Report Template
+                </CardTitle>
+                <CardDescription>
+                  Select the type of report you want to generate
+                </CardDescription>
+              </CardHeader>
+              <CardContent className="space-y-4">
+                <div className="grid grid-cols-1 gap-3">
+                  {reportTemplates.map(template => (
+                    <div 
+                      key={template.id}
+                      className={`border rounded-lg p-4 cursor-pointer transition-colors ${
+                        selectedTemplate === template.id 
+                          ? 'border-primary bg-primary/5' 
+                          : 'border-border hover:border-primary/50'
+                      }`}
+                      onClick={() => handleTemplateChange(template.id)}
+                    >
+                      <div className="font-medium">{template.name}</div>
+                      <div className="text-sm text-muted-foreground mt-1">{template.description}</div>
+                    </div>
+                  ))}
+                </div>
+              </CardContent>
+            </Card>
             
-            {/* Create Tab */}
-            <TabsContent value="create" className="space-y-6">
-              <Card>
-                <CardHeader>
-                  <CardTitle>Report Template</CardTitle>
-                  <CardDescription>
-                    Select a template for your progress reports
-                  </CardDescription>
-                </CardHeader>
-                <CardContent>
-                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
-                    {reportTemplates.map(template => (
-                      <div 
-                        key={template.id}
-                        className={`border rounded-lg p-4 cursor-pointer transition-colors ${
-                          selectedTemplate === template.id 
-                            ? 'border-primary bg-primary/5' 
-                            : 'hover:border-primary/50'
-                        }`}
-                        onClick={() => handleTemplateChange(template.id)}
+            {/* Student Selection */}
+            <Card className="md:col-span-1">
+              <CardHeader>
+                <CardTitle className="flex items-center">
+                  <Users className="mr-2 h-5 w-5" />
+                  Select Students
+                </CardTitle>
+                <CardDescription>
+                  Choose the students to generate reports for
+                </CardDescription>
+              </CardHeader>
+              <CardContent className="space-y-4">
+                <div className="flex flex-wrap gap-2 mb-4">
+                  <Button 
+                    variant="outline" 
+                    size="sm"
+                    onClick={() => selectAllStudentsInClass('8A')}
+                  >
+                    Select 8A
+                  </Button>
+                  <Button 
+                    variant="outline" 
+                    size="sm"
+                    onClick={() => selectAllStudentsInClass('7B')}
+                  >
+                    Select 7B
+                  </Button>
+                  <Button 
+                    variant="outline" 
+                    size="sm"
+                    onClick={clearSelections}
+                  >
+                    Clear All
+                  </Button>
+                </div>
+                
+                <div className="space-y-2 max-h-[300px] overflow-y-auto pr-2">
+                  {sampleStudents.map(student => (
+                    <div 
+                      key={student.id}
+                      className="flex items-center space-x-2"
+                    >
+                      <Checkbox 
+                        id={`student-${student.id}`}
+                        checked={selectedStudents.includes(student.id)}
+                        onCheckedChange={() => handleStudentSelection(student.id)}
+                      />
+                      <Label 
+                        htmlFor={`student-${student.id}`}
+                        className="flex flex-1 items-center justify-between cursor-pointer"
                       >
-                        <h3 className="font-medium">{template.name}</h3>
-                        <p className="text-sm text-muted-foreground">{template.description}</p>
-                        <div className="mt-2">
-                          <Badge variant="outline" className="text-xs">
-                            {template.sections.length} sections
-                          </Badge>
-                        </div>
-                      </div>
-                    ))}
-                  </div>
-                </CardContent>
-              </Card>
-              
-              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                <Card>
-                  <CardHeader>
-                    <CardTitle className="flex items-centre">
-                      <Users className="mr-2 h-5 w-5" />
-                      Select Students
-                    </CardTitle>
-                    <CardDescription>
-                      Choose which students to include in the reports
-                    </CardDescription>
-                  </CardHeader>
-                  <CardContent>
-                    <div className="space-y-4">
-                      <div className="flex flex-wrap gap-2">
-                        <Button 
-                          variant="outline" 
-                          size="sm"
-                          onClick={() => selectAllStudentsInClass('8A')}
-                        >
-                          Select 8A
-                        </Button>
-                        <Button 
-                          variant="outline" 
-                          size="sm"
-                          onClick={() => selectAllStudentsInClass('7B')}
-                        >
-                          Select 7B
-                        </Button>
-                        <Button 
-                          variant="outline" 
-                          size="sm"
-                          onClick={clearSelections}
-                        >
-                          Clear All
-                        </Button>
-                      </div>
-                      
-                      <Separator />
-                      
-                      <div className="space-y-2 max-h-[300px] overflow-y-auto">
-                        {sampleStudents.map(student => (
-                          <div key={student.id} className="flex items-centre space-x-2">
-                            <Checkbox 
-                              id={`student-${student.id}`} 
-                              checked={selectedStudents.includes(student.id)}
-                              onCheckedChange={() => handleStudentSelection(student.id)}
-                            />
-                            <Label 
-                              htmlFor={`student-${student.id}`}
-                              className="flex-1 cursor-pointer"
-                            >
-                              {student.name}
-                            </Label>
-                            <span className="text-sm text-muted-foreground">
-                              Year {student.year}, {student.class}
-                            </span>
-                          </div>
-                        ))}
-                      </div>
-                      
-                      <div className="text-sm text-muted-foreground">
-                        {selectedStudents.length} students selected
-                      </div>
+                        <span>{student.name}</span>
+                        <Badge variant="outline">{student.class}</Badge>
+                      </Label>
                     </div>
-                  </CardContent>
-                </Card>
+                  ))}
+                </div>
                 
-                <Card>
-                  <CardHeader>
-                    <CardTitle className="flex items-centre">
-                      <BookOpen className="mr-2 h-5 w-5" />
-                      Select Subjects
-                    </CardTitle>
-                    <CardDescription>
-                      Choose which subjects to include in the reports
-                    </CardDescription>
-                  </CardHeader>
-                  <CardContent>
-                    <div className="space-y-4">
-                      <div className="flex flex-wrap gap-2">
-                        <Button 
-                          variant="outline" 
-                          size="sm"
-                          onClick={selectAllSubjects}
-                        >
-                          Select All Subjects
-                        </Button>
-                        <Button 
-                          variant="outline" 
-                          size="sm"
-                          onClick={() => setSelectedSubjects([])}
-                        >
-                          Clear All
-                        </Button>
-                      </div>
-                      
-                      <Separator />
-                      
-                      <div className="grid grid-cols-2 gap-2">
-                        {Array.from(new Set(sampleStudents.flatMap(student => student.subjects))).map(subject => (
-                          <div key={subject} className="flex items-centre space-x-2">
-                            <Checkbox 
-                              id={`subject-${subject}`} 
-                              checked={selectedSubjects.includes(subject)}
-                              onCheckedChange={() => handleSubjectSelection(subject)}
-                            />
-                            <Label 
-                              htmlFor={`subject-${subject}`}
-                              className="cursor-pointer"
-                            >
-                              {subject}
-                            </Label>
-                          </div>
-                        ))}
-                      </div>
-                      
-                      <div className="text-sm text-muted-foreground">
-                        {selectedSubjects.length} subjects selected
-                      </div>
+                <div className="text-sm text-muted-foreground mt-2">
+                  {selectedStudents.length} students selected
+                </div>
+              </CardContent>
+            </Card>
+            
+            {/* Subject Selection */}
+            <Card className="md:col-span-1">
+              <CardHeader>
+                <CardTitle className="flex items-center">
+                  <BookOpen className="mr-2 h-5 w-5" />
+                  Select Subjects
+                </CardTitle>
+                <CardDescription>
+                  Choose the subjects to include in the reports
+                </CardDescription>
+              </CardHeader>
+              <CardContent className="space-y-4">
+                <div className="flex flex-wrap gap-2 mb-4">
+                  <Button 
+                    variant="outline" 
+                    size="sm"
+                    onClick={selectAllSubjects}
+                  >
+                    Select All
+                  </Button>
+                  <Button 
+                    variant="outline" 
+                    size="sm"
+                    onClick={() => setSelectedSubjects([])}
+                  >
+                    Clear All
+                  </Button>
+                </div>
+                
+                <div className="space-y-2">
+                  {Array.from(new Set(sampleStudents.flatMap(student => student.subjects))).map(subject => (
+                    <div 
+                      key={subject}
+                      className="flex items-center space-x-2"
+                    >
+                      <Checkbox 
+                        id={`subject-${subject}`}
+                        checked={selectedSubjects.includes(subject)}
+                        onCheckedChange={() => handleSubjectSelection(subject)}
+                      />
+                      <Label 
+                        htmlFor={`subject-${subject}`}
+                        className="cursor-pointer"
+                      >
+                        {subject}
+                      </Label>
                     </div>
-                  </CardContent>
-                </Card>
-              </div>
-              
-              <Card>
-                <CardHeader>
-                  <CardTitle className="flex items-centre">
-                    <Settings className="mr-2 h-5 w-5" />
-                    Report Options
-                  </CardTitle>
-                  <CardDescription>
-                    Customise the content and style of your reports
-                  </CardDescription>
-                </CardHeader>
-                <CardContent>
-                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                    <div className="space-y-4">
-                      <div>
-                        <Label htmlFor="report-period">Reporting Period</Label>
-                        <Select value={reportPeriod} onValueChange={setReportPeriod}>
-                          <SelectTrigger id="report-period">
-                            <SelectValue placeholder="Select period" />
-                          </SelectTrigger>
-                          <SelectContent>
-                            <SelectItem value="current-term">Current Term</SelectItem>
-                            <SelectItem value="previous-term">Previous Term</SelectItem>
-                            <SelectItem value="full-year">Full Academic Year</SelectItem>
-                            <SelectItem value="custom">Custom Period</SelectItem>
-                          </SelectContent>
-                        </Select>
+                  ))}
+                </div>
+                
+                <div className="text-sm text-muted-foreground mt-2">
+                  {selectedSubjects.length} subjects selected
+                </div>
+              </CardContent>
+            </Card>
+            
+            {/* Report Options */}
+            <Card className="md:col-span-3">
+              <CardHeader>
+                <CardTitle className="flex items-center">
+                  <Settings className="mr-2 h-5 w-5" />
+                  Report Options
+                </CardTitle>
+                <CardDescription>
+                  Customize the content and style of your reports
+                </CardDescription>
+              </CardHeader>
+              <CardContent>
+                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
+                  {/* Report Period */}
+                  <div className="space-y-2">
+                    <Label htmlFor="report-period">Report Period</Label>
+                    <Select value={reportPeriod} onValueChange={setReportPeriod}>
+                      <SelectTrigger id="report-period">
+                        <SelectValue placeholder="Select period" />
+                      </SelectTrigger>
+                      <SelectContent>
+                        <SelectItem value="current-term">Current Term</SelectItem>
+                        <SelectItem value="previous-term">Previous Term</SelectItem>
+                        <SelectItem value="full-year">Full Academic Year</SelectItem>
+                        <SelectItem value="custom">Custom Period</SelectItem>
+                      </SelectContent>
+                    </Select>
+                  </div>
+                  
+                  {/* Comment Style */}
+                  <div className="space-y-2">
+                    <Label>Comment Style</Label>
+                    <RadioGroup value={commentStyle} onValueChange={setCommentStyle}>
+                      <div className="flex items-center space-x-2">
+                        <RadioGroupItem value="balanced" id="balanced" />
+                        <Label htmlFor="balanced">Balanced</Label>
                       </div>
-                      
-                      <div>
-                        <Label htmlFor="comment-style">Comment Style</Label>
-                        <Select value={commentStyle} onValueChange={setCommentStyle}>
-                          <SelectTrigger id="comment-style">
-                            <SelectValue placeholder="Select style" />
-                          </SelectTrigger>
-                          <SelectContent>
-                            <SelectItem value="balanced">Balanced</SelectItem>
-                            <SelectItem value="positive">Positive Focus</SelectItem>
-                            <SelectItem value="constructive">Constructive Focus</SelectItem>
-                          </SelectContent>
-                        </Select>
-                        <p className="text-sm text-muted-foreground mt-1">
-                          {commentStyle === 'balanced' && "Provides a balanced view of achievements and areas for development"}
-                          {commentStyle === 'positive' && "Emphasizes strengths and positive achievements"}
-                          {commentStyle === 'constructive' && "Focuses on specific areas for improvement and growth"}
-                        </p>
+                      <div className="flex items-center space-x-2">
+                        <RadioGroupItem value="positive" id="positive" />
+                        <Label htmlFor="positive">Positive Focus</Label>
                       </div>
-                    </div>
-                    
-                    <div className="space-y-4">
-                      <div className="flex items-centre space-x-2">
+                      <div className="flex items-center space-x-2">
+                        <RadioGroupItem value="constructive" id="constructive" />
+                        <Label htmlFor="constructive">Constructive Focus</Label>
+                      </div>
+                    </RadioGroup>
+                  </div>
+                  
+                  {/* Include Options */}
+                  <div className="space-y-2">
+                    <Label>Include in Report</Label>
+                    <div className="space-y-2">
+                      <div className="flex items-center space-x-2">
                         <Checkbox 
                           id="include-attendance" 
                           checked={includeAttendance}
-                          onCheckedChange={(checked) => setIncludeAttendance(checked as boolean)}
+                          onCheckedChange={(checked) => setIncludeAttendance(!!checked)}
                         />
-                        <Label htmlFor="include-attendance">Include attendance data</Label>
+                        <Label htmlFor="include-attendance">Attendance Data</Label>
                       </div>
-                      
-                      <div className="flex items-centre space-x-2">
+                      <div className="flex items-center space-x-2">
                         <Checkbox 
-                          id="include-behaviour" 
+                          id="include-behavior" 
                           checked={includeBehavior}
-                          onCheckedChange={(checked) => setIncludeBehavior(checked as boolean)}
+                          onCheckedChange={(checked) => setIncludeBehavior(!!checked)}
                         />
-                        <Label htmlFor="include-behaviour">Include behaviour information</Label>
+                        <Label htmlFor="include-behavior">Behavior Information</Label>
                       </div>
-                      
-                      <div className="flex items-centre space-x-2">
+                      <div className="flex items-center space-x-2">
                         <Checkbox 
                           id="include-graphs" 
                           checked={includeGraphs}
-                          onCheckedChange={(checked) => setIncludeGraphs(checked as boolean)}
+                          onCheckedChange={(checked) => setIncludeGraphs(!!checked)}
                         />
-                        <Label htmlFor="include-graphs">Include visual progress graphs</Label>
+                        <Label htmlFor="include-graphs">Visual Progress Graphs</Label>
                       </div>
-                      
-                      <div className="flex items-centre space-x-2">
+                      <div className="flex items-center space-x-2">
                         <Checkbox 
                           id="include-next-steps" 
                           checked={includeNextSteps}
-                          onCheckedChange={(checked) => setIncludeNextSteps(checked as boolean)}
+                          onCheckedChange={(checked) => setIncludeNextSteps(!!checked)}
                         />
-                        <Label htmlFor="include-next-steps">Include suggested next steps</Label>
+                        <Label htmlFor="include-next-steps">Next Steps/Targets</Label>
                       </div>
                     </div>
                   </div>
-                </CardContent>
-                <CardFooter className="flex justify-end">
-                  <Button 
-                    onClick={generateReports}
-                    disabled={isGenerating || selectedTemplate === '' || selectedStudents.length === 0 || selectedSubjects.length === 0}
-                  >
-                    {isGenerating ? 'Generating...' : 'Generate Reports'}
-                  </Button>
-                </CardFooter>
-              </Card>
-            </TabsContent>
-            
-            {/* Preview Tab */}
-            <TabsContent value="preview" className="space-y-6">
-              {generatedReports.length > 0 ? (
-                <>
-                  <div className="flex justify-between items-centre">
-                    <h2 className="text-xl font-bold">Generated Reports</h2>
-                    <div className="text-sm text-muted-foreground">
-                      {generatedReports.length} reports generated
-                    </div>
-                  </div>
-                  
-                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
-                    {generatedReports.map(report => (
-                      <Card key={report.id} className="overflow-hidden">
-                        <CardHeader className="pb-2">
-                          <CardTitle>{report.student.name}</CardTitle>
-                          <CardDescription>
-                            {report.template} • {getPeriodDisplayName(report.period)} • {formatDate(report.date)}
-                          </CardDescription>
-                        </CardHeader>
-                        <CardContent className="pb-2">
-                          <div className="space-y-2">
-                            <div>
-                              <h3 className="text-sm font-medium">Subjects Included:</h3>
-                              <div className="flex flex-wrap gap-1 mt-1">
-                                {report.subjects.map((subject) => (
-                                  <Badge key={subject.subject} variant="outline">
-                                    {subject.subject}
-                                  </Badge>
-                                ))}
-                              </div>
-                            </div>
-                            
-                            <div>
-                              <h3 className="text-sm font-medium">Overall Comments:</h3>
-                              <p className="text-sm text-muted-foreground line-clamp-3">
-                                {report.overallComments}
-                              </p>
-                            </div>
-                          </div>
-                        </CardContent>
-                        <CardFooter className="flex justify-between">
-                          <Button 
-                            variant="outline" 
-                            size="sm"
-                            onClick={() => viewReport(report)}
-                          >
-                            <Eye className="mr-2 h-4 w-4" />
-                            View
-                          </Button>
-                          <Button 
-                            variant="outline" 
-                            size="sm"
-                            onClick={() => saveReport(report)}
-                          >
-                            <Save className="mr-2 h-4 w-4" />
-                            Save
-                          </Button>
-                        </CardFooter>
-                      </Card>
-                    ))}
-                  </div>
-                </>
-              ) : (
-                <div className="text-centre py-12">
-                  <FileText className="h-12 w-12 mx-auto text-muted-foreground" />
-                  <h3 className="mt-4 text-lg font-medium">No reports generated yet</h3>
-                  <p className="mt-2 text-muted-foreground">
-                    Configure your report settings in the Create tab and generate reports to see them here
-                  </p>
-                  <Button 
-                    variant="outline" 
-                    className="mt-4"
-                    onClick={() => setActiveTab('create')}
-                  >
-                    Go to Create
-                  </Button>
                 </div>
-              )}
-            </TabsContent>
-            
-            {/* View Tab */}
-            <TabsContent value="view" className="space-y-6">
-              {currentReport ? (
-                <div className="space-y-6">
-                  <div className="flex justify-between items-centre">
-                    <div>
-                      <h2 className="text-2xl font-bold">{currentReport.student.name}</h2>
-                      <p className="text-muted-foreground">
-                        Year {currentReport.student.year}, {currentReport.student.class} • {currentReport.template} • {getPeriodDisplayName(currentReport.period)}
-                      </p>
-                    </div>
-                    <div className="flex space-x-2">
-                      {!editingReport ? (
-                        <>
-                          <Button 
-                            variant="outline" 
-                            size="sm"
-                            onClick={editReport}
-                          >
-                            <Edit className="mr-2 h-4 w-4" />
-                            Edit
-                          </Button>
-                          <Button 
-                            variant="outline" 
-                            size="sm"
-                            onClick={() => generatePDF(currentReport)}
-                          >
-                            <Download className="mr-2 h-4 w-4" />
-                            PDF
-                          </Button>
-                        </>
-                      ) : (
-                        <>
-                          <Button 
-                            variant="outline" 
-                            size="sm"
-                            onClick={() => setEditingReport(false)}
-                          >
-                            Cancel
-                          </Button>
-                          <Button 
-                            size="sm"
-                            onClick={saveEditedReport}
-                          >
-                            Save Changes
-                          </Button>
-                        </>
-                      )}
-                    </div>
-                  </div>
-                  
-                  <Card>
-                    <CardHeader>
-                      <CardTitle>Overall Summary</CardTitle>
-                    </CardHeader>
-                    <CardContent>
-                      {!editingReport ? (
-                        <p>{currentReport.overallComments}</p>
-                      ) : (
-                        <Textarea 
-                          value={editedComments['overall'] || currentReport.overallComments}
-                          onChange={(e) => setEditedComments({...editedComments, overall: e.target.value})}
-                          className="min-h-[100px]"
-                        />
-                      )}
-                    </CardContent>
-                  </Card>
-                  
-                  <div className="space-y-4">
-                    <h3 className="text-lg font-medium">Subject Reports</h3>
-                    
-                    {currentReport.subjects.map((subject) => (
-                      <Card key={subject.subject}>
-                        <CardHeader className="pb-2">
-                          <div className="flex justify-between">
-                            <CardTitle>{subject.subject}</CardTitle>
-                            <Badge className={
-                              subject.progress > 3 ? "bg-green-100 text-green-800" : 
-                              subject.progress > 0 ? "bg-blue-100 text-blue-800" : 
-                              "bg-amber-100 text-amber-800"
-                            }>
-                              {subject.progress > 0 ? `+${subject.progress}%` : `${subject.progress}%`}
-                            </Badge>
-                          </div>
-                        </CardHeader>
-                        <CardContent className="pb-2">
-                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
-                            <div>
-                              <div className="flex justify-between mb-1">
-                                <span className="text-sm font-medium">Current Score</span>
-                                <span className="text-sm font-medium">{subject.currentScore}%</span>
-                              </div>
-                              <div className="w-full bg-grey-200 rounded-full h-2.5">
-                                <div 
-                                  className="bg-primary h-2.5 rounded-full" 
-                                  style={{ width: `${subject.currentScore}%` }}
-                                ></div>
-                              </div>
-                              
-                              <div className="mt-4">
-                                <h4 className="text-sm font-medium mb-1">Strengths:</h4>
-                                <ul className="list-disc list-inside text-sm text-muted-foreground">
-                                  {subject.strengths.map((strength: string, index: number) => (
-                                    <li key={index}>{strength}</li>
-                                  ))}
-                                </ul>
-                              </div>
-                            </div>
-                            
-                            <div>
-                              <div className="flex justify-between mb-1">
-                                <span className="text-sm font-medium">Comparison to Class Average</span>
-                                <span className="text-sm font-medium">
-                                  {subject.comparisonToAverage > 0 ? `+${subject.comparisonToAverage}%` : `${subject.comparisonToAverage}%`}
-                                </span>
-                              </div>
-                              <div className="flex items-centre space-x-2">
-                                <span className="text-sm">Class: {subject.classAverage}%</span>
-                                <div className="flex-1 h-0.5 bg-grey-200"></div>
-                                <span className="text-sm">Student: {subject.currentScore}%</span>
-                              </div>
-                              
-                              <div className="mt-4">
-                                <h4 className="text-sm font-medium mb-1">Areas for Development:</h4>
-                                <ul className="list-disc list-inside text-sm text-muted-foreground">
-                                  {subject.areasForDevelopment.map((area: string, index: number) => (
-                                    <li key={index}>{area}</li>
-                                  ))}
-                                </ul>
-                              </div>
-                            </div>
-                          </div>
-                          
-                          <div className="mt-4">
-                            <h4 className="text-sm font-medium mb-1">Teacher Comments:</h4>
-                            {!editingReport ? (
-                              <p className="text-sm text-muted-foreground">{subject.comments}</p>
-                            ) : (
-                              <Textarea 
-                                value={editedComments[subject.subject] || subject.comments}
-                                onChange={(e) => setEditedComments({...editedComments, [subject.subject]: e.target.value})}
-                                className="min-h-[80px] text-sm"
-                              />
-                            )}
-                          </div>
-                          
-                          {currentReport.includeAttendance && (
-                            <div className="mt-4 flex items-centre">
-                              <Clock className="h-4 w-4 mr-2 text-muted-foreground" />
-                              <span className="text-sm">Attendance: {subject.attendance}%</span>
-                            </div>
-                          )}
-                          
-                          {currentReport.includeBehavior && (
-                            <div className="mt-2 flex items-centre">
-                              <Smile className="h-4 w-4 mr-2 text-muted-foreground" />
-                              <span className="text-sm">Behaviour: {subject.behaviour}</span>
-                            </div>
-                          )}
-                        </CardContent>
-                      </Card>
-                    ))}
-                  </div>
-                  
-                  {currentReport.nextSteps && currentReport.nextSteps.length > 0 && (
-                    <Card>
-                      <CardHeader>
-                        <CardTitle className="flex items-centre">
-                          <Target className="mr-2 h-5 w-5" />
-                          Next Steps
-                        </CardTitle>
-                      </CardHeader>
-                      <CardContent>
-                        <ul className="space-y-2">
-                          {currentReport.nextSteps.map((step: string, index: number) => (
-                            <li key={index} className="flex items-start">
-                              <CheckCircle className="h-5 w-5 mr-2 text-primary flex-shrink-0 mt-0.5" />
-                              <span>{step}</span>
-                            </li>
-                          ))}
-                        </ul>
-                      </CardContent>
-                    </Card>
+              </CardContent>
+              <CardFooter className="flex justify-between">
+                <Button variant="outline" onClick={clearSelections}>
+                  Reset All
+                </Button>
+                <Button 
+                  onClick={generateReports}
+                  disabled={isGenerating || selectedStudents.length === 0 || selectedSubjects.length === 0 || !selectedTemplate}
+                >
+                  {isGenerating ? (
+                    <>Generating Reports...</>
+                  ) : (
+                    <>
+                      Generate Reports
+                      <FileText className="ml-2 h-4 w-4" />
+                    </>
                   )}
-                  
-                  <div className="flex justify-between">
+                </Button>
+              </CardFooter>
+            </Card>
+          </div>
+        </TabsContent>
+        
+        {/* Generated Reports Tab */}
+        <TabsContent value="preview" className="space-y-6">
+          {generatedReports.length === 0 ? (
+            <Card className="p-8 text-center">
+              <div className="mx-auto flex h-20 w-20 items-center justify-center rounded-full bg-muted">
+                <FileText className="h-10 w-10 text-muted-foreground" />
+              </div>
+              <h3 className="mt-6 text-2xl font-semibold">No Reports Generated</h3>
+              <p className="mt-2 text-muted-foreground">
+                Generate reports using the Create Reports tab to see them here.
+              </p>
+              <Button className="mt-6" onClick={() => setActiveTab('create')}>
+                Create Reports
+              </Button>
+            </Card>
+          ) : (
+            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
+              {generatedReports.map(report => (
+                <Card key={report.id} className="overflow-hidden">
+                  <CardHeader className="pb-3">
+                    <CardTitle>{report.student.name}</CardTitle>
+                    <CardDescription>
+                      {report.template} • {new Date(report.date).toLocaleDateString()}
+                    </CardDescription>
+                  </CardHeader>
+                  <CardContent className="pb-3">
+                    <div className="space-y-2">
+                      <div className="flex items-center justify-between text-sm">
+                        <span className="text-muted-foreground">Class:</span>
+                        <span className="font-medium">{report.student.class}</span>
+                      </div>
+                      <div className="flex items-center justify-between text-sm">
+                        <span className="text-muted-foreground">Subjects:</span>
+                        <span className="font-medium">{report.subjects.length}</span>
+                      </div>
+                      <div className="flex items-center justify-between text-sm">
+                        <span className="text-muted-foreground">Average Score:</span>
+                        <span className="font-medium">
+                          {Math.round(report.subjects.reduce((sum: number, s: any) => sum + s.currentScore, 0) / report.subjects.length)}%
+                        </span>
+                      </div>
+                    </div>
+                    <Separator className="my-3" />
+                    <p className="text-sm text-muted-foreground line-clamp-3">
+                      {report.overallComments}
+                    </p>
+                  </CardContent>
+                  <CardFooter className="flex justify-between">
                     <Button 
-                      variant="outline"
-                      onClick={() => setActiveTab('preview')}
+                      variant="ghost" 
+                      size="sm"
+                      onClick={() => deleteReport(report.id, false)}
                     >
-                      Back to Preview
+                      <Trash className="h-4 w-4 mr-1" />
+                      Delete
                     </Button>
-                    
                     <div className="flex space-x-2">
                       <Button 
-                        variant="outline"
-                        onClick={() => generatePDF(currentReport)}
+                        variant="outline" 
+                        size="sm"
+                        onClick={() => saveReport(report)}
                       >
-                        <Printer className="mr-2 h-4 w-4" />
-                        Print
+                        <Save className="h-4 w-4 mr-1" />
+                        Save
                       </Button>
-                      
                       <Button 
-                        variant="outline"
-                        onClick={() => {
-                          // Simulate sharing functionality
-                          toast({
-                            title: "Share options",
-                            description: "Sharing functionality would open here.",
-                            variant: "default"
-                          });
-                        }}
+                        variant="default" 
+                        size="sm"
+                        onClick={() => viewReport(report.id)}
                       >
-                        <Share2 className="mr-2 h-4 w-4" />
-                        Share
+                        <Eye className="h-4 w-4 mr-1" />
+                        View
                       </Button>
-                      
-                      {!savedReports.some(report => report.id === currentReport.id) && (
-                        <Button 
-                          onClick={() => saveReport(currentReport)}
-                        >
-                          <Save className="mr-2 h-4 w-4" />
-                          Save Report
-                        </Button>
-                      )}
                     </div>
-                  </div>
-                </div>
-              ) : (
-                <div className="text-centre py-12">
-                  <FileText className="h-12 w-12 mx-auto text-muted-foreground" />
-                  <h3 className="mt-4 text-lg font-medium">No report selected</h3>
-                  <p className="mt-2 text-muted-foreground">
-                    Select a report from the Preview or Saved tabs to view it in detail
-                  </p>
-                </div>
-              )}
-            </TabsContent>
-            
-            {/* Saved Tab */}
-            <TabsContent value="saved" className="space-y-6">
-              {savedReports.length > 0 ? (
-                <>
-                  <div className="flex justify-between items-centre">
-                    <h2 className="text-xl font-bold">Saved Reports</h2>
-                    <div className="text-sm text-muted-foreground">
-                      {savedReports.length} reports saved
+                  </CardFooter>
+                </Card>
+              ))}
+            </div>
+          )}
+        </TabsContent>
+        
+        {/* Saved Reports Tab */}
+        <TabsContent value="saved" className="space-y-6">
+          {savedReports.length === 0 ? (
+            <Card className="p-8 text-center">
+              <div className="mx-auto flex h-20 w-20 items-center justify-center rounded-full bg-muted">
+                <Save className="h-10 w-10 text-muted-foreground" />
+              </div>
+              <h3 className="mt-6 text-2xl font-semibold">No Saved Reports</h3>
+              <p className="mt-2 text-muted-foreground">
+                Save generated reports to access them here later.
+              </p>
+              <Button className="mt-6" onClick={() => setActiveTab('preview')}>
+                View Generated Reports
+              </Button>
+            </Card>
+          ) : (
+            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
+              {savedReports.map(report => (
+                <Card key={report.id} className="overflow-hidden">
+                  <CardHeader className="pb-3">
+                    <CardTitle>{report.student.name}</CardTitle>
+                    <CardDescription>
+                      {report.template} • {new Date(report.date).toLocaleDateString()}
+                    </CardDescription>
+                  </CardHeader>
+                  <CardContent className="pb-3">
+                    <div className="space-y-2">
+                      <div className="flex items-center justify-between text-sm">
+                        <span className="text-muted-foreground">Class:</span>
+                        <span className="font-medium">{report.student.class}</span>
+                      </div>
+                      <div className="flex items-center justify-between text-sm">
+                        <span className="text-muted-foreground">Subjects:</span>
+                        <span className="font-medium">{report.subjects.length}</span>
+                      </div>
+                      <div className="flex items-center justify-between text-sm">
+                        <span className="text-muted-foreground">Average Score:</span>
+                        <span className="font-medium">
+                          {Math.round(report.subjects.reduce((sum: number, s: any) => sum + s.currentScore, 0) / report.subjects.length)}%
+                        </span>
+                      </div>
                     </div>
+                    <Separator className="my-3" />
+                    <p className="text-sm text-muted-foreground line-clamp-3">
+                      {report.overallComments}
+                    </p>
+                  </CardContent>
+                  <CardFooter className="flex justify-between">
+                    <Button 
+                      variant="ghost" 
+                      size="sm"
+                      onClick={() => deleteReport(report.id, true)}
+                    >
+                      <Trash className="h-4 w-4 mr-1" />
+                      Delete
+                    </Button>
+                    <Button 
+                      variant="default" 
+                      size="sm"
+                      onClick={() => viewReport(report.id)}
+                    >
+                      <Eye className="h-4 w-4 mr-1" />
+                      View
+                    </Button>
+                  </CardFooter>
+                </Card>
+              ))}
+            </div>
+          )}
+        </TabsContent>
+        
+        {/* View Report Tab */}
+        <TabsContent value="view" className="space-y-6">
+          {!currentReport ? (
+            <Card className="p-8 text-center">
+              <div className="mx-auto flex h-20 w-20 items-center justify-center rounded-full bg-muted">
+                <FileText className="h-10 w-10 text-muted-foreground" />
+              </div>
+              <h3 className="mt-6 text-2xl font-semibold">No Report Selected</h3>
+              <p className="mt-2 text-muted-foreground">
+                Select a report to view its details.
+              </p>
+              <div className="flex justify-center space-x-4 mt-6">
+                <Button onClick={() => setActiveTab('preview')}>
+                  Generated Reports
+                </Button>
+                <Button variant="outline" onClick={() => setActiveTab('saved')}>
+                  Saved Reports
+                </Button>
+              </div>
+            </Card>
+          ) : (
+            <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
+              {/* Report Header */}
+              <Card className="lg:col-span-3">
+                <CardHeader className="flex flex-row items-center justify-between">
+                  <div>
+                    <CardTitle className="text-2xl">{currentReport.student.name} - {currentReport.template}</CardTitle>
+                    <CardDescription>
+                      Generated on {new Date(currentReport.date).toLocaleDateString()} • Class {currentReport.student.class}
+                    </CardDescription>
                   </div>
-                  
-                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
-                    {savedReports.map(report => (
-                      <Card key={report.id} className="overflow-hidden">
-                        <CardHeader className="pb-2">
-                          <CardTitle>{report.student.name}</CardTitle>
-                          <CardDescription>
-                            {report.template} • {getPeriodDisplayName(report.period)} • {formatDate(report.date)}
-                          </CardDescription>
-                        </CardHeader>
-                        <CardContent className="pb-2">
-                          <div className="space-y-2">
-                            <div>
-                              <h3 className="text-sm font-medium">Subjects Included:</h3>
-                              <div className="flex flex-wrap gap-1 mt-1">
-                                {report.subjects.map((subject) => (
-                                  <Badge key={subject.subject} variant="outline">
-                                    {subject.subject}
-                                  </Badge>
-                                ))}
-                              </div>
-                            </div>
-                          </div>
-                        </CardContent>
-                        <CardFooter className="flex justify-between">
-                          <Button 
-                            variant="outline" 
-                            size="sm"
-                            onClick={() => viewReport(report)}
-                          >
-                            <Eye className="mr-2 h-4 w-4" />
-                            View
-                          </Button>
-                          <Button 
-                            variant="outline" 
-                            size="sm"
-                            onClick={() => deleteReport(report.id)}
-                          >
-                            <Trash className="mr-2 h-4 w-4" />
-                            Delete
-                          </Button>
-                        </CardFooter>
-                      </Card>
-                    ))}
+                  <div className="flex space-x-2">
+                    {!editingReport ? (
+                      <>
+                        <Button variant="outline" size="sm" onClick={shareReport}>
+                          <Share2 className="h-4 w-4 mr-1" />
+                          Share
+                        </Button>
+                        <Button variant="outline" size="sm" onClick={printReport}>
+                          <Printer className="h-4 w-4 mr-1" />
+                          Print
+                        </Button>
+                        <Button variant="outline" size="sm" onClick={exportReportAsPDF}>
+                          <Download className="h-4 w-4 mr-1" />
+                          Export PDF
+                        </Button>
+                        <Button variant="default" size="sm" onClick={editReport}>
+                          <Edit className="h-4 w-4 mr-1" />
+                          Edit
+                        </Button>
+                      </>
+                    ) : (
+                      <>
+                        <Button variant="outline" size="sm" onClick={() => setEditingReport(false)}>
+                          Cancel
+                        </Button>
+                        <Button variant="default" size="sm" onClick={saveEditedReport}>
+                          <Save className="h-4 w-4 mr-1" />
+                          Save Changes
+                        </Button>
+                      </>
+                    )}
                   </div>
-                </>
-              ) : (
-                <div className="text-centre py-12">
-                  <Save className="h-12 w-12 mx-auto text-muted-foreground" />
-                  <h3 className="mt-4 text-lg font-medium">No saved reports</h3>
-                  <p className="mt-2 text-muted-foreground">
-                    Generate and save reports to access them here for future reference
-                  </p>
-                  <Button 
-                    variant="outline" 
-                    className="mt-4"
-                    onClick={() => setActiveTab('create')}
-                  >
-                    Create New Reports
-                  </Button>
-                </div>
+                </CardHeader>
+              </Card>
+              
+              {/* Overall Summary */}
+              <Card className="lg:col-span-3">
+                <CardHeader>
+                  <CardTitle className="flex items-center">
+                    <BarChart className="mr-2 h-5 w-5" />
+                    Overall Summary
+                  </CardTitle>
+                </CardHeader>
+                <CardContent>
+                  {!editingReport ? (
+                    <p>{currentReport.overallComments}</p>
+                  ) : (
+                    <Textarea 
+                      value={editedComments['overall'] || currentReport.overallComments}
+                      onChange={(e) => setEditedComments({...editedComments, overall: e.target.value})}
+                      className="min-h-[150px]"
+                    />
+                  )}
+                </CardContent>
+              </Card>
+              
+              {/* Subject Reports */}
+              {currentReport.subjects.map((subject: any) => (
+                <Card key={subject.subject}>
+                  <CardHeader>
+                    <CardTitle className="flex items-center justify-between">
+                      <span>{subject.subject}</span>
+                      <Badge className={subject.progress > 0 ? 'bg-green-500' : subject.progress < 0 ? 'bg-red-500' : 'bg-yellow-500'}>
+                        {subject.progress > 0 ? '+' : ''}{subject.progress}%
+                      </Badge>
+                    </CardTitle>
+                    <CardDescription>
+                      Current Score: {subject.currentScore}% (Class Average: {subject.classAverage}%)
+                    </CardDescription>
+                  </CardHeader>
+                  <CardContent className="space-y-4">
+                    <div className="grid grid-cols-2 gap-4">
+                      <div>
+                        <h4 className="text-sm font-medium mb-2">Strengths</h4>
+                        <ul className="list-disc list-inside text-sm text-muted-foreground">
+                          {subject.strengths.map((strength: string) => (
+                            <li key={strength}>{strength}</li>
+                          ))}
+                        </ul>
+                      </div>
+                      <div>
+                        <h4 className="text-sm font-medium mb-2">Areas for Development</h4>
+                        <ul className="list-disc list-inside text-sm text-muted-foreground">
+                          {subject.areasForDevelopment.map((area: string) => (
+                            <li key={area}>{area}</li>
+                          ))}
+                        </ul>
+                      </div>
+                    </div>
+                    
+                    <div>
+                      <h4 className="text-sm font-medium mb-2">Teacher Comments</h4>
+                      {!editingReport ? (
+                        <p className="text-sm">{subject.comments}</p>
+                      ) : (
+                        <Textarea 
+                          value={editedComments[subject.subject] || subject.comments}
+                          onChange={(e) => setEditedComments({...editedComments, [subject.subject]: e.target.value})}
+                          className="min-h-[100px]"
+                        />
+                      )}
+                    </div>
+                    
+                    {currentReport.includeAttendance && (
+                      <div className="flex items-center justify-between text-sm">
+                        <span className="font-medium">Attendance:</span>
+                        <Badge variant="outline">{subject.attendance}%</Badge>
+                      </div>
+                    )}
+                    
+                    {currentReport.includeBehavior && (
+                      <div className="flex items-center justify-between text-sm">
+                        <span className="font-medium">Behaviour:</span>
+                        <Badge variant="outline">{subject.behaviour}</Badge>
+                      </div>
+                    )}
+                  </CardContent>
+                </Card>
+              ))}
+              
+              {/* Next Steps */}
+              {currentReport.includeNextSteps && currentReport.nextSteps.length > 0 && (
+                <Card className="lg:col-span-3">
+                  <CardHeader>
+                    <CardTitle className="flex items-center">
+                      <Target className="mr-2 h-5 w-5" />
+                      Next Steps
+                    </CardTitle>
+                  </CardHeader>
+                  <CardContent>
+                    <ul className="space-y-2">
+                      {currentReport.nextSteps.map((step: string, index: number) => (
+                        <li key={index} className="flex items-start">
+                          <CheckCircle className="h-5 w-5 mr-2 text-green-500 mt-0.5" />
+                          <span>{step}</span>
+                        </li>
+                      ))}
+                    </ul>
+                  </CardContent>
+                </Card>
               )}
-            </TabsContent>
-          </Tabs>
-        </CardContent>
-        <CardFooter className="flex justify-between border-t pt-6">
-          <Button 
-            variant="outline"
-            onClick={() => {
-              // Open help documentation
-              toast({
-                title: "Help & Documentation",
-                description: "Documentation would open here.",
-                variant: "default"
-              });
-            }}
-          >
-            <HelpCircle className="mr-2 h-4 w-4" />
-            Help
-          </Button>
-          
-          <div className="text-sm text-muted-foreground">
-            Last updated: {new Date().toLocaleDateString()}
-          </div>
-        </CardFooter>
-      </Card>
+            </div>
+          )}
+        </TabsContent>
+      </Tabs>
     </div>
   );
 }
diff --git a/src/components/educator/calendar-optimisation.tsx b/src/components/educator/calendar-optimisation.tsx
index a07dafd..1fe3701 100644
--- a/src/components/educator/calendar-optimisation.tsx
+++ b/src/components/educator/calendar-optimisation.tsx
@@ -154,7 +154,7 @@ export function CalendarOptimization({ className = '' }: CalendarOptimizationPro
   const aiService = useAIService();
   
   // State for activities
-  const [activities, setActivities] = useState<any: any[]>(sampleActivities);
+  const [activities, setActivities] = useState<any[]>(sampleActivities);
   const [selectedActivity, setSelectedActivity] = useState<any | null>(null);
   const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);
   const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);
@@ -173,7 +173,7 @@ export function CalendarOptimization({ className = '' }: CalendarOptimizationPro
     location: '',
     description: '',
     recurring: false,
-    participants: [] as string: any: any[]
+    participants: [] as string[]
   });
   
   // State for filters
@@ -186,7 +186,7 @@ export function CalendarOptimization({ className = '' }: CalendarOptimizationPro
   // State for optimization
   const [isOptimizing, setIsOptimizing] = useState(false);
   const [optimizationFocus, setOptimizationFocus] = useState('balance');
-  const [optimizationSuggestions, setOptimizationSuggestions] = useState<any: any[]>([]);
+  const [optimizationSuggestions, setOptimizationSuggestions] = useState<any[]>([]);
   
   // State for analytics
   const [analyticsData, setAnalyticsData] = useState<any>(null);
diff --git a/src/components/educator/calendar-optimization.tsx b/src/components/educator/calendar-optimization.tsx
index 3a8a775..ff29c14 100644
--- a/src/components/educator/calendar-optimization.tsx
+++ b/src/components/educator/calendar-optimization.tsx
@@ -152,7 +152,7 @@ export function CalendarOptimization({ className = '' }: CalendarOptimizationPro
   const aiService = useAIService();
   
   // State for activities
-  const [activities, setActivities] = useState<any: any[]>(sampleActivities);
+  const [activities, setActivities] = useState<any[]>(sampleActivities);
   const [selectedActivity, setSelectedActivity] = useState<any | null>(null);
   const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);
   const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);
@@ -171,7 +171,7 @@ export function CalendarOptimization({ className = '' }: CalendarOptimizationPro
     location: '',
     description: '',
     recurring: false,
-    participants: [] as string: any: any[]
+    participants: [] as string[]
   });
   
   // State for filters
@@ -184,7 +184,7 @@ export function CalendarOptimization({ className = '' }: CalendarOptimizationPro
   // State for optimization
   const [isOptimizing, setIsOptimizing] = useState(false);
   const [optimizationFocus, setOptimizationFocus] = useState('balance');
-  const [optimizationSuggestions, setOptimizationSuggestions] = useState<any: any[]>([]);
+  const [optimizationSuggestions, setOptimizationSuggestions] = useState<any[]>([]);
   
   // State for analytics
   const [analyticsData, setAnalyticsData] = useState<any>(null);
diff --git a/src/components/educator/meeting-note-transcription.tsx b/src/components/educator/meeting-note-transcription.tsx
index be0fa88..5336d04 100644
--- a/src/components/educator/meeting-note-transcription.tsx
+++ b/src/components/educator/meeting-note-transcription.tsx
@@ -230,7 +230,7 @@ export default function MeetingNoteTranscription() {
   const [currentMeeting, setCurrentMeeting] = useState<any>(null);
   const [savedMeetings, setSavedMeetings] = useState<any[]>(sampleMeetings);
   const [searchQuery, setSearchQuery] = useState('');
-  const [filteredMeetings, setFilteredMeetings] = useState<any: any[]>(sampleMeetings);
+  const [filteredMeetings, setFilteredMeetings] = useState<any[]>(sampleMeetings);
   const [editingKeyPoints, setEditingKeyPoints] = useState(false);
   const [editingActionItems, setEditingActionItems] = useState(false);
   const [newKeyPoint, setNewKeyPoint] = useState({ 
diff --git a/src/components/educator/smart-lesson-planning.tsx b/src/components/educator/smart-lesson-planning.tsx
index 120d5ca..f54bce0 100644
--- a/src/components/educator/smart-lesson-planning.tsx
+++ b/src/components/educator/smart-lesson-planning.tsx
@@ -24,7 +24,7 @@ interface LessonPlanTemplate {
   content: string;
 }
 
-const lessonPlanTemplates: LessonPlanTemplate: any[] = [
+const lessonPlanTemplates: LessonPlanTemplate[] = [
   {
     id: "1",
     name: "Literacy Hour",
@@ -77,7 +77,7 @@ export function SmartLessonPlanning() {
   const [assessment, setAssessment] = useState("");
   const [selectedTemplate, setSelectedTemplate] = useState<string | null>(null);
   const [selectedStandards, setSelectedStandards] = useState<string[]>([]);
-  const [selectedDifferentiation, setSelectedDifferentiation] = useState<string: any[]>([]);
+  const [selectedDifferentiation, setSelectedDifferentiation] = useState<string[]>([]);
   const [generatedPlan, setGeneratedPlan] = useState("");
   const [isGenerating, setIsGenerating] = useState(false);
   
diff --git a/src/components/educator/student-profile-integration.tsx b/src/components/educator/student-profile-integration.tsx
index 6ca3481..c4b96f4 100644
--- a/src/components/educator/student-profile-integration.tsx
+++ b/src/components/educator/student-profile-integration.tsx
@@ -10,10 +10,10 @@ interface StudentProfileIntegrationProps {
   studentProfile?: {
     name: string;
     yearGroup: number;
-    specialNeeds?: string: any[];
-    interests?: string: any[];
-    strengths?: string: any[];
-    areasForDevelopment?: string: any[];
+    specialNeeds?: string[];
+    interests?: string[];
+    strengths?: string[];
+    areasForDevelopment?: string[];
   };
   className?: string;
 }
diff --git a/src/components/error-boundary/age-adaptive-error-boundary.tsx b/src/components/error-boundary/age-adaptive-error-boundary.tsx
index 7e0dc3e..e0515ed 100644
--- a/src/components/error-boundary/age-adaptive-error-boundary.tsx
+++ b/src/components/error-boundary/age-adaptive-error-boundary.tsx
@@ -11,7 +11,7 @@ interface AgeAdaptiveErrorBoundaryProps {
   children: React.ReactNode;
   ageGroup?: AgeGroup;
   onError?: (error: Error, errorInfo: React.ErrorInfo) => void;
-  resetKeys?: any: any[];
+  resetKeys?: any[];
 }
 
 /**
diff --git a/src/components/error-boundary/error-boundary.tsx b/src/components/error-boundary/error-boundary.tsx
index e28d56f..916839d 100644
--- a/src/components/error-boundary/error-boundary.tsx
+++ b/src/components/error-boundary/error-boundary.tsx
@@ -10,7 +10,7 @@ interface Props {
   children: ReactNode;
   fallback?: ReactNode;
   onError?: (error: Error, errorInfo: ErrorInfo) => void;
-  resetKeys?: any: any[];
+  resetKeys?: any[];
 }
 
 interface State {
diff --git a/src/components/heygen/heygen-avatar-creation.tsx b/src/components/heygen/heygen-avatar-creation.tsx
index c6c47ea..e2d0873 100644
--- a/src/components/heygen/heygen-avatar-creation.tsx
+++ b/src/components/heygen/heygen-avatar-creation.tsx
@@ -23,7 +23,7 @@ export const HeyGenAvatarCreation: React.FC = () => {
   const [avatarName, setAvatarName] = useState('Dr. Scott Avatar');
   const [selectedImages, setSelectedImages] = useState<File[]>([]);
   const [selectedVoiceSample, setSelectedVoiceSample] = useState<File | null>(null);
-  const [previewUrls, setPreviewUrls] = useState<string: any[]>([]);
+  const [previewUrls, setPreviewUrls] = useState<string[]>([]);
   const [voicePreviewUrl, setVoicePreviewUrl] = useState<string | null>(null);
   const [isRecording, setIsRecording] = useState(false);
   const [audioRecorder, setAudioRecorder] = useState<MediaRecorder | null>(null);
@@ -78,7 +78,7 @@ export const HeyGenAvatarCreation: React.FC = () => {
       const recorder = new MediaRecorder(stream);
       setAudioRecorder(recorder);
       
-      const chunks: Blob: any[] = [];
+      const chunks: Blob[] = [];
       recorder.ondataavailable = (e) => {
         chunks.push(e.data);
         setAudioChunks(chunks);
diff --git a/src/components/heygen/heygen-video-creator.tsx b/src/components/heygen/heygen-video-creator.tsx
index edd1683..1d3abbb 100644
--- a/src/components/heygen/heygen-video-creator.tsx
+++ b/src/components/heygen/heygen-video-creator.tsx
@@ -32,9 +32,9 @@ interface Video {
 }
 
 export default function HeygenVideoCreator() {
-  const [avatars, setAvatars] = useState<Avatar: any[]>([]);
-  const [voices, setVoices] = useState<Voice: any[]>([]);
-  const [videos, setVideos] = useState<Video: any[]>([]);
+  const [avatars, setAvatars] = useState<Avatar[]>([]);
+  const [voices, setVoices] = useState<Voice[]>([]);
+  const [videos, setVideos] = useState<Video[]>([]);
   const [loading, setLoading] = useState(false);
   const [creating, setCreating] = useState(false);
   const [selectedAvatar, setSelectedAvatar] = useState('');
diff --git a/src/components/heygen/heygen-video-library.tsx b/src/components/heygen/heygen-video-library.tsx
index 540b693..728e9f3 100644
--- a/src/components/heygen/heygen-video-library.tsx
+++ b/src/components/heygen/heygen-video-library.tsx
@@ -22,7 +22,7 @@ export interface HeygenVideo {
 }
 
 // Mock data for testing
-const mockVideos: HeygenVideo: any[] = [
+const mockVideos: HeygenVideo[] = [
   {
     id: 'v1',
     title: 'Welcome to EdPsych Connect',
@@ -54,7 +54,7 @@ const mockVideos: HeygenVideo: any[] = [
 
 export function HeygenVideoLibrary() {
   const [loading, setLoading] = useState(false);
-  const [videos, setVideos] = useState<HeygenVideo: any[]>([]);
+  const [videos, setVideos] = useState<HeygenVideo[]>([]);
   const [selectedVideo, setSelectedVideo] = useState<HeygenVideo | null>(null);
   const [searchTerm, setSearchTerm] = useState('');
   const [sortBy, setSortBy] = useState('newest');
diff --git a/src/components/i18n/language-switcher.tsx b/src/components/i18n/language-switcher.tsx
index 71c35a4..d40f78f 100644
--- a/src/components/i18n/language-switcher.tsx
+++ b/src/components/i18n/language-switcher.tsx
@@ -27,7 +27,7 @@ export const LanguageSwitcher: React.FC<LanguageSwitcherProps> = ({
   showLabel = true,
   className = ''
 }) => {
-  const [languages, setLanguages] = useState<LanguageMetadata: any[]>([]);
+  const [languages, setLanguages] = useState<LanguageMetadata[]>([]);
   const [currentLanguage, setCurrentLanguage] = useState<SupportedLanguage>(SupportedLanguage.ENGLISH_UK);
   const [isLoading, setIsLoading] = useState(true);
   
diff --git a/src/components/i18n/multilingual-accessibility-validator.tsx b/src/components/i18n/multilingual-accessibility-validator.tsx
index fcfd702..80063b6 100644
--- a/src/components/i18n/multilingual-accessibility-validator.tsx
+++ b/src/components/i18n/multilingual-accessibility-validator.tsx
@@ -80,8 +80,8 @@ export const MultilingualAccessibilityValidator: React.FC<MultilingualAccessibil
 }) => {
   const { t, currentLanguage } = useI18n();
   const [isValidating, setIsValidating] = useState(false);
-  const [accessibilityResults, setAccessibilityResults] = useState<AccessibilityValidationResult: any[]>([]);
-  const [coverageResults, setCoverageResults] = useState<LanguageCoverageResult: any[]>([]);
+  const [accessibilityResults, setAccessibilityResults] = useState<AccessibilityValidationResult[]>([]);
+  const [coverageResults, setCoverageResults] = useState<LanguageCoverageResult[]>([]);
   const [selectedTab, setSelectedTab] = useState<string>('accessibility');
   const [overallAccessibilityScore, setOverallAccessibilityScore] = useState<number>(0);
   const [overallCoverageScore, setOverallCoverageScore] = useState<number>(0);
@@ -113,7 +113,7 @@ export const MultilingualAccessibilityValidator: React.FC<MultilingualAccessibil
   // Validate accessibility
   const validateAccessibility = async () => {
     // Mock accessibility validation results
-    const results: AccessibilityValidationResult: any[] = [
+    const results: AccessibilityValidationResult[] = [
       {
         category: 'Text Direction',
         criteria: 'RTL language support',
@@ -219,7 +219,7 @@ export const MultilingualAccessibilityValidator: React.FC<MultilingualAccessibil
   // Validate language coverage
   const validateLanguageCoverage = async () => {
     // Mock language coverage results
-    const results: LanguageCoverageResult: any[] = [
+    const results: LanguageCoverageResult[] = [
       {
         language: SupportedLanguage.WELSH,
         namespaces: [
diff --git a/src/components/i18n/multilingual-curriculum-validator.tsx b/src/components/i18n/multilingual-curriculum-validator.tsx
index 799106f..e617d29 100644
--- a/src/components/i18n/multilingual-curriculum-validator.tsx
+++ b/src/components/i18n/multilingual-curriculum-validator.tsx
@@ -58,8 +58,8 @@ interface CurriculumValidationResult {
     info: number;
   };
   score: number; // 0-100
-  issues: CurriculumIssue: any[];
-  passedChecks: string: any[];
+  issues: CurriculumIssue[];
+  passedChecks: string[];
 }
 
 interface MultilingualCurriculumValidatorProps {
@@ -75,7 +75,7 @@ export const MultilingualCurriculumValidator: React.FC<MultilingualCurriculumVal
 }) => {
   const { t, currentLanguage } = useI18n();
   const [isValidating, setIsValidating] = useState(false);
-  const [results, setResults] = useState<CurriculumValidationResult: any[]>([]);
+  const [results, setResults] = useState<CurriculumValidationResult[]>([]);
   const [selectedLanguage, setSelectedLanguage] = useState<SupportedLanguage>(currentLanguage);
   const [overallScore, setOverallScore] = useState<number>(0);
   const [error, setError] = useState<string | null>(null);
@@ -106,7 +106,7 @@ export const MultilingualCurriculumValidator: React.FC<MultilingualCurriculumVal
       setError(null);
       
       const enabledLanguages = i18nService.getEnabledLanguages();
-      const validationResults: CurriculumValidationResult: any[] = [];
+      const validationResults: CurriculumValidationResult[] = [];
       
       // In a real implementation, this would perform actual validation
       // For now, we'll use mock data
@@ -144,7 +144,7 @@ export const MultilingualCurriculumValidator: React.FC<MultilingualCurriculumVal
     const score = Math.max(0, Math.min(100, 100 - (errorCount * 15) - (warningCount * 5)));
     
     // Generate mock issues
-    const issues: CurriculumIssue: any[] = [];
+    const issues: CurriculumIssue[] = [];
     
     // Add Welsh-specific issues if applicable (Welsh language has specific curriculum requirements)
     if (isWelsh) {
diff --git a/src/components/immersive/immersive-learning.tsx b/src/components/immersive/immersive-learning.tsx
index f178380..bf11332 100644
--- a/src/components/immersive/immersive-learning.tsx
+++ b/src/components/immersive/immersive-learning.tsx
@@ -18,7 +18,7 @@ interface ImmersiveEnvironment {
   subject: string;
   ageRange: string;
   curriculum: string;
-  objectives: string: any[];
+  objectives: string[];
   scenarioUrl: string;
   previewImage?: string;
   createdAt: string;
@@ -26,7 +26,7 @@ interface ImmersiveEnvironment {
 }
 
 interface ImmersiveLearningProps {
-  initialEnvironments?: ImmersiveEnvironment: any[];
+  initialEnvironments?: ImmersiveEnvironment[];
   onEnvironmentSelect?: (environment: ImmersiveEnvironment) => void;
   className?: string;
 }
@@ -37,7 +37,7 @@ export function ImmersiveLearning({
   className = ''
 }: ImmersiveLearningProps) {
   const { showToast } = useToast();
-  const [environments, setEnvironments] = useState<ImmersiveEnvironment: any[]>(initialEnvironments);
+  const [environments, setEnvironments] = useState<ImmersiveEnvironment[]>(initialEnvironments);
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
   
@@ -59,7 +59,7 @@ export function ImmersiveLearning({
         }
         
         // Mock data for demonstration
-        const mockEnvironments: ImmersiveEnvironment: any[] = [
+        const mockEnvironments: ImmersiveEnvironment[] = [
           {
             id: '1',
             title: 'Solar System Explorer',
diff --git a/src/components/mobile/mobile-validator.tsx b/src/components/mobile/mobile-validator.tsx
index d5aac21..f779d30 100644
--- a/src/components/mobile/mobile-validator.tsx
+++ b/src/components/mobile/mobile-validator.tsx
@@ -18,7 +18,7 @@ export interface AccessibilityValidationResults {
   colorIndependence: 'pass' | 'fail' | 'warning';
   motionReduction: 'pass' | 'fail' | 'warning';
   overallScore: number; // 0-100
-  issues: AccessibilityIssue: any[];
+  issues: AccessibilityIssue[];
 }
 
 export interface AccessibilityIssue {
@@ -122,7 +122,7 @@ export interface UserExperienceValidationResults {
   offlineSupport: 'excellent' | 'good' | 'average' | 'poor';
   touchResponsiveness: 'excellent' | 'good' | 'average' | 'poor';
   overallScore: number; // 0-100
-  issues: UserExperienceIssue: any[];
+  issues: UserExperienceIssue[];
 }
 
 export interface UserExperienceIssue {
@@ -403,14 +403,14 @@ export interface DeviceCompatibilityResults {
     edge: 'compatible' | 'partially_compatible' | 'not_compatible';
   };
   overallScore: number; // 0-100
-  issues: DeviceCompatibilityIssue: any[];
+  issues: DeviceCompatibilityIssue[];
 }
 
 export interface DeviceCompatibilityIssue {
   type: string;
   description: string;
   severity: 'critical' | 'serious' | 'moderate' | 'minor';
-  affectedDevices: string: any[];
+  affectedDevices: string[];
   recommendation: string;
 }
 
diff --git a/src/components/mobile/offline-manager.tsx b/src/components/mobile/offline-manager.tsx
index e259ebc..023e7f1 100644
--- a/src/components/mobile/offline-manager.tsx
+++ b/src/components/mobile/offline-manager.tsx
@@ -236,7 +236,7 @@ export function OfflineAware<T>({
 }
 
 interface OfflineCacheProps {
-  urls: string: any[];
+  urls: string[];
   children: React.ReactNode;
 }
 
@@ -251,7 +251,7 @@ export const OfflineCache: React.FC<OfflineCacheProps> = ({
   children
 }) => {
   const [isCaching, setIsCaching] = useState(false);
-  const [cachedUrls, setCachedUrls] = useState<string: any[]>([]);
+  const [cachedUrls, setCachedUrls] = useState<string[]>([]);
 
   // Cache URLs when component mounts
   useEffect(() => {
@@ -265,7 +265,7 @@ export const OfflineCache: React.FC<OfflineCacheProps> = ({
       
       try {
         const cache = await caches.open('edpsych-offline-cache');
-        const newlyCachedUrls: string: any[] = [];
+        const newlyCachedUrls: string[] = [];
         
         for (const url of urls) {
           try {
diff --git a/src/components/mobile/push-notification-manager.tsx b/src/components/mobile/push-notification-manager.tsx
index 3232c15..6ad5b71 100644
--- a/src/components/mobile/push-notification-manager.tsx
+++ b/src/components/mobile/push-notification-manager.tsx
@@ -511,7 +511,7 @@ export const NotificationCenter: React.FC<NotificationCenterProps> = ({
   userId,
   onNotificationClick
 }) => {
-  const [notifications, setNotifications] = useState<any: any[]>([]);
+  const [notifications, setNotifications] = useState<any[]>([]);
   const [isLoading, setIsLoading] = useState(true);
   const [activeTab, setActiveTab] = useState<'all' | 'unread'>('all');
 
diff --git a/src/components/mobile/responsive-layout.tsx b/src/components/mobile/responsive-layout.tsx
index 0ce707d..a67608d 100644
--- a/src/components/mobile/responsive-layout.tsx
+++ b/src/components/mobile/responsive-layout.tsx
@@ -301,7 +301,7 @@ interface NavigationItem {
 }
 
 interface MobileNavigationProps {
-  items: NavigationItem: any[];
+  items: NavigationItem[];
   className?: string;
 }
 
@@ -449,7 +449,7 @@ interface TabItem {
 }
 
 interface MobileTabViewProps {
-  tabs: TabItem: any[];
+  tabs: TabItem[];
   initialTab?: number;
   className?: string;
 }
@@ -566,7 +566,7 @@ interface ListItem {
 }
 
 interface MobileListProps {
-  items: ListItem: any[];
+  items: ListItem[];
   className?: string;
 }
 
@@ -682,7 +682,7 @@ interface MobileBottomSheetProps {
   isOpen: boolean;
   onClose: () => void;
   className?: string;
-  snapPoints?: string: any[]; // CSS height values for snap points
+  snapPoints?: string[]; // CSS height values for snap points
 }
 
 export const MobileBottomSheet: React.FC<MobileBottomSheetProps> = ({
diff --git a/src/components/navigation/avatar-navigation.tsx b/src/components/navigation/avatar-navigation.tsx
index c427cbd..3f111e5 100644
--- a/src/components/navigation/avatar-navigation.tsx
+++ b/src/components/navigation/avatar-navigation.tsx
@@ -66,7 +66,7 @@ interface NavigationVideo {
 }
 
 interface NavigationVideoResponse {
-  videos: NavigationVideo: any[];
+  videos: NavigationVideo[];
 }
 
 export default function AvatarNavigation({
diff --git a/src/components/pupil-voice/pupil-voice-tool.tsx b/src/components/pupil-voice/pupil-voice-tool.tsx
index 7c47e48..c54d85d 100644
--- a/src/components/pupil-voice/pupil-voice-tool.tsx
+++ b/src/components/pupil-voice/pupil-voice-tool.tsx
@@ -22,12 +22,12 @@ interface PupilVoiceEntry {
     answer: string;
   }[];
   sentiment: 'positive' | 'neutral' | 'negative';
-  tags: string: any[];
+  tags: string[];
   notes: string;
 }
 
 interface PupilVoiceToolProps {
-  initialEntries?: PupilVoiceEntry: any[];
+  initialEntries?: PupilVoiceEntry[];
   onEntrySelect?: (entry: PupilVoiceEntry) => void;
   className?: string;
 }
@@ -38,7 +38,7 @@ export function PupilVoiceTool({
   className = ''
 }: PupilVoiceToolProps) {
   const { showToast } = useToast();
-  const [entries, setEntries] = useState<PupilVoiceEntry: any[]>(initialEntries);
+  const [entries, setEntries] = useState<PupilVoiceEntry[]>(initialEntries);
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
   
@@ -59,7 +59,7 @@ export function PupilVoiceTool({
         }
         
         // Mock data for demonstration
-        const mockEntries: PupilVoiceEntry: any[] = [
+        const mockEntries: PupilVoiceEntry[] = [
           {
             id: '1',
             pupilName: 'Alex Thompson',
@@ -256,7 +256,7 @@ export function PupilVoiceTool({
   };
   
   // Determine sentiment based on answers
-  const determineSentiment = (answers: string: any[]): 'positive' | 'neutral' | 'negative' => {
+  const determineSentiment = (answers: string[]): 'positive' | 'neutral' | 'negative' => {
     // This is a simplified sentiment analysis
     // In a real application, this would use more sophisticated NLP
     const positiveWords = ['like', 'love', 'enjoy', 'happy', 'good', 'great', 'excellent', 'wonderful', 'fantastic'];
diff --git a/src/components/resource/contextual-resource-recommendation.tsx b/src/components/resource/contextual-resource-recommendation.tsx
index 7eb6870..2a33d59 100644
--- a/src/components/resource/contextual-resource-recommendation.tsx
+++ b/src/components/resource/contextual-resource-recommendation.tsx
@@ -34,7 +34,7 @@ interface Resource {
   type: 'document' | 'video' | 'audio' | 'link' | 'worksheet';
   url?: string;
   file?: string;
-  tags: string: any[];
+  tags: string[];
   ageRange: string;
   subject: string;
   curriculum: string;
@@ -64,7 +64,7 @@ export function ContextualResourceRecommendation({
   
   const [isLoading, setIsLoading] = useState(false);
   const [error, setError] = useState('');
-  const [recommendedResources, setRecommendedResources] = useState<Resource: any[]>([]);
+  const [recommendedResources, setRecommendedResources] = useState<Resource[]>([]);
   const [activeTab, setActiveTab] = useState('recommended');
   const [manualQuery, setManualQuery] = useState('');
   const [showExplanations, setShowExplanations] = useState(true);
@@ -99,7 +99,7 @@ export function ContextualResourceRecommendation({
       await new Promise(resolve => setTimeout(resolve, 1500));
       
       // Generate mock recommendations based on context
-      let mockRecommendations: Resource: any[] = [];
+      let mockRecommendations: Resource[] = [];
       
       if (contextSource === 'lesson-plan') {
         mockRecommendations = generateLessonPlanRecommendations();
@@ -126,7 +126,7 @@ export function ContextualResourceRecommendation({
   };
   
   // Generate mock recommendations for lesson plans
-  const generateLessonPlanRecommendations = (): Resource: any: any[] => {
+  const generateLessonPlanRecommendations = (): Resource[] => {
     // Extract context from contextContent or use default
     const context = contextContent || 'Mathematics lesson on fractions for Year 5 students';
     
@@ -196,7 +196,7 @@ export function ContextualResourceRecommendation({
   };
   
   // Generate mock recommendations for meeting notes
-  const generateMeetingNotesRecommendations = (): Resource: any: any[] => {
+  const generateMeetingNotesRecommendations = (): Resource[] => {
     // Extract context from contextContent or use default
     const context = contextContent || 'EHCNA meeting discussing communication difficulties and social interaction challenges';
     
@@ -251,7 +251,7 @@ export function ContextualResourceRecommendation({
   };
   
   // Generate mock recommendations for student profiles
-  const generateStudentProfileRecommendations = (): Resource: any: any[] => {
+  const generateStudentProfileRecommendations = (): Resource[] => {
     // Extract context from contextContent or use default
     const context = contextContent || 'Year 8 student with dyslexia who enjoys science and has strengths in verbal reasoning';
     
@@ -306,7 +306,7 @@ export function ContextualResourceRecommendation({
   };
   
   // Generate mock recommendations for manual queries
-  const generateManualQueryRecommendations = (): Resource: any: any[] => {
+  const generateManualQueryRecommendations = (): Resource[] => {
     // For demo purposes, we'll return mock data based on the query
     const query = manualQuery.toLowerCase();
     
diff --git a/src/components/resource/resource-library.tsx b/src/components/resource/resource-library.tsx
index 7214a26..84fa0e9 100644
--- a/src/components/resource/resource-library.tsx
+++ b/src/components/resource/resource-library.tsx
@@ -16,7 +16,7 @@ interface Resource {
   type: 'document' | 'video' | 'audio' | 'link' | 'worksheet';
   url?: string;
   file?: string;
-  tags: string: any[];
+  tags: string[];
   ageRange: string;
   subject: string;
   curriculum: string;
@@ -25,7 +25,7 @@ interface Resource {
 }
 
 interface ResourceLibraryProps {
-  initialResources?: Resource: any[];
+  initialResources?: Resource[];
   onResourceSelect?: (resource: Resource) => void;
   className?: string;
 }
@@ -36,7 +36,7 @@ export function ResourceLibrary({
   className = ''
 }: ResourceLibraryProps) {
   const { showToast } = useToast();
-  const [resources, setResources] = useState<Resource: any[]>(initialResources);
+  const [resources, setResources] = useState<Resource[]>(initialResources);
   const [loading, setLoading] = useState(true);
   const [error, setError] = useState('');
   
@@ -58,7 +58,7 @@ export function ResourceLibrary({
         }
         
         // Mock data for demonstration
-        const mockResources: Resource: any[] = [
+        const mockResources: Resource[] = [
           {
             id: '1',
             title: 'Mathematics: Algebra Fundamentals',
diff --git a/src/components/restorative-justice/community-building/community-building-activities.tsx b/src/components/restorative-justice/community-building/community-building-activities.tsx
index 933abd0..92c0c8e 100644
--- a/src/components/restorative-justice/community-building/community-building-activities.tsx
+++ b/src/components/restorative-justice/community-building/community-building-activities.tsx
@@ -56,21 +56,21 @@ interface Activity {
   title: string;
   description: string;
   category: ActivityCategory;
-  ageGroups: AgeGroup: any[];
+  ageGroups: AgeGroup[];
   timeRequired: TimeRequired;
   groupSize: GroupSize;
-  materials: string: any[];
-  steps: string: any[];
-  variations: string: any[];
-  objectives: string: any[];
-  facilitation_tips: string: any[];
+  materials: string[];
+  steps: string[];
+  variations: string[];
+  objectives: string[];
+  facilitation_tips: string[];
   evidence_base: string;
   rating: number;
   favorites: number;
 }
 
 // Sample activities data
-const sampleActivities: Activity: any[] = [
+const sampleActivities: Activity[] = [
   {
     id: '1',
     title: 'Community Circle: Hopes and Dreams',
@@ -205,8 +205,8 @@ const sampleActivities: Activity: any[] = [
 // Main component
 const CommunityBuildingActivities = () => {
   // State management
-  const [activities, setActivities] = useState<Activity: any[]>(sampleActivities);
-  const [filteredActivities, setFilteredActivities] = useState<Activity: any[]>(sampleActivities);
+  const [activities, setActivities] = useState<Activity[]>(sampleActivities);
+  const [filteredActivities, setFilteredActivities] = useState<Activity[]>(sampleActivities);
   const [selectedActivity, setSelectedActivity] = useState<Activity | null>(null);
   const [searchQuery, setSearchQuery] = useState('');
   const [categoryFilter, setCategoryFilter] = useState<ActivityCategory | 'all'>('all');
@@ -398,7 +398,7 @@ const CommunityBuildingActivities = () => {
   };
 
   // Format age groups for display
-  const formatAgeGroups = (ages: AgeGroup: any[]) => {
+  const formatAgeGroups = (ages: AgeGroup[]) => {
     const ageMap: Record<AgeGroup, string> = {
       'early-years': 'Early Years (3-5)',
       'primary': 'Primary (5-11)',
diff --git a/src/components/restorative-justice/outcome-measurement/outcome-measurement-tools.tsx b/src/components/restorative-justice/outcome-measurement/outcome-measurement-tools.tsx
index c59ee21..26fe9bb 100644
--- a/src/components/restorative-justice/outcome-measurement/outcome-measurement-tools.tsx
+++ b/src/components/restorative-justice/outcome-measurement/outcome-measurement-tools.tsx
@@ -81,7 +81,7 @@ interface Assessment {
   title: string;
   type: AssessmentType;
   setting: SettingType;
-  dimensions: DimensionType: any[];
+  dimensions: DimensionType[];
   createdAt: string;
   completedAt?: string;
   status: 'draft' | 'in-progress' | 'completed';
@@ -94,7 +94,7 @@ interface Dimension {
   name: string;
   description: string;
   icon: React.ReactNode;
-  tools: Tool: any[];
+  tools: Tool[];
 }
 
 interface Tool {
@@ -102,12 +102,12 @@ interface Tool {
   name: string;
   description: string;
   type: 'survey' | 'observation' | 'data-analysis' | 'qualitative';
-  targetAudience: string: any[];
+  targetAudience: string[];
   timeRequired: string;
 }
 
 // Mock data for dimensions
-const dimensions: Dimension: any[] = [
+const dimensions: Dimension[] = [
   {
     id: 'connectedness',
     name: 'School Connectedness & Community',
@@ -303,7 +303,7 @@ const dimensions: Dimension: any[] = [
 ];
 
 // Mock data for assessments
-const mockAssessments: Assessment: any[] = [
+const mockAssessments: Assessment[] = [
   {
     id: '1',
     title: 'Baseline Assessment - Oakwood Secondary',
@@ -354,14 +354,14 @@ export default function OutcomeMeasurementTools() {
   const { isOpen, onOpen, onClose } = useDisclosure();
   
   const [activeTab, setActiveTab] = useState(0);
-  const [assessments, setAssessments] = useState<Assessment: any[]>(mockAssessments);
-  const [selectedDimensions, setSelectedDimensions] = useState<string: any[]>([]);
+  const [assessments, setAssessments] = useState<Assessment[]>(mockAssessments);
+  const [selectedDimensions, setSelectedDimensions] = useState<string[]>([]);
   const [selectedAssessment, setSelectedAssessment] = useState<Assessment | null>(null);
   const [newAssessment, setNewAssessment] = useState({
     title: '',
     type: 'baseline' as AssessmentType,
     setting: 'secondary' as SettingType,
-    dimensions: [] as string: any: any[],
+    dimensions: [] as string[],
     targetGroup: ''
   });
   const [validationErrors, setValidationErrors] = useState<Record<string, string>>({});
diff --git a/src/components/restorative-justice/parent-education/parent-education-resources.tsx b/src/components/restorative-justice/parent-education/parent-education-resources.tsx
index 6c8604e..732b521 100644
--- a/src/components/restorative-justice/parent-education/parent-education-resources.tsx
+++ b/src/components/restorative-justice/parent-education/parent-education-resources.tsx
@@ -29,13 +29,13 @@ interface ParentResource {
   title: string;
   description: string;
   category: ResourceCategory;
-  ageGroups: AgeGroup: any[];
+  ageGroups: AgeGroup[];
   difficultyLevel: DifficultyLevel;
   content: string;
   videoUrl?: string;
   downloadUrl?: string;
   estimatedTime?: string;
-  tags: string: any[];
+  tags: string[];
   isFavorite: boolean;
 }
 
@@ -43,7 +43,7 @@ interface Module {
   id: string;
   title: string;
   description: string;
-  lessons: Lesson: any[];
+  lessons: Lesson[];
   completed: boolean;
   progress: number;
 }
@@ -61,16 +61,16 @@ interface FamilyActivity {
   id: string;
   title: string;
   description: string;
-  ageGroups: AgeGroup: any[];
-  materials: string: any[];
-  steps: string: any[];
-  tips: string: any[];
+  ageGroups: AgeGroup[];
+  materials: string[];
+  steps: string[];
+  tips: string[];
   estimatedTime: string;
   isFavorite: boolean;
 }
 
 // Mock data for parent resources
-const mockResources: ParentResource: any[] = [
+const mockResources: ParentResource[] = [
   {
     id: '1',
     title: 'Introduction to Restorative Approaches at Home',
@@ -212,7 +212,7 @@ const mockResources: ParentResource: any[] = [
 ];
 
 // Mock data for learning modules
-const mockModules: Module: any[] = [
+const mockModules: Module[] = [
   {
     id: '1',
     title: 'Foundations of Restorative Parenting',
@@ -282,7 +282,7 @@ const mockModules: Module: any[] = [
 ];
 
 // Mock data for family activities
-const mockActivities: FamilyActivity: any[] = [
+const mockActivities: FamilyActivity[] = [
   {
     id: '1',
     title: 'Family Circle Check-In',
@@ -334,9 +334,9 @@ const mockActivities: FamilyActivity: any[] = [
 ];
 
 export default function ParentEducationResources() {
-  const [resources, setResources] = useState<ParentResource: any[]>(mockResources);
-  const [modules, setModules] = useState<Module: any[]>(mockModules);
-  const [activities, setActivities] = useState<FamilyActivity: any[]>(mockActivities);
+  const [resources, setResources] = useState<ParentResource[]>(mockResources);
+  const [modules, setModules] = useState<Module[]>(mockModules);
+  const [activities, setActivities] = useState<FamilyActivity[]>(mockActivities);
   const [searchQuery, setSearchQuery] = useState('');
   const [selectedAgeGroup, setSelectedAgeGroup] = useState<string>('all');
   const [selectedCategory, setSelectedCategory] = useState<string>('all');
diff --git a/src/components/restorative-justice/reflection-prompts/age-appropriate-reflection-prompts.tsx b/src/components/restorative-justice/reflection-prompts/age-appropriate-reflection-prompts.tsx
index 538b529..4322431 100644
--- a/src/components/restorative-justice/reflection-prompts/age-appropriate-reflection-prompts.tsx
+++ b/src/components/restorative-justice/reflection-prompts/age-appropriate-reflection-prompts.tsx
@@ -62,10 +62,10 @@ interface ReflectionPrompt {
   ageGroup: string;
   category: string;
   promptText: string;
-  supportingQuestions: string: any[];
+  supportingQuestions: string[];
   visualSupports: boolean;
   simplifiedLanguage: boolean;
-  visualAids?: string: any[];
+  visualAids?: string[];
 }
 
 /**
@@ -97,14 +97,14 @@ const AgeAppropriateReflectionPrompts = () => {
     visualSupports: false,
     simplifiedLanguage: false
   });
-  const [savedPrompts, setSavedPrompts] = useState<ReflectionPrompt: any[]>([]);
+  const [savedPrompts, setSavedPrompts] = useState<ReflectionPrompt[]>([]);
   const [isLoading, setIsLoading] = useState(false);
   const [searchTerm, setSearchTerm] = useState("");
   const [filterAgeGroup, setFilterAgeGroup] = useState("all");
   const [filterCategory, setFilterCategory] = useState("all");
 
   // Predefined reflection prompts based on restorative justice research and developmental psychology
-  const predefinedPrompts: ReflectionPrompt: any[] = [
+  const predefinedPrompts: ReflectionPrompt[] = [
     // Early Years (3-5)
     {
       id: "early-1",
@@ -410,7 +410,7 @@ const AgeAppropriateReflectionPrompts = () => {
   };
 
   // Handle custom prompt changes
-  const handleCustomPromptChange = (field: keyof ReflectionPrompt, value: string | boolean | string: any: any[]) => {
+  const handleCustomPromptChange = (field: keyof ReflectionPrompt, value: string | boolean | string[]) => {
     setCustomPrompt(prev => ({
       ...prev,
       [field]: value
diff --git a/src/components/restorative-justice/staff-training/staff-training-modules.tsx b/src/components/restorative-justice/staff-training/staff-training-modules.tsx
index 385a415..74a3793 100644
--- a/src/components/restorative-justice/staff-training/staff-training-modules.tsx
+++ b/src/components/restorative-justice/staff-training/staff-training-modules.tsx
@@ -77,8 +77,8 @@ interface Module {
   description: string;
   duration: string;
   level: 'Beginner' | 'Intermediate' | 'Advanced';
-  sections: Section: any[];
-  resources: Resource: any[];
+  sections: Section[];
+  resources: Resource[];
   completed: boolean;
   progress: number;
 }
@@ -104,21 +104,21 @@ interface Quiz {
   id: string;
   moduleId: string;
   title: string;
-  questions: Question: any[];
+  questions: Question[];
   passingScore: number;
 }
 
 interface Question {
   id: string;
   text: string;
-  options: string: any[];
+  options: string[];
   correctAnswer: number;
 }
 
 interface UserProgress {
   userId: string;
   moduleId: string;
-  completedSections: string: any[];
+  completedSections: string[];
   quizScores: Record<string, number>;
   certificateIssued: boolean;
   lastAccessed: string;
@@ -131,8 +131,8 @@ const StaffTrainingModules: React.FC = () => {
   const { isOpen, onOpen, onClose } = useDisclosure();
   
   const [activeTab, setActiveTab] = useState(0);
-  const [modules, setModules] = useState<Module: any[]>([]);
-  const [userProgress, setUserProgress] = useState<UserProgress: any[]>([]);
+  const [modules, setModules] = useState<Module[]>([]);
+  const [userProgress, setUserProgress] = useState<UserProgress[]>([]);
   const [currentModule, setCurrentModule] = useState<Module | null>(null);
   const [currentSection, setCurrentSection] = useState<Section | null>(null);
   const [currentQuiz, setCurrentQuiz] = useState<Quiz | null>(null);
diff --git a/src/components/special-needs/executive-dysfunction/task-organizer.tsx b/src/components/special-needs/executive-dysfunction/task-organizer.tsx
index 60931a8..7439ba1 100644
--- a/src/components/special-needs/executive-dysfunction/task-organizer.tsx
+++ b/src/components/special-needs/executive-dysfunction/task-organizer.tsx
@@ -41,10 +41,10 @@ interface Task {
   dueDate: string;
   priority: 'low' | 'medium' | 'high';
   status: 'todo' | 'in-progress' | 'done';
-  steps: TaskStep: any[];
+  steps: TaskStep[];
   timeEstimate: number; // in minutes
   visualReminder?: string;
-  tags: string: any[];
+  tags: string[];
   isExpanded: boolean;
 }
 
@@ -56,8 +56,8 @@ interface TaskStep {
 
 interface TaskOrganizerProps {
   userId?: string;
-  initialTasks?: Task: any[];
-  onTasksChange?: (tasks: Task: any[]) => void;
+  initialTasks?: Task[];
+  onTasksChange?: (tasks: Task[]) => void;
   className?: string;
 }
 
@@ -67,7 +67,7 @@ export default function TaskOrganizer({
   onTasksChange,
   className
 }: TaskOrganizerProps) {
-  const [tasks, setTasks] = useState<Task: any[]>(initialTasks || []);
+  const [tasks, setTasks] = useState<Task[]>(initialTasks || []);
   const [editingTaskId, setEditingTaskId] = useState<string | null>(null);
   const [newTask, setNewTask] = useState<Partial<Task>>({
     title: '',
@@ -119,7 +119,7 @@ export default function TaskOrganizer({
     }
   };
   
-  const saveTasks = async (updatedTasks: Task: any[]) => {
+  const saveTasks = async (updatedTasks: Task[]) => {
     if (!userId) return;
     
     try {
diff --git a/src/components/special-needs/personalized-interventions/personalized-interventions-engine.tsx b/src/components/special-needs/personalized-interventions/personalized-interventions-engine.tsx
index c468ea2..eabc93c 100644
--- a/src/components/special-needs/personalized-interventions/personalized-interventions-engine.tsx
+++ b/src/components/special-needs/personalized-interventions/personalized-interventions-engine.tsx
@@ -42,15 +42,15 @@ interface LearningProfile {
   id: string;
   name: string;
   learningStyle: string;
-  strengths: string: any[];
-  challenges: string: any[];
+  strengths: string[];
+  challenges: string[];
   preferences: {
     visual: number;
     auditory: number;
     kinesthetic: number;
     reading: number;
   };
-  accommodations: string: any[];
+  accommodations: string[];
 }
 
 interface Intervention {
@@ -58,8 +58,8 @@ interface Intervention {
   name: string;
   description: string;
   targetArea: string;
-  strategies: string: any[];
-  resources: string: any[];
+  strategies: string[];
+  resources: string[];
   duration: string;
   frequency: string;
   progress: number;
@@ -95,7 +95,7 @@ export function PersonalizedInterventionsEngine() {
   const [activeTab, setActiveTab] = useState('profiles');
   
   // Sample learning profiles
-  const learningProfiles: LearningProfile: any[] = [
+  const learningProfiles: LearningProfile[] = [
     {
       id: 'profile1',
       name: 'Visual Learner Profile',
@@ -156,7 +156,7 @@ export function PersonalizedInterventionsEngine() {
   ];
   
   // Sample interventions
-  const sampleInterventions: Intervention: any[] = [
+  const sampleInterventions: Intervention[] = [
     {
       id: 'int1',
       name: 'Reading Comprehension Enhancement',
diff --git a/src/components/special-needs/progress-monitoring/progress-monitoring-engine.tsx b/src/components/special-needs/progress-monitoring/progress-monitoring-engine.tsx
index 9374f0e..d5a13b5 100644
--- a/src/components/special-needs/progress-monitoring/progress-monitoring-engine.tsx
+++ b/src/components/special-needs/progress-monitoring/progress-monitoring-engine.tsx
@@ -46,7 +46,7 @@ interface Goal {
   target: number;
   progress: number;
   status: 'not-started' | 'in-progress' | 'achieved' | 'discontinued';
-  notes: string: any[];
+  notes: string[];
 }
 
 interface DataPoint {
@@ -60,7 +60,7 @@ export function ProgressMonitoringEngine() {
   const { toast } = useToast();
   
   // State for goals and data points
-  const [goals, setGoals] = useState<Goal: any[]>([]);
+  const [goals, setGoals] = useState<Goal[]>([]);
   const [selectedGoal, setSelectedGoal] = useState<Goal | null>(null);
   const [dataPoints, setDataPoints] = useState<DataPoint[]>([]);
   
@@ -72,7 +72,7 @@ export function ProgressMonitoringEngine() {
   const [statusFilter, setStatusFilter] = useState('all');
   
   // Sample goals data
-  const sampleGoals: Goal: any[] = [
+  const sampleGoals: Goal[] = [
     {
       id: 'goal1',
       name: 'Reading Fluency',
@@ -156,7 +156,7 @@ export function ProgressMonitoringEngine() {
   ];
   
   // Sample data points for the first goal
-  const sampleDataPoints: DataPoint: any[] = [
+  const sampleDataPoints: DataPoint[] = [
     {
       id: 'dp1',
       date: new Date(2025, 4, 1),
diff --git a/src/components/special-needs/sensory-regulation/sensory-regulation-engine.tsx b/src/components/special-needs/sensory-regulation/sensory-regulation-engine.tsx
index 33a2de6..5228985 100644
--- a/src/components/special-needs/sensory-regulation/sensory-regulation-engine.tsx
+++ b/src/components/special-needs/sensory-regulation/sensory-regulation-engine.tsx
@@ -46,11 +46,11 @@ interface SensoryActivity {
   category: string;
   duration: string;
   intensity: number;
-  suitableFor: string: any[];
-  materials: string: any[];
-  steps: string: any[];
-  benefits: string: any[];
-  cautions: string: any[];
+  suitableFor: string[];
+  materials: string[];
+  steps: string[];
+  benefits: string[];
+  cautions: string[];
   imageUrl?: string;
 }
 
@@ -71,7 +71,7 @@ export function SensoryRegulationEngine() {
   const { toast } = useToast();
   
   // State for activities and profiles
-  const [activities, setActivities] = useState<SensoryActivity: any[]>([]);
+  const [activities, setActivities] = useState<SensoryActivity[]>([]);
   const [selectedActivity, setSelectedActivity] = useState(null);
   const [sensoryProfile, setSensoryProfile] = useState<SensoryProfile | null>(null);
   
@@ -83,7 +83,7 @@ export function SensoryRegulationEngine() {
   const [intensityFilter, setIntensityFilter] = useState('all');
   
   // Sample sensory activities
-  const sampleActivities: SensoryActivity: any[] = [
+  const sampleActivities: SensoryActivity[] = [
     {
       id: 'act1',
       name: 'Deep Pressure Squeeze',
diff --git a/src/components/student-voice/anonymous-suggestion-system.tsx b/src/components/student-voice/anonymous-suggestion-system.tsx
index 7f92a49..8a9d55b 100644
--- a/src/components/student-voice/anonymous-suggestion-system.tsx
+++ b/src/components/student-voice/anonymous-suggestion-system.tsx
@@ -57,8 +57,8 @@ export default function AnonymousSuggestionSystem() {
   const { toast } = useToast();
   const [activeTab, setActiveTab] = useState('submit');
   const [isLoading, setIsLoading] = useState(false);
-  const [suggestions, setSuggestions] = useState<Suggestion: any[]>([]);
-  const [filteredSuggestions, setFilteredSuggestions] = useState<Suggestion: any[]>([]);
+  const [suggestions, setSuggestions] = useState<Suggestion[]>([]);
+  const [filteredSuggestions, setFilteredSuggestions] = useState<Suggestion[]>([]);
   const [selectedCategory, setSelectedCategory] = useState('all');
   const [selectedStatus, setSelectedStatus] = useState('all');
   const [selectedVisibility, setSelectedVisibility] = useState('all');
@@ -82,7 +82,7 @@ export default function AnonymousSuggestionSystem() {
   // Load mock data on component mount
   React.useEffect(() => {
     // Mock suggestions
-    const mockSuggestions: Suggestion: any[] = [
+    const mockSuggestions: Suggestion[] = [
       {
         id: '1',
         category: 'environment',
diff --git a/src/components/student-voice/multi-modal-feedback-collection.tsx b/src/components/student-voice/multi-modal-feedback-collection.tsx
index 995ae54..825d6ef 100644
--- a/src/components/student-voice/multi-modal-feedback-collection.tsx
+++ b/src/components/student-voice/multi-modal-feedback-collection.tsx
@@ -114,8 +114,8 @@ export default function MultiModalFeedbackCollection() {
   const [selectedLanguage, setSelectedLanguage] = useState('en');
   const [translatedText, setTranslatedText] = useState('');
   const [isTranslating, setIsTranslating] = useState(false);
-  const [feedbackEntries, setFeedbackEntries] = useState<FeedbackEntry: any[]>([]);
-  const [transcriptionHistory, setTranscriptionHistory] = useState<TranscriptionEntry: any[]>([]);
+  const [feedbackEntries, setFeedbackEntries] = useState<FeedbackEntry[]>([]);
+  const [transcriptionHistory, setTranscriptionHistory] = useState<TranscriptionEntry[]>([]);
   const [isLoading, setIsLoading] = useState(false);
   const [showTranslation, setShowTranslation] = useState(false);
   
@@ -146,7 +146,7 @@ export default function MultiModalFeedbackCollection() {
   // Load mock data on component mount
   useEffect(() => {
     // Mock feedback entries
-    const mockFeedbackEntries: FeedbackEntry: any[] = [
+    const mockFeedbackEntries: FeedbackEntry[] = [
       {
         id: '1',
         studentName: 'Anonymous',
@@ -201,7 +201,7 @@ export default function MultiModalFeedbackCollection() {
     ];
     
     // Mock transcription history
-    const mockTranscriptionHistory: TranscriptionEntry: any[] = [
+    const mockTranscriptionHistory: TranscriptionEntry[] = [
       {
         id: '1',
         originalText: 'Today we will learn about photosynthesis and how plants convert sunlight into energy.',
diff --git a/src/components/student-voice/transcription-translation-system.tsx b/src/components/student-voice/transcription-translation-system.tsx
index 3086bf6..d5de285 100644
--- a/src/components/student-voice/transcription-translation-system.tsx
+++ b/src/components/student-voice/transcription-translation-system.tsx
@@ -74,8 +74,8 @@ export default function TranscriptionTranslationSystem() {
   const [transcribedText, setTranscribedText] = useState("");
   const [isTranscribing, setIsTranscribing] = useState(false);
   const [isTranslating, setIsTranslating] = useState(false);
-  const [transcriptionHistory, setTranscriptionHistory] = useState<TranscriptionEntry: any[]>([]);
-  const [vocabularyList, setVocabularyList] = useState<VocabularyItem: any[]>([]);
+  const [transcriptionHistory, setTranscriptionHistory] = useState<TranscriptionEntry[]>([]);
+  const [vocabularyList, setVocabularyList] = useState<VocabularyItem[]>([]);
   const [isLoading, setIsLoading] = useState(false);
   const [isLiveTranscribing, setIsLiveTranscribing] = useState(false);
   const [liveTranscription, setLiveTranscription] = useState("");
@@ -104,7 +104,7 @@ export default function TranscriptionTranslationSystem() {
   // Load mock data on component mount
   useEffect(() => {
     // Mock transcription history
-    const mockTranscriptionHistory: TranscriptionEntry: any[] = [
+    const mockTranscriptionHistory: TranscriptionEntry[] = [
       {
         id: '1',
         originalText: 'Today we will learn about photosynthesis and how plants convert sunlight into energy.',
@@ -138,7 +138,7 @@ export default function TranscriptionTranslationSystem() {
     ];
     
     // Mock vocabulary list
-    const mockVocabularyList: VocabularyItem: any[] = [
+    const mockVocabularyList: VocabularyItem[] = [
       {
         id: '1',
         term: 'Photosynthesis',
diff --git a/src/components/theme-provider.tsx b/src/components/theme-provider.tsx
index ca91576..16c7e0e 100644
--- a/src/components/theme-provider.tsx
+++ b/src/components/theme-provider.tsx
@@ -47,7 +47,7 @@ const initialState: ThemeProviderState = {
 const ThemeProviderContext = createContext<ThemeProviderState>(initialState);
 
 // Helper function to merge class names
-export function cn(...inputs: ClassValue: any[]) {
+export function cn(...inputs: ClassValue[]) {
   return twMerge(clsx(inputs));
 }
 
diff --git a/src/components/ui/AccessibilityControls.tsx b/src/components/ui/AccessibilityControls.tsx
index f38febc..a32cf73 100644
--- a/src/components/ui/AccessibilityControls.tsx
+++ b/src/components/ui/AccessibilityControls.tsx
@@ -73,7 +73,7 @@ const AccessibilityControls: React.FC<AccessibilityControlsProps> = ({
   };
   
   // Handle font size change
-  const handleFontSizeChange = (value: number: any[]) => {
+  const handleFontSizeChange = (value: number[]) => {
     setFontSize(value[0]);
   };
   
diff --git a/src/components/ui/AchievementCard.tsx b/src/components/ui/AchievementCard.tsx
index 736c1f8..5b6b26a 100644
--- a/src/components/ui/AchievementCard.tsx
+++ b/src/components/ui/AchievementCard.tsx
@@ -290,7 +290,7 @@ const AchievementCard: React.FC<AchievementCardProps> = ({
  * with filtering options.
  */
 export const AchievementGallery: React.FC<{
-  achievements: AchievementCardProps: any[];
+  achievements: AchievementCardProps[];
   className?: string;
 }> = ({ achievements, className }) => {
   const { ageGroup } = useTheme();
diff --git a/src/components/ui/InteractiveGuidance.tsx b/src/components/ui/InteractiveGuidance.tsx
index c05f0c1..418c5af 100644
--- a/src/components/ui/InteractiveGuidance.tsx
+++ b/src/components/ui/InteractiveGuidance.tsx
@@ -9,7 +9,7 @@ interface Step {
 }
 
 interface InteractiveGuidanceProps {
-  steps: Step: any[];
+  steps: Step[];
   onComplete?: () => void;
   initialStep?: number;
   showProgress?: boolean;
diff --git a/src/components/ui/ProgressTracking.tsx b/src/components/ui/ProgressTracking.tsx
index 66b3542..dde0c31 100644
--- a/src/components/ui/ProgressTracking.tsx
+++ b/src/components/ui/ProgressTracking.tsx
@@ -26,9 +26,9 @@ interface Milestone {
 
 interface ProgressData {
   overall: number;
-  modules: ProgressModule: any[];
-  recentAchievements: Achievement: any[];
-  nextMilestones: Milestone: any[];
+  modules: ProgressModule[];
+  recentAchievements: Achievement[];
+  nextMilestones: Milestone[];
 }
 
 interface ProgressTrackingProps {
diff --git a/src/components/ui/accordion.tsx b/src/components/ui/accordion.tsx
index 29bb656..fecd830 100644
--- a/src/components/ui/accordion.tsx
+++ b/src/components/ui/accordion.tsx
@@ -4,13 +4,13 @@ import React, { useState } from 'react';
 
 interface AccordionProps {
   children: React.ReactNode;
-  defaultExpanded?: string: any[];
+  defaultExpanded?: string[];
   allowMultiple?: boolean;
   className?: string;
 }
 
 interface AccordionContextType {
-  expandedItems: string: any[];
+  expandedItems: string[];
   toggleItem: (id: string) => void;
   allowMultiple: boolean;
 }
@@ -23,7 +23,7 @@ export function Accordion({
   allowMultiple = false,
   className = '',
 }: AccordionProps) {
-  const [expandedItems, setExpandedItems] = useState<string: any[]>(defaultExpanded);
+  const [expandedItems, setExpandedItems] = useState<string[]>(defaultExpanded);
 
   const toggleItem = (id: string) => {
     if (expandedItems.includes(id)) {
diff --git a/src/lib/accessibility-utils.tsx b/src/lib/accessibility-utils.tsx
index f76138f..f9d8952 100644
--- a/src/lib/accessibility-utils.tsx
+++ b/src/lib/accessibility-utils.tsx
@@ -1004,9 +1004,9 @@ export const AccessibleTabs: React.FC<{
 export const AccessibleAccordion: React.FC<{
   items: { id: string; title: string; content: React.ReactNode }[];
   allowMultiple?: boolean;
-  defaultOpen?: string: any[];
+  defaultOpen?: string[];
 }> = ({ items, allowMultiple = false, defaultOpen = [] }) => {
-  const [openItems, setOpenItems] = useState<string: any[]>(defaultOpen);
+  const [openItems, setOpenItems] = useState<string[]>(defaultOpen);
 
   const toggleItem = (itemId: string) => {
     if (allowMultiple) {
@@ -1457,7 +1457,7 @@ export const AccessibleFileUpload: React.FC<{
 }) => {
   const [dragActive, setDragActive] = useState(false);
   const [localError, setLocalError] = useState<string | undefined>(error);
-  const [selectedFiles, setSelectedFiles] = useState<File: any[]>([]);
+  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);
   
   const fieldId = `file-${id}`;
   const errorId = `${fieldId}-error`;
diff --git a/src/lib/adaptive-complexity/adaptive-complexity-service.ts b/src/lib/adaptive-complexity/adaptive-complexity-service.ts
index 7abda78..4035c0f 100644
--- a/src/lib/adaptive-complexity/adaptive-complexity-service.ts
+++ b/src/lib/adaptive-complexity/adaptive-complexity-service.ts
@@ -319,7 +319,7 @@ export class AdaptiveComplexityService {
    * Calculate a performance score based on multiple metrics
    */
   private calculatePerformanceScore(
-    performanceHistory: PerformanceMetric: any[],
+    performanceHistory: PerformanceMetric[],
     learningRate: number,
     challengePreference: number
   ): number {
@@ -384,7 +384,7 @@ export class AdaptiveComplexityService {
     );
     
     // Calculate score improvement over time
-    const improvements: number: any[] = [];
+    const improvements: number[] = [];
     for (let i = 1; i < sortedPerformance.length; i++) {
       const timeDiff = (sortedPerformance[i].timestamp.getTime() - sortedPerformance[i-1].timestamp.getTime()) / (1000 * 60 * 60); // hours
       const scoreDiff = sortedPerformance[i].score - sortedPerformance[i-1].score;
@@ -428,7 +428,7 @@ export class AdaptiveComplexityService {
     if (performances.length < 3) return;
     
     // Group performances by content ID to analyse patterns
-    const contentPerformance: Record<string, PerformanceMetric: any: any[]> = {};
+    const contentPerformance: Record<string, PerformanceMetric[]> = {};
     
     performances.forEach(perf => {
       if (!contentPerformance[perf.contentId]) {
@@ -437,8 +437,8 @@ export class AdaptiveComplexityService {
       contentPerformance[perf.contentId].push(perf);
     });
     
-    const strengths: string: any[] = [];
-    const weaknesses: string: any[] = [];
+    const strengths: string[] = [];
+    const weaknesses: string[] = [];
     
     // Analyse each content area
     Object.entries(contentPerformance).forEach(([contentId, perfs]) => {
@@ -521,8 +521,8 @@ export class AdaptiveComplexityService {
   private generateNextStepsRecommendations(
     previousLevel: ComplexityLevel,
     newLevel: ComplexityLevel
-  ): string: any: any[] {
-    const recommendations: string: any[] = [];
+  ): string[] {
+    const recommendations: string[] = [];
     
     // Direction of change
     const isIncrease = ComplexityLevelValue[newLevel] > ComplexityLevelValue[previousLevel];
diff --git a/src/lib/adaptive-complexity/types.ts b/src/lib/adaptive-complexity/types.ts
index 0a5dbc7..0e381d2 100644
--- a/src/lib/adaptive-complexity/types.ts
+++ b/src/lib/adaptive-complexity/types.ts
@@ -64,7 +64,7 @@ export interface SubjectPreference {
   currentComplexityLevel: ComplexityLevel;
   recommendedComplexityLevel: ComplexityLevel;
   confidenceScore: number; // How confident the system is in this recommendation (0-1)
-  performanceHistory: PerformanceMetric: any[];
+  performanceHistory: PerformanceMetric[];
   skillAreas: Record<string, SkillAreaProfile>;
 }
 
@@ -76,9 +76,9 @@ export interface SkillAreaProfile {
   currentComplexityLevel: ComplexityLevel;
   recommendedComplexityLevel: ComplexityLevel;
   confidenceScore: number;
-  performanceHistory: PerformanceMetric: any[];
-  strengths: string: any[]; // Specific strengths identified within this skill area
-  areasForImprovement: string: any[]; // Specific areas needing improvement
+  performanceHistory: PerformanceMetric[];
+  strengths: string[]; // Specific strengths identified within this skill area
+  areasForImprovement: string[]; // Specific areas needing improvement
 }
 
 /**
@@ -89,12 +89,12 @@ export interface AdaptiveContent {
   title: string;
   description: string;
   subjectArea: string;
-  skillAreas: string: any[];
+  skillAreas: string[];
   complexityLevel: ComplexityLevel;
-  prerequisites: string: any[]; // IDs of content that should be completed first
-  learningObjectives: string: any[];
+  prerequisites: string[]; // IDs of content that should be completed first
+  learningObjectives: string[];
   estimatedTimeMinutes: number;
-  adaptiveElements: AdaptiveElement: any[];
+  adaptiveElements: AdaptiveElement[];
 }
 
 /**
@@ -104,7 +104,7 @@ export interface AdaptiveElement {
   id: string;
   elementType: 'text' | 'question' | 'activity' | 'resource' | 'assessment';
   complexityVariants: Record<ComplexityLevel, string>; // Content variant for each complexity level
-  adaptationRules?: AdaptationRule: any[]; // Optional rules for adapting this element
+  adaptationRules?: AdaptationRule[]; // Optional rules for adapting this element
 }
 
 /**
@@ -135,7 +135,7 @@ export interface ComplexityAdjustmentResult {
   adjustmentReason: string;
   confidenceScore: number;
   timestamp: Date;
-  recommendedNextSteps?: string: any[];
+  recommendedNextSteps?: string[];
 }
 
 /**
diff --git a/src/lib/ai/azure-cognitive-service.ts b/src/lib/ai/azure-cognitive-service.ts
index d96d033..52ca4d5 100644
--- a/src/lib/ai/azure-cognitive-service.ts
+++ b/src/lib/ai/azure-cognitive-service.ts
@@ -100,8 +100,8 @@ export class AzureCognitiveService {
    * Analyse image and extract information
    */
   async analyzeImage(imageUrl: string, options: {
-    visualFeatures?: string: any[];
-    details?: string: any[];
+    visualFeatures?: string[];
+    details?: string[];
     language?: string;
   } = {}) {
     try {
@@ -369,8 +369,8 @@ export class AzureCognitiveService {
     targetAge: number,
     wordsPerSentence: number,
     syllablesPerWord: number
-  ): string: any: any[] {
-    const recommendations: string: any[] = [];
+  ): string[] {
+    const recommendations: string[] = [];
     const targetGradeLevel = targetAge - 5;
     
     if (Math.abs(gradeLevel - targetGradeLevel) > 2) {
diff --git a/src/lib/ai/guidanceService.ts b/src/lib/ai/guidanceService.ts
index 0531c97..b7e559e 100644
--- a/src/lib/ai/guidanceService.ts
+++ b/src/lib/ai/guidanceService.ts
@@ -115,7 +115,7 @@ export class AIGuidanceService {
   /**
    * Get relevant learning goals for a subject
    */
-  private getRelevantLearningGoals(learnerProfile: LearnerProfile, subject: SubjectArea): LearningGoal: any: any[] {
+  private getRelevantLearningGoals(learnerProfile: LearnerProfile, subject: SubjectArea): LearningGoal[] {
     return learnerProfile.learningGoals.filter(goal => 
       goal.subject === subject && 
       (goal.status === 'not_started' || goal.status === 'in_progress')
@@ -130,7 +130,7 @@ export class AIGuidanceService {
     subject: SubjectArea,
     dominantLearningStyle: LearningStyle,
     currentProficiency: number,
-    relevantGoals: LearningGoal: any[],
+    relevantGoals: LearningGoal[],
     duration: number
   ): Promise<LearningPath> {
     // This would typically involve a call to an AI service or recommendation engine
@@ -186,7 +186,7 @@ export class AIGuidanceService {
     learnerProfile: LearnerProfile,
     currentLearningPath?: LearningPath,
     count: number = 3
-  ): Promise<ContentSuggestion: any[]> {
+  ): Promise<ContentSuggestion[]> {
     // Analyse learner profile to determine appropriate content
     const dominantLearningStyle = this.determineDominantLearningStyle(learnerProfile);
     const interests = this.identifyTopInterests(learnerProfile);
@@ -208,7 +208,7 @@ export class AIGuidanceService {
   /**
    * Identify top interests from learner profile
    */
-  private identifyTopInterests(learnerProfile: LearnerProfile): SubjectArea: any: any[] {
+  private identifyTopInterests(learnerProfile: LearnerProfile): SubjectArea[] {
     const interests = learnerProfile.subjectInterests;
     
     if (!interests || Object.keys(interests).length === 0) {
@@ -225,7 +225,7 @@ export class AIGuidanceService {
   /**
    * Identify areas for improvement from learner profile
    */
-  private identifyAreasForImprovement(learnerProfile: LearnerProfile): SubjectArea: any: any[] {
+  private identifyAreasForImprovement(learnerProfile: LearnerProfile): SubjectArea[] {
     const strengths = learnerProfile.subjectStrengths;
     
     if (!strengths || Object.keys(strengths).length === 0) {
@@ -245,15 +245,15 @@ export class AIGuidanceService {
   private async createContentSuggestions(
     learnerProfile: LearnerProfile,
     dominantLearningStyle: LearningStyle,
-    interests: SubjectArea: any[],
-    areasForImprovement: SubjectArea: any[],
+    interests: SubjectArea[],
+    areasForImprovement: SubjectArea[],
     currentLearningPath?: LearningPath,
     count: number = 3
-  ): Promise<ContentSuggestion: any[]> {
+  ): Promise<ContentSuggestion[]> {
     // This would typically involve a call to a content recommendation service
     // For now, we'll simulate this with a placeholder implementation
     
-    const suggestions: ContentSuggestion: any[] = [];
+    const suggestions: ContentSuggestion[] = [];
     
     // Add suggestions based on learning style
     suggestions.push({
@@ -419,16 +419,16 @@ export class AIGuidanceService {
    */
   public async monitorProgress(
     learnerProfile: LearnerProfile,
-    recentActivities: any: any[],
-    currentLearningPaths: LearningPath: any[]
-  ): Promise<InterventionAlert: any[]> {
+    recentActivities: any[],
+    currentLearningPaths: LearningPath[]
+  ): Promise<InterventionAlert[]> {
     // Analyse recent activities and learning paths to identify potential issues
     const performanceIssues = this.identifyPerformanceIssues(learnerProfile, recentActivities);
     const engagementIssues = this.identifyEngagementIssues(learnerProfile, recentActivities);
     const goalIssues = this.identifyGoalsAtRisk(learnerProfile, currentLearningPaths);
     
     // Generate intervention alerts based on identified issues
-    const alerts: InterventionAlert: any[] = [];
+    const alerts: InterventionAlert[] = [];
     
     // Add performance alerts
     performanceIssues.forEach(issue => {
@@ -452,11 +452,12 @@ export class AIGuidanceService {
           },
           {
             actionType: 'practise',
-            description: `Complete additional practise exercises in ${this.getSubjectName(issue.subject)}.`
+            description: `Complete additional practise exercises in ${this.getSubjectName(issue.subject)}.`,
+            resources: []
           }
         ],
         createdAt: new Date(),
-        acknowledged: false
+        status: 'open'
       });
     });
     
@@ -465,27 +466,28 @@ export class AIGuidanceService {
       alerts.push({
         id: `alert-engagement-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,
         learnerId: learnerProfile.id,
-        alertType: 'engagement_drop',
+        alertType: 'low_engagement',
         severity: issue.severity,
-        title: `Engagement Alert`,
-        description: `There has been a ${issue.severity} drop in engagement with the platform.`,
+        title: `Engagement Alert: ${issue.subject || 'General'}`,
+        description: issue.subject 
+          ? `Engagement in ${this.getSubjectName(issue.subject)} has been low for ${issue.daysSinceLastActivity} days.`
+          : `Overall platform engagement has been low for ${issue.daysSinceLastActivity} days.`,
         metrics: {
-          previousEngagement: issue.previousEngagement,
-          currentEngagement: issue.currentEngagement,
-          dropPercentage: issue.dropPercentage
+          daysSinceLastActivity: issue.daysSinceLastActivity,
+          averageSessionDuration: issue.averageSessionDuration,
+          completionRate: issue.completionRate
         },
         suggestedActions: [
           {
-            actionType: 'content_change',
-            description: `Try different types of content that may be more engaging.`
-          },
-          {
-            actionType: 'goal_review',
-            description: `Review and possibly adjust learning goals to increase motivation.`
+            actionType: 'explore',
+            description: issue.subject 
+              ? `Explore these engaging ${this.getSubjectName(issue.subject)} resources.`
+              : `Explore these recommended resources based on your interests.`,
+            resources: []
           }
         ],
         createdAt: new Date(),
-        acknowledged: false
+        status: 'open'
       });
     });
     
@@ -496,25 +498,22 @@ export class AIGuidanceService {
         learnerId: learnerProfile.id,
         alertType: 'goal_at_risk',
         severity: issue.severity,
-        title: `Goal Alert: ${issue.goal.title}`,
-        description: `The goal "${issue.goal.title}" is at risk of not being completed by the target date.`,
+        title: `Goal Alert: ${issue.goalTitle}`,
+        description: `Your goal "${issue.goalTitle}" is at risk of not being completed by the target date.`,
         metrics: {
-          currentProgress: issue.goal.progress,
           daysRemaining: issue.daysRemaining,
+          completionPercentage: issue.completionPercentage,
           requiredDailyProgress: issue.requiredDailyProgress
         },
         suggestedActions: [
           {
-            actionType: 'schedule_adjustment',
-            description: `Allocate more time to activities related to this goal.`
-          },
-          {
-            actionType: 'goal_adjustment',
-            description: `Consider adjusting the target date or scope of the goal.`
+            actionType: 'focus',
+            description: `Focus on these activities to get back on track with your goal.`,
+            resources: issue.suggestedResources
           }
         ],
         createdAt: new Date(),
-        acknowledged: false
+        status: 'open'
       });
     });
     
@@ -522,111 +521,148 @@ export class AIGuidanceService {
   }
   
   /**
-   * Identify performance issues based on recent activities
+   * Identify performance issues from recent activities
    */
-  private identifyPerformanceIssues(learnerProfile: LearnerProfile, recentActivities: any: any[])[] {
-    // This would typically involve analysing assessment results over time
-    // For now, we'll return a placeholder implementation
+  private identifyPerformanceIssues(learnerProfile: LearnerProfile, recentActivities: any[]): any[] {
+    // This would typically involve complex analysis of performance trends
+    // For now, we'll simulate this with a placeholder implementation
     
-    // In a real implementation, this would:
-    // 1. Compare recent assessment scores with historical performance
-    // 2. Identify significant drops in performance
-    // 3. Determine the severity of the issues
+    const issues: any[] = [];
     
     // Placeholder implementation
-    return [];
+    if (recentActivities.length > 0) {
+      // Simulate finding a performance issue in mathematics
+      issues.push({
+        subject: SubjectArea.MATHEMATICS,
+        severity: 'moderate',
+        previousScore: 75,
+        currentScore: 60,
+        dropPercentage: 20,
+        conceptsToReview: ['Fractions', 'Decimals', 'Percentages']
+      });
+    }
+    
+    return issues;
   }
   
   /**
-   * Identify engagement issues based on recent activities
+   * Identify engagement issues from recent activities
    */
-  private identifyEngagementIssues(learnerProfile: LearnerProfile, recentActivities: any: any[])[] {
-    // This would typically involve analysing platform usage patterns
-    // For now, we'll return a placeholder implementation
+  private identifyEngagementIssues(learnerProfile: LearnerProfile, recentActivities: any[]): any[] {
+    // This would typically involve analysis of engagement patterns
+    // For now, we'll simulate this with a placeholder implementation
     
-    // In a real implementation, this would:
-    // 1. Compare recent engagement metrics with historical patterns
-    // 2. Identify significant drops in engagement
-    // 3. Determine the severity of the issues
+    const issues: any[] = [];
     
     // Placeholder implementation
-    return [];
+    if (recentActivities.length === 0) {
+      // Simulate finding a general engagement issue
+      issues.push({
+        subject: null,
+        severity: 'high',
+        daysSinceLastActivity: 7,
+        averageSessionDuration: 0,
+        completionRate: 0
+      });
+    } else if (recentActivities.length < 3) {
+      // Simulate finding a subject-specific engagement issue
+      issues.push({
+        subject: SubjectArea.SCIENCE,
+        severity: 'moderate',
+        daysSinceLastActivity: 5,
+        averageSessionDuration: 10,
+        completionRate: 30
+      });
+    }
+    
+    return issues;
   }
   
   /**
-   * Identify goals at risk based on current progress
+   * Identify goals at risk of not being completed
    */
-  private identifyGoalsAtRisk(learnerProfile: LearnerProfile, currentLearningPaths: LearningPath: any[])[] {
-    // This would typically involve analysing goal progress against deadlines
-    // For now, we'll return a placeholder implementation
+  private identifyGoalsAtRisk(learnerProfile: LearnerProfile, currentLearningPaths: LearningPath[]): any[] {
+    // This would typically involve analysis of goal progress against deadlines
+    // For now, we'll simulate this with a placeholder implementation
     
-    // In a real implementation, this would:
-    // 1. Calculate required progress rate to meet goal deadlines
-    // 2. Compare with actual progress rate
-    // 3. Identify goals that are unlikely to be met on time
+    const issues: any[] = [];
     
     // Placeholder implementation
-    return [];
+    const activeGoals = learnerProfile.learningGoals.filter(goal => goal.status === 'in_progress');
+    
+    if (activeGoals.length > 0) {
+      // Simulate finding a goal at risk
+      issues.push({
+        goalTitle: activeGoals[0].description,
+        severity: 'moderate',
+        daysRemaining: 14,
+        completionPercentage: 30,
+        requiredDailyProgress: 5,
+        suggestedResources: ['Resource 1', 'Resource 2', 'Resource 3']
+      });
+    }
+    
+    return issues;
   }
   
   /**
-   * Generate a progress report for a learner
+   * Generate a progress report for a learner over a specified period
    */
   public async generateProgressReport(
     learnerProfile: LearnerProfile,
     period: { start: Date; end: Date }
   ): Promise<ProgressReport> {
-    // This would typically involve analysing all learning activities within the period
-    // For now, we'll return a placeholder implementation
-    
-    // In a real implementation, this would:
-    // 1. Calculate overall progress across all subjects
-    // 2. Determine progress in each subject
-    // 3. Identify strengths and areas for improvement
-    // 4. Suggest next steps
+    // This would typically involve analysis of learning activities and assessments
+    // For now, we'll simulate this with a placeholder implementation
     
     // Placeholder implementation
     const progressReport: ProgressReport = {
-      id: `report-${Date.now()}`,
       learnerId: learnerProfile.id,
-      period: period,
-      overallProgress: 65, // Placeholder value
+      period: {
+        start: period.start,
+        end: period.end
+      },
+      overallProgress: 65,
       subjectProgress: {
         [SubjectArea.ENGLISH]: 70,
         [SubjectArea.MATHEMATICS]: 60,
         [SubjectArea.SCIENCE]: 75
       },
-      goalsAchieved: 2, // Placeholder value
-      goalsInProgress: 3, // Placeholder value
-      timeSpent: 15, // Placeholder value (hours)
+      completedActivities: 24,
+      timeSpent: 840, // minutes
       strengths: [
         {
           subject: SubjectArea.SCIENCE,
-          conceptsStrong: ['Scientific Method', 'Classification'],
-          evidence: 'Consistently high scores in science assessments'
+          concepts: ['Scientific Method', 'Plant Biology', 'Simple Machines']
+        },
+        {
+          subject: SubjectArea.ENGLISH,
+          concepts: ['Reading Comprehension', 'Vocabulary']
         }
       ],
       areasForImprovement: [
         {
           subject: SubjectArea.MATHEMATICS,
-          conceptsToImprove: ['Fractions', 'Algebra'],
-          suggestedActivities: ['Fraction Practise', 'Algebra Basics']
+          concepts: ['Fractions', 'Word Problems']
         }
       ],
       nextSteps: [
-        'Focus on improving mathematics skills, particularly fractions and algebra',
+        'Focus on mathematics concepts, particularly fractions',
         'Continue building on strengths in science',
-        'Set specific goals for English improvement'
+        'Explore more challenging reading materials'
       ],
-      generatedAt: new Date()
+      achievements: [
+        {
+          title: 'Science Explorer',
+          description: 'Completed all science activities with high scores',
+          dateEarned: new Date()
+        }
+      ]
     };
     
     return progressReport;
   }
   
-  /**
-   * Update guidance system configuration
-   */
   public updateConfig(newConfig: Partial<GuidanceSystemConfig>): void {
     this.config = {
       ...this.config,
@@ -634,47 +670,7 @@ export class AIGuidanceService {
     };
   }
   
-  /**
-   * Get current guidance system configuration
-   */
   public getConfig(): GuidanceSystemConfig {
     return { ...this.config };
   }
 }
-
-// Default configuration
-export const defaultGuidanceConfig: GuidanceSystemConfig = {
-  adaptivityLevel: 'medium',
-  interventionThreshold: 70,
-  contentFilterLevel: 'medium',
-  maxSuggestionsPerDay: 5,
-  enabledFeatures: {
-    learningPathRecommendations: true,
-    contentSuggestions: true,
-    interventionAlerts: true,
-    progressReports: true,
-    achievementCelebrations: true
-  },
-  userPreferences: {
-    notificationFrequency: 'medium',
-    dataUsageConsent: true,
-    shareProgressWithTeachers: true,
-    shareProgressWithParents: true
-  }
-};
-
-// Export singleton instance
-let aiGuidanceService: AIGuidanceService | null = null;
-
-export function getAIGuidanceService(config?: Partial<GuidanceSystemConfig>): AIGuidanceService {
-  if (!aiGuidanceService) {
-    aiGuidanceService = new AIGuidanceService({
-      ...defaultGuidanceConfig,
-      ...config
-    });
-  } else if (config) {
-    aiGuidanceService.updateConfig(config);
-  }
-  
-  return aiGuidanceService;
-}
diff --git a/src/lib/ai/guidanceTypes.ts b/src/lib/ai/guidanceTypes.ts
index f9262e4..985ac7f 100644
--- a/src/lib/ai/guidanceTypes.ts
+++ b/src/lib/ai/guidanceTypes.ts
@@ -81,12 +81,12 @@ export interface LearnerProfile {
     [key in SubjectArea]?: number; // Interest level from 0-100
   };
   specialEducationalNeeds?: {
-    categories: SENCategory: any[];
-    specificDifficulties?: SpecificLearningDifficulty: any[];
-    accommodations?: string: any[];
+    categories: SENCategory[];
+    specificDifficulties?: SpecificLearningDifficulty[];
+    accommodations?: string[];
   };
-  previousAssessments: Assessment: any[];
-  learningGoals: LearningGoal: any[];
+  previousAssessments: Assessment[];
+  learningGoals: LearningGoal[];
   engagementMetrics: EngagementMetrics;
   lastUpdated: Date;
 }
@@ -99,8 +99,8 @@ export interface Assessment {
   keyStage: KeyStage;
   dateCompleted: Date;
   score: number; // Percentage
-  strengths: string: any[];
-  areasForImprovement: string: any[];
+  strengths: string[];
+  areasForImprovement: string[];
   teacherFeedback?: string;
   duration: number; // In minutes
   questionBreakdown?: {
@@ -122,7 +122,7 @@ export interface LearningGoal {
   status: 'not_started' | 'in_progress' | 'completed';
   progress: number; // Percentage
   priority: 'low' | 'medium' | 'high';
-  associatedCurriculumPoints: string: any[];
+  associatedCurriculumPoints: string[];
   createdBy: 'student' | 'teacher' | 'parent' | 'system';
   createdAt: Date;
 }
@@ -135,7 +135,7 @@ export interface EngagementMetrics {
   responseTime: number; // Average time to respond to questions in seconds
   focusScore: number; // 0-100 scale measuring focus during sessions
   preferredTimeOfDay: 'morning' | 'afternoon' | 'evening';
-  preferredContentTypes: string: any[]; // e.g., videos, interactive, text, etc.
+  preferredContentTypes: string[]; // e.g., videos, interactive, text, etc.
   challengeLevel: number; // 1-5 scale of preferred challenge level
 }
 
@@ -147,11 +147,11 @@ export interface LearningPath {
   description: string;
   subject: SubjectArea;
   keyStage: KeyStage;
-  objectives: string: any[];
+  objectives: string[];
   estimatedDuration: number; // In hours
   difficulty: number; // 1-5 scale
-  modules: LearningModule: any[];
-  adaptivityRules: AdaptivityRule: any[];
+  modules: LearningModule[];
+  adaptivityRules: AdaptivityRule[];
   createdAt: Date;
   updatedAt: Date;
   completionStatus: number; // Percentage
@@ -163,12 +163,12 @@ export interface LearningModule {
   id: string;
   title: string;
   description: string;
-  prerequisiteModules: string: any[]; // IDs of modules that must be completed first
-  learningOutcomes: string: any[];
+  prerequisiteModules: string[]; // IDs of modules that must be completed first
+  learningOutcomes: string[];
   estimatedDuration: number; // In minutes
   difficulty: number; // 1-5 scale
-  activities: LearningActivity: any[];
-  assessments: ModuleAssessment: any[];
+  activities: LearningActivity[];
+  assessments: ModuleAssessment[];
   completionStatus: number; // Percentage
   unlocked: boolean;
 }
@@ -183,7 +183,7 @@ export interface LearningActivity {
     url?: string;
     text?: string;
     interactiveId?: string;
-    attachments?: string: any[];
+    attachments?: string[];
   };
   duration: number; // In minutes
   learningStyleAlignment: {
@@ -202,7 +202,7 @@ export interface ModuleAssessment {
   id: string;
   title: string;
   description: string;
-  questions: AssessmentQuestion: any[];
+  questions: AssessmentQuestion[];
   passingScore: number; // Percentage
   maxAttempts: number;
   timeLimit?: number; // In minutes
@@ -224,8 +224,8 @@ export interface AssessmentQuestion {
   id: string;
   questionText: string;
   questionType: 'multiple_choice' | 'true_false' | 'short_answer' | 'essay' | 'matching' | 'fill_in_blank';
-  options?: string: any[];
-  correctAnswer: string | string: any: any[];
+  options?: string[];
+  correctAnswer: string | string[];
   explanation: string;
   difficulty: number; // 1-5 scale
   conceptTested: string;
@@ -286,7 +286,7 @@ export interface InterventionAlert {
   suggestedActions: {
     actionType: string;
     description: string;
-    resources?: string: any[];
+    resources?: string[];
   }[];
   createdAt: Date;
   acknowledged: boolean;
@@ -311,15 +311,15 @@ export interface ProgressReport {
   timeSpent: number; // In hours
   strengths: {
     subject: SubjectArea;
-    conceptsStrong: string: any[];
+    conceptsStrong: string[];
     evidence: string;
   }[];
   areasForImprovement: {
     subject: SubjectArea;
-    conceptsToImprove: string: any[];
-    suggestedActivities: string: any[];
+    conceptsToImprove: string[];
+    suggestedActivities: string[];
   }[];
-  nextSteps: string: any[];
+  nextSteps: string[];
   generatedAt: Date;
 }
 
diff --git a/src/lib/ai/openai-service.ts b/src/lib/ai/openai-service.ts
index e085686..d1e3380 100644
--- a/src/lib/ai/openai-service.ts
+++ b/src/lib/ai/openai-service.ts
@@ -97,10 +97,10 @@ export class OpenAIService {
   /**
    * Generate personalized feedback for student work
    */
-  async generatePersonalizedFeedback(studentWork: string, learningObjectives: string: any[], studentProfile: {
+  async generatePersonalizedFeedback(studentWork: string, learningObjectives: string[], studentProfile: {
     learningStyle?: string;
-    strengths?: string: any[];
-    areasForImprovement?: string: any[];
+    strengths?: string[];
+    areasForImprovement?: string[];
     ageGroup?: string;
   } = {}) {
     try {
@@ -146,7 +146,7 @@ export class OpenAIService {
   /**
    * Generate differentiated learning materials for diverse needs
    */
-  async generateDifferentiatedMaterials(topic: string, learningObjectives: string: any[], differentiationLevels: {
+  async generateDifferentiatedMaterials(topic: string, learningObjectives: string[], differentiationLevels: {
     level: 'foundation' | 'core' | 'extension';
     description: string;
   }[]) {
@@ -180,7 +180,7 @@ export class OpenAIService {
   /**
    * Analyse student work to identify strengths and areas for improvement
    */
-  async analyzeStudentWork(studentWork: string, learningObjectives: string: any[], rubric?: {
+  async analyzeStudentWork(studentWork: string, learningObjectives: string[], rubric?: {
     criteria: string;
     levels: { level: string; description: string }[];
   }[]) {
diff --git a/src/lib/analytics-utils.tsx b/src/lib/analytics-utils.tsx
index 741f5c1..fd9fe1d 100644
--- a/src/lib/analytics-utils.tsx
+++ b/src/lib/analytics-utils.tsx
@@ -60,7 +60,7 @@ export interface AnalyticsConfig {
   trackErrors: boolean;
   trackPerformance: boolean;
   samplingRate: number; // 0-1 value
-  excludePaths: string: any[];
+  excludePaths: string[];
   consentRequired: boolean;
 }
 
@@ -77,7 +77,7 @@ const defaultConfig: AnalyticsConfig = {
 
 // Session storage
 let currentSession: SessionInfo | null = null;
-let analyticsQueue: AnalyticsEvent: any[] = [];
+let analyticsQueue: AnalyticsEvent[] = [];
 let analyticsConfig: AnalyticsConfig = defaultConfig;
 let consentGiven = false;
 
@@ -313,7 +313,7 @@ export const trackFeatureUsage = (featureName: string, details?: Record<string,
 export const trackLearningProgress = (
   moduleId: string, 
   progress: number, 
-  completedActivities: string: any[],
+  completedActivities: string[],
   timeSpent: number
 ): void => {
   trackEvent({
@@ -565,7 +565,7 @@ export const useAnalyticsConsent = (): [boolean, (consent: boolean) => void] =>
 export const getAnalyticsReport = async (
   startDate: Date,
   endDate: Date,
-  metrics: string: any[],
+  metrics: string[],
   filters?: Record<string, any>
 ): Promise<Record<string, any>> => {
   // In a real implementation, this would fetch from a backend API
@@ -649,7 +649,7 @@ export const getAnalyticsReport = async (
 export const AnalyticsDashboard: React.FC<{
   startDate: Date;
   endDate: Date;
-  metrics: string: any[];
+  metrics: string[];
   filters?: Record<string, any>;
 }> = ({ startDate, endDate, metrics, filters }) => {
   const [data, setData] = useState<Record<string, any> | null>(null);
diff --git a/src/lib/analytics/analyticsService.ts b/src/lib/analytics/analyticsService.ts
index f9943d7..b728b13 100644
--- a/src/lib/analytics/analyticsService.ts
+++ b/src/lib/analytics/analyticsService.ts
@@ -45,7 +45,7 @@ export class AnalyticsService {
   /**
    * Fetch student performance data
    */
-  async getStudentPerformance(filter: AnalyticsFilter): Promise<AnalyticsResponse<StudentPerformanceData: any[]>> {
+  async getStudentPerformance(filter: AnalyticsFilter): Promise<AnalyticsResponse<StudentPerformanceData[]>> {
     try {
       const response = await fetch(`${this.apiBaseUrl}/student-performance?${this.buildQueryString(filter)}`);
       
@@ -63,7 +63,7 @@ export class AnalyticsService {
   /**
    * Fetch curriculum coverage data
    */
-  async getCurriculumCoverage(filter: AnalyticsFilter): Promise<AnalyticsResponse<CurriculumCoverageData: any[]>> {
+  async getCurriculumCoverage(filter: AnalyticsFilter): Promise<AnalyticsResponse<CurriculumCoverageData[]>> {
     try {
       const response = await fetch(`${this.apiBaseUrl}/curriculum-coverage?${this.buildQueryString(filter)}`);
       
@@ -81,7 +81,7 @@ export class AnalyticsService {
   /**
    * Fetch engagement data
    */
-  async getEngagementData(filter: AnalyticsFilter): Promise<AnalyticsResponse<EngagementData: any[]>> {
+  async getEngagementData(filter: AnalyticsFilter): Promise<AnalyticsResponse<EngagementData[]>> {
     try {
       const response = await fetch(`${this.apiBaseUrl}/engagement?${this.buildQueryString(filter)}`);
       
@@ -99,7 +99,7 @@ export class AnalyticsService {
   /**
    * Fetch special needs data
    */
-  async getSpecialNeedsData(filter: AnalyticsFilter): Promise<AnalyticsResponse<SpecialNeedsData: any[]>> {
+  async getSpecialNeedsData(filter: AnalyticsFilter): Promise<AnalyticsResponse<SpecialNeedsData[]>> {
     try {
       const response = await fetch(`${this.apiBaseUrl}/special-needs?${this.buildQueryString(filter)}`);
       
@@ -159,7 +159,7 @@ export class AnalyticsService {
   /**
    * Get available dashboards for current user
    */
-  async getAvailableDashboards(): Promise<DashboardConfig: any[]> {
+  async getAvailableDashboards(): Promise<DashboardConfig[]> {
     try {
       const response = await fetch(`${this.apiBaseUrl}/dashboards`);
       
@@ -212,7 +212,7 @@ export class AnalyticsService {
   /**
    * Get alert thresholds
    */
-  async getAlertThresholds(): Promise<AlertThreshold: any[]> {
+  async getAlertThresholds(): Promise<AlertThreshold[]> {
     try {
       const response = await fetch(`${this.apiBaseUrl}/alerts/thresholds`);
       
@@ -254,7 +254,7 @@ export class AnalyticsService {
   /**
    * Get active alerts
    */
-  async getActiveAlerts(): Promise<any: any[]> {
+  async getActiveAlerts(): Promise<any[]> {
     try {
       const response = await fetch(`${this.apiBaseUrl}/alerts/active`);
       
@@ -272,7 +272,7 @@ export class AnalyticsService {
   /**
    * Transform raw data into chart datasets
    */
-  transformDataToDatasets(data: any: any[], labelField: string, valueField: string, categoryField?: string): Dataset: any: any[] {
+  transformDataToDatasets(data: any[], labelField: string, valueField: string, categoryField?: string): Dataset[] {
     if (!data || data.length === 0) {
       return [];
     }
@@ -309,7 +309,7 @@ export class AnalyticsService {
   /**
    * Generate colour palette for datasets
    */
-  generateColorPalette(datasets: Dataset: any[]): Dataset: any: any[] {
+  generateColorPalette(datasets: Dataset[]): Dataset[] {
     const baseColors = [
       '#4361ee', '#3a0ca3', '#7209b7', '#f72585', '#4cc9f0',
       '#4895ef', '#560bad', '#b5179e', '#f15bb5', '#00bbf9'
@@ -325,7 +325,7 @@ export class AnalyticsService {
   /**
    * Create accessible chart configuration
    */
-  createAccessibleChartConfig(title: string, datasets: Dataset: any[], type, options = {}): ChartConfig {
+  createAccessibleChartConfig(title: string, datasets: Dataset[], type, options = {}): ChartConfig {
     // Generate a summary of the data for screen readers
     const dataPoints = datasets.reduce((sum, dataset) => sum + dataset.datasets?.length || 0, 0);
     const keyFindings = this.generateKeyFindings(datasets);
@@ -366,8 +366,8 @@ export class AnalyticsService {
   /**
    * Generate key findings from datasets
    */
-  private generateKeyFindings(datasets: Dataset: any[]): string: any: any[] {
-    const findings: string: any[] = [];
+  private generateKeyFindings(datasets: Dataset[]): string[] {
+    const findings: string[] = [];
     
     // This is a simplified version - in a real implementation, this would use
     // statistical analysis to identify trends, outliers, etc.
@@ -378,7 +378,7 @@ export class AnalyticsService {
       // Find max value
       const maxPoint = dataset.data.reduce((max, point) => 
         typeof point.value === 'number' && (max === null || point.value > max.value) ? point : max, 
-        null as DataPoint | null
+        null as any | null
       );
       
       if (maxPoint && typeof maxPoint.value === 'number') {
@@ -388,7 +388,7 @@ export class AnalyticsService {
       // Find min value
       const minPoint = dataset.data.reduce((min, point) => 
         typeof point.value === 'number' && (min === null || point.value < min.value) ? point : min, 
-        null as DataPoint | null
+        null as any | null
       );
       
       if (minPoint && typeof minPoint.value === 'number') {
diff --git a/src/lib/analytics/types.ts b/src/lib/analytics/types.ts
index 060372b..72ca091 100644
--- a/src/lib/analytics/types.ts
+++ b/src/lib/analytics/types.ts
@@ -107,10 +107,10 @@ export interface DataPoint {
 export interface Dataset {
   id: string;
   label: string;
-  data: DataPoint: any[];
+  data: DataPoint[];
   colour?: string;
-  backgroundColor?: string | string: any: any[];
-  borderColor?: string | string: any: any[];
+  backgroundColor?: string | string[];
+  borderColor?: string | string[];
   borderWidth?: number;
   hidden?: boolean;
   metadata?: Record<string, any>;
@@ -124,11 +124,11 @@ export interface ChartConfig {
   type: ChartType;
   title: string;
   description?: string;
-  datasets: Dataset: any[];
+  datasets: Dataset[];
   options?: Record<string, any>; // Chart.js options
   accessibility?: {
     textDescription: string;
-    keyFindings: string: any[];
+    keyFindings: string[];
     alternativeFormats?: boolean;
   };
 }
@@ -173,7 +173,7 @@ export interface WidgetConfig {
   customConfig?: Record<string, any>;
   refreshInterval?: number; // in seconds
   isInteractive?: boolean;
-  permissions?: UserRole: any[];
+  permissions?: UserRole[];
 }
 
 /**
@@ -183,12 +183,12 @@ export interface DashboardConfig {
   id: string;
   title: string;
   description?: string;
-  widgets: WidgetConfig: any[];
+  widgets: WidgetConfig[];
   layout?: 'grid' | 'free' | 'fixed';
   theme?: 'light' | 'dark' | 'system' | 'high-contrast';
   defaultTimePeriod?: TimePeriod;
   defaultGranularity?: DataGranularity;
-  permissions?: UserRole: any[];
+  permissions?: UserRole[];
   filters?: Record<string, any>;
   createdAt?: Date;
   updatedAt?: Date;
@@ -216,10 +216,10 @@ export interface StudentPerformanceData {
   }[];
   averageScore?: number;
   progressTrend?: number;
-  strengths?: string: any[];
-  areasForImprovement?: string: any[];
+  strengths?: string[];
+  areasForImprovement?: string[];
   learningStyle?: string;
-  accommodations?: string: any[];
+  accommodations?: string[];
 }
 
 /**
@@ -236,7 +236,7 @@ export interface CurriculumCoverageData {
     status: 'not_started' | 'in_progress' | 'completed' | 'mastered';
   }[];
   overallCoverage: number;
-  gapsIdentified?: string: any[];
+  gapsIdentified?: string[];
 }
 
 /**
@@ -266,7 +266,7 @@ export interface EngagementData {
  */
 export interface SpecialNeedsData {
   category: 'dyslexia' | 'dyspraxia' | 'asd' | 'adhd' | 'anxiety' | 'other';
-  accommodationsUsed: string: any[];
+  accommodationsUsed: string[];
   effectivenessRating?: number;
   engagementMetrics: {
     withAccommodation: number;
@@ -276,7 +276,7 @@ export interface SpecialNeedsData {
     withAccommodation: number;
     withoutAccommodation: number;
   };
-  recommendations?: string: any[];
+  recommendations?: string[];
 }
 
 /**
@@ -287,13 +287,13 @@ export interface AnalyticsFilter {
   startDate?: Date;
   endDate?: Date;
   granularity?: DataGranularity;
-  students?: string: any[];
-  classes?: string: any[];
-  yearGroups?: string: any[];
-  subjects?: string: any[];
-  keyStages?: string: any[];
-  specialNeeds?: string: any[];
-  learningStyles?: string: any[];
+  students?: string[];
+  classes?: string[];
+  yearGroups?: string[];
+  subjects?: string[];
+  keyStages?: string[];
+  specialNeeds?: string[];
+  learningStyles?: string[];
 }
 
 /**
@@ -329,7 +329,7 @@ export enum ExportFormat {
  */
 export interface ExportConfig {
   format: ExportFormat;
-  widgets?: string: any[]; // Widget IDs to export, empty means all
+  widgets?: string[]; // Widget IDs to export, empty means all
   includeFilters?: boolean;
   includeSummary?: boolean;
   orientation?: 'portrait' | 'landscape';
@@ -361,8 +361,8 @@ export interface DashboardPreferences {
   theme?: 'light' | 'dark' | 'system' | 'high-contrast';
   defaultTimePeriod?: TimePeriod;
   defaultGranularity?: DataGranularity;
-  favoriteWidgets?: string: any[];
-  hiddenWidgets?: string: any[];
+  favoriteWidgets?: string[];
+  hiddenWidgets?: string[];
   widgetLayout?: Record<string, { x: number; y: number; width: number; height: number }>;
   accessibilitySettings?: {
     highContrast?: boolean;
diff --git a/src/lib/assessment/adaptiveDifficultyService.ts b/src/lib/assessment/adaptiveDifficultyService.ts
index 5dcd372..2053751 100644
--- a/src/lib/assessment/adaptiveDifficultyService.ts
+++ b/src/lib/assessment/adaptiveDifficultyService.ts
@@ -46,7 +46,7 @@ export class AdaptiveDifficultyService implements AdaptiveDifficultyEngine {
    * @returns The recommended difficulty level for the next question
    */
   calculateNextQuestionDifficulty(
-    previousResponses: QuestionResponse: any[],
+    previousResponses: QuestionResponse[],
     currentDifficulty: DifficultyLevel
   ): DifficultyLevel {
     // If no previous responses, return the current difficulty
@@ -81,7 +81,7 @@ export class AdaptiveDifficultyService implements AdaptiveDifficultyEngine {
    * @param responses The student's responses
    * @returns The estimated ability level (theta in IRT)
    */
-  estimateStudentAbility(responses: QuestionResponse: any[]): number {
+  estimateStudentAbility(responses: QuestionResponse[]): number {
     // If no responses, return a default ability estimate
     if (responses.length === 0) {
       return 0.0; // Default ability (average)
@@ -130,7 +130,7 @@ export class AdaptiveDifficultyService implements AdaptiveDifficultyEngine {
    * @param studentAbility The student's estimated ability level
    * @returns The selected question
    */
-  selectOptimalQuestion(questionBank: Question: any[], studentAbility: number): Question {
+  selectOptimalQuestion(questionBank: Question[], studentAbility: number): Question {
     // If no questions available, throw an error
     if (questionBank.length === 0) {
       throw new Error('No questions available for selection');
@@ -162,7 +162,7 @@ export class AdaptiveDifficultyService implements AdaptiveDifficultyEngine {
    * 
    * @param responses The responses to analyse
    */
-  async updateDifficultyModel(responses: QuestionResponse: any[]): Promise<void> {
+  async updateDifficultyModel(responses: QuestionResponse[]): Promise<void> {
     // In a real implementation, this would update the IRT parameters
     // based on accumulated response data
     console.log(`Updating difficulty model with ${responses.length} responses`);
@@ -202,7 +202,7 @@ export class AdaptiveDifficultyService implements AdaptiveDifficultyEngine {
    * @param responses The responses to analyse
    * @returns The success rate (0-1)
    */
-  private calculateSuccessRate(responses: QuestionResponse: any[]): number {
+  private calculateSuccessRate(responses: QuestionResponse[]): number {
     if (responses.length === 0) {
       return 0.5; // Default to 50% if no responses
     }
diff --git a/src/lib/assessment/assessmentEngineService.ts b/src/lib/assessment/assessmentEngineService.ts
index 472f867..ff346de 100644
--- a/src/lib/assessment/assessmentEngineService.ts
+++ b/src/lib/assessment/assessmentEngineService.ts
@@ -127,7 +127,7 @@ export class AssessmentEngineService implements AssessmentEngine {
     keyStage?: UKKeyStage;
     subject?: UKSubject;
     assessmentType?: AssessmentType;
-  }): Promise<AssessmentMetadata: any[]> {
+  }): Promise<AssessmentMetadata[]> {
     // In a real implementation, this would query a database with filters
     console.log('Listing assessments with filters:', params);
     
@@ -229,7 +229,7 @@ export class AssessmentEngineService implements AssessmentEngine {
    * @param assessmentId Optional assessment ID to filter by
    * @returns Array of assessment attempts
    */
-  async getStudentAttempts(studentId: string, assessmentId?: string): Promise<AssessmentAttempt: any[]> {
+  async getStudentAttempts(studentId: string, assessmentId?: string): Promise<AssessmentAttempt[]> {
     // In a real implementation, this would query a database with filters
     console.log(`Fetching attempts for student ${studentId}${assessmentId ? ` on assessment ${assessmentId}` : ''}`);
     
@@ -265,7 +265,7 @@ export class AssessmentEngineService implements AssessmentEngine {
     };
     
     // Generate questions based on template distribution
-    const questions: Question: any[] = await this.generateQuestionsFromTemplate(template);
+    const questions: Question[] = await this.generateQuestionsFromTemplate(template);
     
     // Create the assessment
     const assessment: Assessment = {
@@ -296,7 +296,7 @@ export class AssessmentEngineService implements AssessmentEngine {
    * @param previousResponses The student's previous responses
    * @returns The next question to present
    */
-  async generateAdaptiveQuestion(attemptId: string, previousResponses: QuestionResponse: any[]): Promise<Question> {
+  async generateAdaptiveQuestion(attemptId: string, previousResponses: QuestionResponse[]): Promise<Question> {
     console.log(`Generating adaptive question for attempt ${attemptId}`);
     
     // Get the attempt
@@ -379,8 +379,8 @@ export class AssessmentEngineService implements AssessmentEngine {
   }): Promise<{
     assessmentsCompleted: number;
     averageScore: number;
-    strengths: string: any[];
-    areasForImprovement: string: any[];
+    strengths: string[];
+    areasForImprovement: string[];
     progressOverTime: Array<{
       date: Date;
       score: number;
@@ -515,8 +515,8 @@ export class AssessmentEngineService implements AssessmentEngine {
     const passed = percentage >= (assessment.settings.passingScore || 60);
     
     // Generate strengths and areas for improvement
-    const strengths: string: any[] = [];
-    const areasForImprovement: string: any[] = [];
+    const strengths: string[] = [];
+    const areasForImprovement: string[] = [];
     
     // Identify strengths (domains with high performance)
     Object.entries(byCognitiveDomain).forEach(([domain, data]) => {
@@ -624,8 +624,8 @@ export class AssessmentEngineService implements AssessmentEngine {
    * @param template The assessment template
    * @returns Array of questions
    */
-  private async generateQuestionsFromTemplate(template: AssessmentTemplate): Promise<Question: any[]> {
-    const questions: Question: any[] = [];
+  private async generateQuestionsFromTemplate(template: AssessmentTemplate): Promise<Question[]> {
+    const questions: Question[] = [];
     
     // Calculate how many questions of each type to generate
     const typeDistribution = new Map<QuestionType, number>();
diff --git a/src/lib/assessment/feedbackGeneratorService.ts b/src/lib/assessment/feedbackGeneratorService.ts
index bde9c27..68f8ce6 100644
--- a/src/lib/assessment/feedbackGeneratorService.ts
+++ b/src/lib/assessment/feedbackGeneratorService.ts
@@ -70,7 +70,7 @@ export class FeedbackGeneratorService implements FeedbackGenerator {
   generateAssessmentFeedback(result: AssessmentResult): {
     overall: string;
     byTopic: Record<string, string>;
-    nextSteps: string: any[];
+    nextSteps: string[];
   } {
     // Generate overall feedback
     const overall = this.generateOverallFeedback(result);
@@ -161,9 +161,9 @@ export class FeedbackGeneratorService implements FeedbackGenerator {
     timeframe: 'week' | 'month' | 'term' | 'year'
   ): Promise<{
     summary: string;
-    strengths: string: any[];
-    areasForImprovement: string: any[];
-    recommendations: string: any[];
+    strengths: string[];
+    areasForImprovement: string[];
+    recommendations: string[];
   }> {
     // In a real implementation, this would analyse the student's assessment history
     // For now, we'll return mock data
@@ -269,8 +269,8 @@ export class FeedbackGeneratorService implements FeedbackGenerator {
    * @param result The assessment result
    * @returns Array of next step recommendations
    */
-  private generateNextSteps(result: AssessmentResult): string: any: any[] {
-    const nextSteps: string: any[] = [];
+  private generateNextSteps(result: AssessmentResult): string[] {
+    const nextSteps: string[] = [];
     
     // Add general next step based on overall performance
     if (result.percentage >= 80) {
@@ -282,7 +282,7 @@ export class FeedbackGeneratorService implements FeedbackGenerator {
     }
     
     // Add specific next steps based on cognitive domains
-    const weakDomains: CognitiveDomain: any[] = [];
+    const weakDomains: CognitiveDomain[] = [];
     
     // Identify domains with lower performance
     for (const [domain, data] of Object.entries(result.analytics.byCognitiveDomain)) {
diff --git a/src/lib/assessment/questionBankService.ts b/src/lib/assessment/questionBankService.ts
index 5480144..4703242 100644
--- a/src/lib/assessment/questionBankService.ts
+++ b/src/lib/assessment/questionBankService.ts
@@ -92,12 +92,12 @@ export class QuestionBankService implements QuestionBank {
   async searchQuestions(params: {
     keyStage?: UKKeyStage;
     subject?: UKSubject;
-    topics?: string: any[];
-    types?: QuestionType: any[];
+    topics?: string[];
+    types?: QuestionType[];
     difficultyLevel?: DifficultyLevel;
     cognitiveDomain?: CognitiveDomain;
-    tags?: string: any[];
-  }): Promise<Question: any[]> {
+    tags?: string[];
+  }): Promise<Question[]> {
     // Convert the map to an array
     const allQuestions = Array.from(this.questions.values());
     
@@ -168,7 +168,7 @@ export class QuestionBankService implements QuestionBank {
   async getQuestionCount(params?: {
     keyStage?: UKKeyStage;
     subject?: UKSubject;
-    topics?: string: any[];
+    topics?: string[];
   }): Promise<number> {
     if (!params) {
       // Return total count if no parameters specified
diff --git a/src/lib/assessment/types.ts b/src/lib/assessment/types.ts
index 25354de..5c3ddd5 100644
--- a/src/lib/assessment/types.ts
+++ b/src/lib/assessment/types.ts
@@ -516,16 +516,16 @@ export interface QuestionBank {
   searchQuestions: (params: {
     keyStage?: UKKeyStage;
     subject?: UKSubject;
-    topics?: string: any[];
-    types?: QuestionType: any[];
+    topics?: string[];
+    types?: QuestionType[];
     difficultyLevel?: DifficultyLevel;
     cognitiveDomain?: CognitiveDomain;
-    tags?: string: any[];
-  }) => Promise<Question: any[]>;
+    tags?: string[];
+  }) => Promise<Question[]>;
   getQuestionCount: (params?: {
     keyStage?: UKKeyStage;
     subject?: UKSubject;
-    topics?: string: any[];
+    topics?: string[];
   }) => Promise<number>;
 }
 
@@ -541,16 +541,16 @@ export interface AssessmentEngine {
     keyStage?: UKKeyStage;
     subject?: UKSubject;
     assessmentType?: AssessmentType;
-  }) => Promise<AssessmentMetadata: any[]>;
+  }) => Promise<AssessmentMetadata[]>;
   
   startAttempt: (assessmentId: string, studentId: string) => Promise<string>;
   submitResponse: (attemptId: string, response: QuestionResponse) => Promise<boolean>;
   completeAttempt: (attemptId: string) => Promise<AssessmentResult>;
   getAttempt: (attemptId: string) => Promise<AssessmentAttempt | null>;
-  getStudentAttempts: (studentId: string, assessmentId?: string) => Promise<AssessmentAttempt: any[]>;
+  getStudentAttempts: (studentId: string, assessmentId?: string) => Promise<AssessmentAttempt[]>;
   
   generateAssessment: (template: AssessmentTemplate) => Promise<Assessment>;
-  generateAdaptiveQuestion: (attemptId: string, previousResponses: QuestionResponse: any[]) => Promise<Question>;
+  generateAdaptiveQuestion: (attemptId: string, previousResponses: QuestionResponse[]) => Promise<Question>;
   
   analyzeResults: (assessmentId: string) => Promise<{
     attemptCount: number;
@@ -571,8 +571,8 @@ export interface AssessmentEngine {
   }) => Promise<{
     assessmentsCompleted: number;
     averageScore: number;
-    strengths: string: any[];
-    areasForImprovement: string: any[];
+    strengths: string[];
+    areasForImprovement: string[];
     progressOverTime: Array<{
       date: Date;
       score: number;
@@ -589,13 +589,13 @@ export interface FeedbackGenerator {
   generateAssessmentFeedback: (result: AssessmentResult) => {
     overall: string;
     byTopic: Record<string, string>;
-    nextSteps: string: any[];
+    nextSteps: string[];
   };
   generateProgressFeedback: (studentId: string, subject: UKSubject, timeframe: 'week' | 'month' | 'term' | 'year') => Promise<{
     summary: string;
-    strengths: string: any[];
-    areasForImprovement: string: any[];
-    recommendations: string: any[];
+    strengths: string[];
+    areasForImprovement: string[];
+    recommendations: string[];
   }>;
 }
 
@@ -603,8 +603,8 @@ export interface FeedbackGenerator {
  * Adaptive difficulty engine
  */
 export interface AdaptiveDifficultyEngine {
-  calculateNextQuestionDifficulty: (previousResponses: QuestionResponse: any[], currentDifficulty: DifficultyLevel) => DifficultyLevel;
-  estimateStudentAbility: (responses: QuestionResponse: any[]) => number; // IRT-based ability estimate
-  selectOptimalQuestion: (questionBank: Question: any[], studentAbility: number) => Question;
-  updateDifficultyModel: (responses: QuestionResponse: any[]) => Promise<void>;
+  calculateNextQuestionDifficulty: (previousResponses: QuestionResponse[], currentDifficulty: DifficultyLevel) => DifficultyLevel;
+  estimateStudentAbility: (responses: QuestionResponse[]) => number; // IRT-based ability estimate
+  selectOptimalQuestion: (questionBank: Question[], studentAbility: number) => Question;
+  updateDifficultyModel: (responses: QuestionResponse[]) => Promise<void>;
 }
diff --git a/src/lib/auth/session.ts b/src/lib/auth/session.ts
index 512d206..cc917af 100644
--- a/src/lib/auth/session.ts
+++ b/src/lib/auth/session.ts
@@ -27,7 +27,7 @@ export async function isAuthenticated(): Promise<boolean> {
 }
 
 // Check if the user has the required role
-export async function hasRole(requiredRoles: string | string: any: any[]): Promise<boolean> {
+export async function hasRole(requiredRoles: string | string[]): Promise<boolean> {
   const session = await getSession();
   
   if (!session) {
@@ -51,7 +51,7 @@ export async function authMiddleware(request: NextRequest) {
 }
 
 // Middleware to protect routes by role
-export async function roleMiddleware(request: NextRequest, requiredRoles: string: any[]) {
+export async function roleMiddleware(request: NextRequest, requiredRoles: string[]) {
   const session = await auth();
   
   // If the user is not authenticated, redirect to the login page
diff --git a/src/lib/avatar/avatarService.ts b/src/lib/avatar/avatarService.ts
index d883f8b..21987a3 100644
--- a/src/lib/avatar/avatarService.ts
+++ b/src/lib/avatar/avatarService.ts
@@ -119,10 +119,10 @@ export class AvatarService {
     query?: string;
     category?: ContentCategory;
     targetAudience?: TargetAudience;
-    tags?: string: any[];
+    tags?: string[];
     limit?: number;
     offset?: number;
-  }): Promise<AvatarVideoMetadata: any[]> {
+  }): Promise<AvatarVideoMetadata[]> {
     try {
       // In a real implementation, this would call an API endpoint
       return []; // Placeholder
@@ -166,7 +166,7 @@ export class AvatarService {
   /**
    * Get available avatar models
    */
-  async getAvatarModels(): Promise<AvatarModel: any[]> {
+  async getAvatarModels(): Promise<AvatarModel[]> {
     try {
       // In a real implementation, this would call an API endpoint
       return [
diff --git a/src/lib/avatar/types.ts b/src/lib/avatar/types.ts
index 331bcc7..eda7ac8 100644
--- a/src/lib/avatar/types.ts
+++ b/src/lib/avatar/types.ts
@@ -106,9 +106,9 @@ export interface AvatarVideoMetadata {
   createdAt: Date;
   updatedAt: Date;
   category: ContentCategory;
-  targetAudience: TargetAudience: any[];
-  curriculumLinks?: string: any[];
-  tags: string: any[];
+  targetAudience: TargetAudience[];
+  curriculumLinks?: string[];
+  tags: string[];
   transcriptUrl?: string;
   captionsUrl?: string;
   thumbnailUrl: string;
@@ -150,16 +150,16 @@ export interface AvatarVideoScript {
   title: string;
   content: string;
   notes?: string;
-  visualCues?: VisualCue: any[];
-  emotionMarkers?: EmotionMarker: any[];
-  pauseMarkers?: PauseMarker: any[];
-  emphasisMarkers?: EmphasisMarker: any[];
+  visualCues?: VisualCue[];
+  emotionMarkers?: EmotionMarker[];
+  pauseMarkers?: PauseMarker[];
+  emphasisMarkers?: EmphasisMarker[];
   createdAt: Date;
   updatedAt: Date;
   authorId: string;
   status: 'draft' | 'reviewed' | 'approved' | 'generated';
   category: ContentCategory;
-  targetAudience: TargetAudience: any[];
+  targetAudience: TargetAudience[];
   estimatedDurationSeconds: number;
 }
 
@@ -262,11 +262,11 @@ export interface AvatarIntegrationPoint {
   scriptTemplate?: string;
   dynamicVariables?: Record<string, string>;
   conditions?: {
-    userRole?: string: any[];
+    userRole?: string[];
     userProgress?: number;
     assessmentScore?: number;
     timeOfDay?: string;
-    deviceType?: string: any[];
+    deviceType?: string[];
   };
   fallbackText?: string;
 }
@@ -280,13 +280,13 @@ export interface AvatarModel {
   description: string;
   previewImageUrl: string;
   previewVideoUrl: string;
-  supportedEmotions: AvatarEmotion: any[];
-  supportedSpeakingStyles: AvatarSpeakingStyle: any[];
-  supportedBackgrounds: AvatarBackgroundType: any[];
-  supportedLanguages: string: any[];
+  supportedEmotions: AvatarEmotion[];
+  supportedSpeakingStyles: AvatarSpeakingStyle[];
+  supportedBackgrounds: AvatarBackgroundType[];
+  supportedLanguages: string[];
   isDefault: boolean;
   category: 'teacher' | 'mentor' | 'guide' | 'specialist' | 'character';
-  tags: string: any[];
+  tags: string[];
 }
 
 /**
diff --git a/src/lib/blog/blog-service.ts b/src/lib/blog/blog-service.ts
index b16ec59..86674bc 100644
--- a/src/lib/blog/blog-service.ts
+++ b/src/lib/blog/blog-service.ts
@@ -55,8 +55,8 @@ export interface BlogPost {
   content: string;
   featuredImage?: string;
   category: string;
-  tags: string: any[];
-  targetAudience: string: any[];
+  tags: string[];
+  targetAudience: string[];
   status: BlogPostStatus;
   authorId: string;
   reviewerId?: string;
@@ -92,9 +92,9 @@ export interface BlogPostWithRelations extends BlogPost {
 // Blog post generation parameters
 export interface BlogPostGenerationParams {
   topic: string;
-  audience: string: any[];
+  audience: string[];
   category: string;
-  keyPoints?: string: any[];
+  keyPoints?: string[];
   tone?: 'professional' | 'conversational' | 'academic';
   wordCount?: number;
 }
@@ -104,7 +104,7 @@ export interface BlogPostGenerationResult {
   title: string;
   content: string;
   summary: string;
-  tags: string: any[];
+  tags: string[];
   seoTitle: string;
   seoDescription: string;
 }
@@ -115,8 +115,8 @@ export interface BlogPostSaveParams {
   content: string;
   summary: string;
   category: string;
-  tags: string: any[];
-  targetAudience: string: any[];
+  tags: string[];
+  targetAudience: string[];
   status?: BlogPostStatus;
   publishDate?: Date;
   authorId: string;
@@ -128,7 +128,7 @@ export interface BlogPostSaveParams {
 
 // Blog post filter parameters
 export interface BlogPostFilterParams {
-  status?: BlogPostStatus | BlogPostStatus: any: any[];
+  status?: BlogPostStatus | BlogPostStatus[];
   category?: string;
   audience?: string;
   page?: number;
@@ -138,7 +138,7 @@ export interface BlogPostFilterParams {
 
 // Blog post filter result
 export interface BlogPostFilterResult {
-  posts: BlogPostWithRelations: any[];
+  posts: BlogPostWithRelations[];
   total: number;
   pages: number;
 }
@@ -147,8 +147,8 @@ export interface BlogPostFilterResult {
 export interface SeoRecommendationsResult {
   title: string;
   description: string;
-  keywords: string: any[];
-  suggestions: string: any[];
+  keywords: string[];
+  suggestions: string[];
 }
 
 // Blog analytics result
@@ -166,8 +166,8 @@ export interface BlogPostIdea {
   title: string;
   summary: string;
   category: string;
-  targetAudience: string: any[];
-  keyPoints: string: any[];
+  targetAudience: string[];
+  keyPoints: string[];
 }
 
 /**
@@ -401,7 +401,7 @@ export async function getBlogPosts({
   });
   
   return {
-    posts: posts as unknown as BlogPostWithRelations: any: any[],
+    posts: posts as unknown as BlogPostWithRelations[],
     total,
     pages: Math.ceil(total / limit)
   };
@@ -473,7 +473,7 @@ export async function deleteBlogPost(id: string): Promise<void> {
 /**
  * Generate blog post ideas based on user interests and curriculum topics
  */
-export async function generateBlogPostIdeas(count: number = 5, topics?: string: any[]): Promise<BlogPostIdea: any[]> {
+export async function generateBlogPostIdeas(count: number = 5, topics?: string[]): Promise<BlogPostIdea[]> {
   const topicsStr = topics ? topics.join(', ') : 'educational psychology, learning strategies, special needs education, curriculum development';
   
   const prompt = `
diff --git a/src/lib/cache.ts b/src/lib/cache.ts
index fd5b2fc..aeece30 100644
--- a/src/lib/cache.ts
+++ b/src/lib/cache.ts
@@ -93,7 +93,7 @@ export async function getCachedValue<T>(
 /**
  * Cache decorator for async functions
  */
-export function withCache<T extends (...args: any: any[]) => Promise<any>>(
+export function withCache<T extends (...args: any[]) => Promise<any>>(
   fn: T,
   keyPrefix: string,
   ttlSeconds: number | null = 3600
diff --git a/src/lib/collaboration/collaborationService.ts b/src/lib/collaboration/collaborationService.ts
index 6fd6a61..43aff8a 100644
--- a/src/lib/collaboration/collaborationService.ts
+++ b/src/lib/collaboration/collaborationService.ts
@@ -29,7 +29,7 @@ export class CollaborationService {
   private sessionId: string | null = null;
   private userId: string | null = null;
   private participants: Map<string, CollaborationParticipant> = new Map();
-  private eventListeners: Map<string, Function: any: any[]> = new Map();
+  private eventListeners: Map<string, Function[]> = new Map();
   private reconnectAttempts: number = 0;
   private maxReconnectAttempts: number = 5;
   private reconnectDelay: number = 1000; // ms
@@ -277,7 +277,7 @@ export class CollaborationService {
   /**
    * Get all participants in the session
    */
-  public getParticipants(): CollaborationParticipant: any: any[] {
+  public getParticipants(): CollaborationParticipant[] {
     return Array.from(this.participants.values());
   }
   
@@ -359,7 +359,7 @@ export class CollaborationService {
   /**
    * Update whiteboard
    */
-  public updateWhiteboard(whiteboardId: string, elements: any: any[], version: number): void {
+  public updateWhiteboard(whiteboardId: string, elements: any[], version: number): void {
     if (!this.socket || !this.userId || !this.sessionId) return;
     
     this.sendMessage({
diff --git a/src/lib/collaboration/types.ts b/src/lib/collaboration/types.ts
index 7dd132a..44bc77a 100644
--- a/src/lib/collaboration/types.ts
+++ b/src/lib/collaboration/types.ts
@@ -31,7 +31,7 @@ export interface CollaborationSession {
   createdAt: Date;
   updatedAt: Date;
   ownerId: string;
-  participants: CollaborationParticipant: any[];
+  participants: CollaborationParticipant[];
   status: 'active' | 'scheduled' | 'completed' | 'archived';
   settings: CollaborationSettings;
   content: {
@@ -44,8 +44,8 @@ export interface CollaborationSession {
   metadata: {
     subject?: string;
     keyStage?: string;
-    tags?: string: any[];
-    educationalObjectives?: string: any[];
+    tags?: string[];
+    educationalObjectives?: string[];
     [key: string];
   };
 }
@@ -111,10 +111,10 @@ export interface CollaborativeDocument {
   updatedAt: Date;
   createdBy: string;
   lastEditedBy: string;
-  contributors: string: any[];
-  comments: DocumentComment: any[];
-  versionHistory: DocumentVersion: any[];
-  currentEditors: string: any[];
+  contributors: string[];
+  comments: DocumentComment[];
+  versionHistory: DocumentVersion[];
+  currentEditors: string[];
   status: 'draft' | 'in_review' | 'final';
   metadata: {
     wordCount: number;
@@ -139,8 +139,8 @@ export interface DocumentComment {
   resolved: boolean;
   resolvedBy?: string;
   resolvedAt?: Date;
-  replies: DocumentComment: any[];
-  mentions: string: any[]; // user IDs
+  replies: DocumentComment[];
+  mentions: string[]; // user IDs
 }
 
 // Document version interface
@@ -171,15 +171,15 @@ export interface CollaborativeWhiteboard {
   title: string;
   width: number;
   height: number;
-  elements: WhiteboardElement: any[];
+  elements: WhiteboardElement[];
   background: string;
   version: number;
   createdAt: Date;
   updatedAt: Date;
   createdBy: string;
   lastEditedBy: string;
-  contributors: string: any[];
-  currentEditors: string: any[];
+  contributors: string[];
+  currentEditors: string[];
   status: 'active' | 'archived';
 }
 
@@ -226,19 +226,19 @@ export interface CollaborativeProject {
   sessionId: string;
   title: string;
   description: string;
-  objectives: string: any[];
-  tasks: ProjectTask: any[];
-  resources: ProjectResource: any[];
+  objectives: string[];
+  tasks: ProjectTask[];
+  resources: ProjectResource[];
   timeline: {
     startDate: Date;
     endDate: Date;
-    milestones: ProjectMilestone: any[];
+    milestones: ProjectMilestone[];
   };
   members: {
     userId: string;
     name: string;
     role: string;
-    responsibilities: string: any[];
+    responsibilities: string[];
   }[];
   status: 'planning' | 'in_progress' | 'review' | 'completed';
   createdAt: Date;
@@ -252,13 +252,13 @@ export interface ProjectTask {
   id: string;
   title: string;
   description: string;
-  assignedTo: string: any[];
+  assignedTo: string[];
   status: 'not_started' | 'in_progress' | 'completed' | 'blocked';
   priority: 'low' | 'medium' | 'high';
   dueDate?: Date;
   startDate?: Date;
   completedDate?: Date;
-  dependencies: string: any[]; // IDs of tasks that must be completed first
+  dependencies: string[]; // IDs of tasks that must be completed first
   comments: {
     userId: string;
     userName: string;
@@ -293,7 +293,7 @@ export interface ProjectResource {
   description: string;
   addedBy: string;
   addedAt: Date;
-  tags: string: any[];
+  tags: string[];
 }
 
 // Project milestone interface
@@ -303,8 +303,8 @@ export interface ProjectMilestone {
   description: string;
   dueDate: Date;
   status: 'not_started' | 'in_progress' | 'completed' | 'overdue';
-  associatedTasks: string: any[]; // IDs of tasks associated with this milestone
-  deliverables: string: any[];
+  associatedTasks: string[]; // IDs of tasks associated with this milestone
+  deliverables: string[];
   completedAt?: Date;
 }
 
@@ -318,11 +318,11 @@ export interface DiscussionThread {
   createdBy: string;
   updatedAt: Date;
   category: string;
-  tags: string: any[];
+  tags: string[];
   status: 'active' | 'resolved' | 'archived';
   pinned: boolean;
-  messages: DiscussionMessage: any[];
-  participants: string: any[];
+  messages: DiscussionMessage[];
+  participants: string[];
   views: number;
   lastActivity: Date;
 }
@@ -345,9 +345,9 @@ export interface DiscussionMessage {
   reactions: {
     type: string;
     count: number;
-    users: string: any[];
+    users: string[];
   }[];
-  mentions: string: any[];
+  mentions: string[];
   parentId?: string; // For replies
   edited: boolean;
   pinned: boolean;
@@ -405,7 +405,7 @@ export interface VideoConference {
   breakoutRooms?: {
     id: string;
     name: string;
-    participants: string: any[];
+    participants: string[];
     createdAt: Date;
     endedAt?: Date;
   }[];
diff --git a/src/lib/communication/communicationService.ts b/src/lib/communication/communicationService.ts
index c23b56e..f426511 100644
--- a/src/lib/communication/communicationService.ts
+++ b/src/lib/communication/communicationService.ts
@@ -55,7 +55,7 @@ export class CommunicationService {
     archived?: boolean;
     limit?: number;
     offset?: number;
-  }): Promise<Conversation: any[]> {
+  }): Promise<Conversation[]> {
     try {
       // In a real implementation, this would call an API endpoint
       return []; // Placeholder
@@ -130,7 +130,7 @@ export class CommunicationService {
     offset?: number;
     subject?: string;
     period?: string;
-  }): Promise<ProgressReport: any[]> {
+  }): Promise<ProgressReport[]> {
     try {
       // In a real implementation, this would call an API endpoint
       return []; // Placeholder
@@ -184,7 +184,7 @@ export class CommunicationService {
     updatedById: string;
     updatedByRole: CommunicationRole;
     newProgress?: number;
-    attachments?: Attachment: any[];
+    attachments?: Attachment[];
   }): Promise<SharedGoal> {
     try {
       // In a real implementation, this would call an API endpoint
@@ -274,13 +274,13 @@ export class CommunicationService {
    * Get home strategies
    */
   async getHomeStrategies(options?: {
-    targetAreas?: string: any[];
+    targetAreas?: string[];
     ageMin?: number;
     ageMax?: number;
-    supportNeeds?: string: any[];
+    supportNeeds?: string[];
     limit?: number;
     offset?: number;
-  }): Promise<HomeStrategy: any[]> {
+  }): Promise<HomeStrategy[]> {
     try {
       // In a real implementation, this would call an API endpoint
       return []; // Placeholder
diff --git a/src/lib/communication/types.ts b/src/lib/communication/types.ts
index 2bb174e..72266c9 100644
--- a/src/lib/communication/types.ts
+++ b/src/lib/communication/types.ts
@@ -47,17 +47,17 @@ export interface Message {
   conversationId: string;
   senderId: string;
   senderRole: CommunicationRole;
-  recipientIds: string: any[];
+  recipientIds: string[];
   subject: string;
   content: string;
-  attachments?: Attachment: any[];
+  attachments?: Attachment[];
   priority: MessagePriority;
   status: MessageStatus;
   createdAt: Date;
   updatedAt: Date;
   readAt?: Date;
   isPrivate: boolean;
-  tags?: string: any[];
+  tags?: string[];
 }
 
 /**
@@ -79,9 +79,9 @@ export interface Attachment {
 export interface Conversation {
   id: string;
   title: string;
-  participantIds: string: any[];
+  participantIds: string[];
   participantRoles: Record<string, CommunicationRole>;
-  messages: Message: any[];
+  messages: Message[];
   createdAt: Date;
   updatedAt: Date;
   isArchived: boolean;
@@ -104,15 +104,15 @@ export interface ProgressReport {
   createdAt: Date;
   publishedAt?: Date;
   lastViewedByParent?: Date;
-  academicProgress: AcademicProgressEntry: any[];
+  academicProgress: AcademicProgressEntry[];
   behaviouralNotes?: string;
-  strengths: string: any[];
-  areasForImprovement: string: any[];
-  recommendations: string: any[];
-  nextSteps: string: any[];
+  strengths: string[];
+  areasForImprovement: string[];
+  recommendations: string[];
+  nextSteps: string[];
   parentFeedbackRequested: boolean;
   parentFeedback?: string;
-  attachments?: Attachment: any[];
+  attachments?: Attachment[];
 }
 
 /**
@@ -144,9 +144,9 @@ export interface SharedGoal {
   targetDate?: Date;
   status: 'not_started' | 'in_progress' | 'completed' | 'revised';
   progress: number; // 0-100
-  homeActions: string: any[];
-  schoolActions: string: any[];
-  updates: GoalUpdate: any[];
+  homeActions: string[];
+  schoolActions: string[];
+  updates: GoalUpdate[];
   isArchived: boolean;
 }
 
@@ -161,7 +161,7 @@ export interface GoalUpdate {
   updatedByRole: CommunicationRole;
   updatedAt: Date;
   newProgress?: number;
-  attachments?: Attachment: any[];
+  attachments?: Attachment[];
 }
 
 /**
@@ -177,15 +177,15 @@ export interface Meeting {
   virtualMeetingUrl?: string;
   organizerId: string;
   organizerRole: CommunicationRole;
-  attendeeIds: string: any[];
+  attendeeIds: string[];
   attendeeRoles: Record<string, CommunicationRole>;
-  relatedStudentIds?: string: any[];
-  agenda?: string: any[];
+  relatedStudentIds?: string[];
+  agenda?: string[];
   notes?: string;
   status: 'scheduled' | 'cancelled' | 'completed' | 'rescheduled';
   reminderSent: boolean;
   followUpSent: boolean;
-  attachments?: Attachment: any[];
+  attachments?: Attachment[];
 }
 
 /**
@@ -204,8 +204,8 @@ export interface Celebration {
   category: 'academic' | 'extracurricular' | 'character' | 'effort' | 'other';
   isPublic: boolean;
   kudos: number;
-  comments: CelebrationComment: any[];
-  attachments?: Attachment: any[];
+  comments: CelebrationComment[];
+  attachments?: Attachment[];
 }
 
 /**
@@ -248,20 +248,20 @@ export interface HomeStrategy {
   id: string;
   title: string;
   description: string;
-  targetAreas: string: any[];
-  suggestedActivities: string: any[];
-  resources: string: any[];
+  targetAreas: string[];
+  suggestedActivities: string[];
+  resources: string[];
   timeCommitment: string;
   ageRange: {
     min: number;
     max: number;
   };
-  supportNeeds: string: any[];
+  supportNeeds: string[];
   creatorId: string;
   createdByRole: CommunicationRole;
   createdAt: Date;
   updatedAt: Date;
   effectiveness: number; // 0-5 rating
   feedbackCount: number;
-  attachments?: Attachment: any[];
+  attachments?: Attachment[];
 }
diff --git a/src/lib/compliance/compliance-validator.ts b/src/lib/compliance/compliance-validator.ts
index 05acacc..03c5fd3 100644
--- a/src/lib/compliance/compliance-validator.ts
+++ b/src/lib/compliance/compliance-validator.ts
@@ -20,15 +20,15 @@ export interface ComplianceValidationResult {
 export interface ValidationSummary {
   gdpr: {
     passed: boolean;
-    results: ComplianceValidationResult: any[];
+    results: ComplianceValidationResult[];
   };
   blockchain: {
     passed: boolean;
-    results: ComplianceValidationResult: any[];
+    results: ComplianceValidationResult[];
   };
   copyright: {
     passed: boolean;
-    results: ComplianceValidationResult: any[];
+    results: ComplianceValidationResult[];
   };
 }
 
@@ -39,8 +39,8 @@ export class ComplianceValidator {
   /**
    * Validate GDPR compliance across the platform
    */
-  static async validateGDPRCompliance(): Promise<ComplianceValidationResult: any[]> {
-    const results: ComplianceValidationResult: any[] = [];
+  static async validateGDPRCompliance(): Promise<ComplianceValidationResult[]> {
+    const results: ComplianceValidationResult[] = [];
     
     // Check consent mechanisms
     const consentResult = await this.validateConsentMechanisms();
@@ -76,8 +76,8 @@ export class ComplianceValidator {
   /**
    * Validate blockchain integrity and validation mechanisms
    */
-  static async validateBlockchainIntegrity(): Promise<ComplianceValidationResult: any[]> {
-    const results: ComplianceValidationResult: any[] = [];
+  static async validateBlockchainIntegrity(): Promise<ComplianceValidationResult[]> {
+    const results: ComplianceValidationResult[] = [];
     
     // Check blockchain validation mechanisms
     const validationResult = await this.validateBlockchainValidationMechanisms();
@@ -97,8 +97,8 @@ export class ComplianceValidator {
   /**
    * Validate copyright protection mechanisms
    */
-  static async validateCopyrightProtection(): Promise<ComplianceValidationResult: any[]> {
-    const results: ComplianceValidationResult: any[] = [];
+  static async validateCopyrightProtection(): Promise<ComplianceValidationResult[]> {
+    const results: ComplianceValidationResult[] = [];
     
     // Check content attribution
     const attributionResult = await this.validateContentAttribution();
diff --git a/src/lib/compliance/contentModerationService.ts b/src/lib/compliance/contentModerationService.ts
index 2273f9e..4cc7db1 100644
--- a/src/lib/compliance/contentModerationService.ts
+++ b/src/lib/compliance/contentModerationService.ts
@@ -29,7 +29,7 @@ export class ContentModerationServiceImpl implements ContentModerationService {
   private userFilteringSettings: Map<string, ContentFilteringSettings> = new Map();
   
   // Inappropriate content patterns
-  private inappropriatePatterns: Map<string, RegExp: any: any[]> = new Map();
+  private inappropriatePatterns: Map<string, RegExp[]> = new Map();
   
   /**
    * Constructor for the Content Moderation Service
@@ -386,7 +386,7 @@ export class ContentModerationServiceImpl implements ContentModerationService {
    */
   private initializeInappropriatePatterns(): void {
     // English (UK) patterns
-    const enGBPatterns: RegExp: any[] = [
+    const enGBPatterns: RegExp[] = [
       // High severity patterns
       /\b(hate|violent|explicit|obscene)\b/i,
       
@@ -512,7 +512,7 @@ export class ContentModerationServiceImpl implements ContentModerationService {
    * @param level The filtering level
    * @returns Array of patterns to filter
    */
-  private getFilterPatternsForLevel(level: string): RegExp: any: any[] {
+  private getFilterPatternsForLevel(level: string): RegExp[] {
     switch (level) {
       case 'minimal':
         return [
diff --git a/src/lib/compliance/dfeComplianceService.ts b/src/lib/compliance/dfeComplianceService.ts
index 91669a4..f32681c 100644
--- a/src/lib/compliance/dfeComplianceService.ts
+++ b/src/lib/compliance/dfeComplianceService.ts
@@ -21,16 +21,16 @@ import {
  */
 export class DFEComplianceServiceImpl implements DFEComplianceService {
   // UK Curriculum standards by key stage
-  private curriculumStandards: Map<UKKeyStage, string: any: any[]> = new Map();
+  private curriculumStandards: Map<UKKeyStage, string[]> = new Map();
   
   // Age appropriateness guidelines
-  private ageAppropriatenessGuidelines: Map<AgeAppropriatenessRating, string: any: any[]> = new Map();
+  private ageAppropriatenessGuidelines: Map<AgeAppropriatenessRating, string[]> = new Map();
   
   // Accessibility requirements
-  private accessibilityRequirements: string: any[] = [];
+  private accessibilityRequirements: string[] = [];
   
   // Inclusivity guidelines
-  private inclusivityGuidelines: string: any[] = [];
+  private inclusivityGuidelines: string[] = [];
   
   /**
    * Constructor for the DFE Compliance Service
@@ -52,8 +52,8 @@ export class DFEComplianceServiceImpl implements DFEComplianceService {
   async validateCurriculumAlignment(content, keyStage: UKKeyStage): Promise<{
     isAligned: boolean;
     alignmentScore: number;
-    misalignments: string: any[];
-    recommendations: string: any[];
+    misalignments: string[];
+    recommendations: string[];
   }> {
     console.log(`Validating curriculum alignment for key stage: ${keyStage}`);
     
@@ -96,7 +96,7 @@ export class DFEComplianceServiceImpl implements DFEComplianceService {
   async checkAgeAppropriateness(content, targetAgeRange: { min: number; max: number }): Promise<{
     isAppropriate: boolean;
     appropriatenessScore: number;
-    concerns: string: any[];
+    concerns: string[];
     recommendedAgeRating: AgeAppropriatenessRating;
   }> {
     console.log(`Checking age appropriateness for age range: ${targetAgeRange.min}-${targetAgeRange.max}`);
@@ -136,8 +136,8 @@ export class DFEComplianceServiceImpl implements DFEComplianceService {
   async validateAccessibility(content): Promise<{
     isAccessible: boolean;
     accessibilityScore: number;
-    issues: string: any[];
-    recommendations: string: any[];
+    issues: string[];
+    recommendations: string[];
   }> {
     console.log('Validating accessibility');
     
@@ -178,8 +178,8 @@ export class DFEComplianceServiceImpl implements DFEComplianceService {
   async checkInclusivity(content): Promise<{
     isInclusive: boolean;
     inclusivityScore: number;
-    issues: string: any[];
-    recommendations: string: any[];
+    issues: string[];
+    recommendations: string[];
   }> {
     console.log('Checking inclusivity');
     
diff --git a/src/lib/compliance/gdprComplianceService.ts b/src/lib/compliance/gdprComplianceService.ts
index b2df6fd..5023d89 100644
--- a/src/lib/compliance/gdprComplianceService.ts
+++ b/src/lib/compliance/gdprComplianceService.ts
@@ -50,11 +50,11 @@ export class GDPRComplianceServiceImpl implements GDPRComplianceService {
   private dataBreachLog: Array<{
     id: string;
     description: string;
-    affectedUsers: string: any[];
-    affectedDataCategories: DataProtectionCategory: any[];
+    affectedUsers: string[];
+    affectedDataCategories: DataProtectionCategory[];
     detectionDate: Date;
     reportDate: Date;
-    containmentActions: string: any[];
+    containmentActions: string[];
     severity: 'low' | 'medium' | 'high' | 'critical';
     status: 'detected' | 'contained' | 'reported' | 'resolved';
     resolution: string;
@@ -141,10 +141,10 @@ export class GDPRComplianceServiceImpl implements GDPRComplianceService {
    */
   async handleSubjectAccessRequest(userId: string): Promise<{
     personalData;
-    processingActivities: string: any[];
-    processingPurposes: string: any[];
+    processingActivities: string[];
+    processingPurposes: string[];
     retentionPeriods: Record<string, string>;
-    recipients: string: any[];
+    recipients: string[];
   }> {
     console.log(`Handling subject access request for user: ${userId}`);
     
@@ -155,8 +155,8 @@ export class GDPRComplianceServiceImpl implements GDPRComplianceService {
     const userConsentMap = this.userConsent.get(userId);
     
     // Get the processing activities for which the user has given consent
-    const consentedActivities: string: any[] = [];
-    const processingPurposes: string: any[] = [];
+    const consentedActivities: string[] = [];
+    const processingPurposes: string[] = [];
     const retentionPeriods: Record<string, string> = {};
     
     if (userConsentMap) {
@@ -224,10 +224,10 @@ export class GDPRComplianceServiceImpl implements GDPRComplianceService {
    * @param dataCategories Optional specific data categories to erase
    * @returns The result of the erasure request
    */
-  async handleRightToErasure(userId: string, dataCategories?: DataProtectionCategory: any[]): Promise<{
+  async handleRightToErasure(userId: string, dataCategories?: DataProtectionCategory[]): Promise<{
     success: boolean;
-    erasedCategories: DataProtectionCategory: any[];
-    retainedCategories: DataProtectionCategory: any[];
+    erasedCategories: DataProtectionCategory[];
+    retainedCategories: DataProtectionCategory[];
     retentionReasons: Record<string, string>;
   }> {
     console.log(`Handling right to erasure request for user: ${userId}`);
@@ -236,14 +236,14 @@ export class GDPRComplianceServiceImpl implements GDPRComplianceService {
     // from various systems and databases
     
     // Mock implementation
-    const erasedCategories: DataProtectionCategory: any[] = [
+    const erasedCategories: DataProtectionCategory[] = [
       DataProtectionCategory.PERSONAL,
       DataProtectionCategory.BEHAVIORAL_DATA,
       DataProtectionCategory.COMMUNICATION_DATA
     ];
     
     // Some data categories might be retained due to legal obligations
-    const retainedCategories: DataProtectionCategory: any[] = [
+    const retainedCategories: DataProtectionCategory[] = [
       DataProtectionCategory.EDUCATIONAL_RECORD,
       DataProtectionCategory.ASSESSMENT_DATA
     ];
@@ -408,10 +408,10 @@ export class GDPRComplianceServiceImpl implements GDPRComplianceService {
    */
   async logDataBreach(details: {
     description: string;
-    affectedUsers: string: any[];
-    affectedDataCategories: DataProtectionCategory: any[];
+    affectedUsers: string[];
+    affectedDataCategories: DataProtectionCategory[];
     detectionDate: Date;
-    containmentActions: string: any[];
+    containmentActions: string[];
     severity: 'low' | 'medium' | 'high' | 'critical';
   }): Promise<string> {
     console.log(`Logging data breach: ${details.description}`);
diff --git a/src/lib/compliance/safeguardingService.ts b/src/lib/compliance/safeguardingService.ts
index 1a704e4..368b48d 100644
--- a/src/lib/compliance/safeguardingService.ts
+++ b/src/lib/compliance/safeguardingService.ts
@@ -57,7 +57,7 @@ export class SafeguardingServiceImpl implements SafeguardingService {
     concernType: SafeguardingConcernType;
     description: string;
     reportedBy: string;
-    involvedUsers?: string: any[];
+    involvedUsers?: string[];
     contentReference?: string;
   }): Promise<string> {
     console.log(`Reporting safeguarding concern: ${concern.concernType}`);
@@ -180,7 +180,7 @@ export class SafeguardingServiceImpl implements SafeguardingService {
       severity: 'low' | 'medium' | 'high';
       detectionDate: Date;
     }>;
-    recommendedActions: string: any[];
+    recommendedActions: string[];
   }> {
     console.log(`Monitoring user activity for: ${userId}`);
     
@@ -214,7 +214,7 @@ export class SafeguardingServiceImpl implements SafeguardingService {
     concernType?: SafeguardingConcernType;
     concernLevel?: SafeguardingConcernLevel;
     dateRange?: { start: Date; end: Date };
-  }): Promise<SafeguardingReport: any[]> {
+  }): Promise<SafeguardingReport[]> {
     console.log('Getting safeguarding reports');
     
     // Convert the map to an array
@@ -324,7 +324,7 @@ export class SafeguardingServiceImpl implements SafeguardingService {
     indicator: string;
     severity: 'low' | 'medium' | 'high';
     detectionDate: Date;
-  }>): string: any: any[] {
+  }>): string[] {
     // Count indicators by severity
     const severityCounts = {
       low: 0,
@@ -336,7 +336,7 @@ export class SafeguardingServiceImpl implements SafeguardingService {
       severityCounts[indicator.severity]++;
     }
     
-    const recommendedActions: string: any[] = [];
+    const recommendedActions: string[] = [];
     
     // Generate recommendations based on severity counts
     if (severityCounts.high > 0) {
diff --git a/src/lib/compliance/types.ts b/src/lib/compliance/types.ts
index 853eff8..ac0911d 100644
--- a/src/lib/compliance/types.ts
+++ b/src/lib/compliance/types.ts
@@ -319,29 +319,29 @@ export interface DFEComplianceService {
   validateCurriculumAlignment: (content, keyStage: UKKeyStage) => Promise<{
     isAligned: boolean;
     alignmentScore: number;
-    misalignments: string: any[];
-    recommendations: string: any[];
+    misalignments: string[];
+    recommendations: string[];
   }>;
   
   checkAgeAppropriateness: (content, targetAgeRange: { min: number; max: number }) => Promise<{
     isAppropriate: boolean;
     appropriatenessScore: number;
-    concerns: string: any[];
+    concerns: string[];
     recommendedAgeRating: AgeAppropriatenessRating;
   }>;
   
   validateAccessibility: (content) => Promise<{
     isAccessible: boolean;
     accessibilityScore: number;
-    issues: string: any[];
-    recommendations: string: any[];
+    issues: string[];
+    recommendations: string[];
   }>;
   
   checkInclusivity: (content) => Promise<{
     isInclusive: boolean;
     inclusivityScore: number;
-    issues: string: any[];
-    recommendations: string: any[];
+    issues: string[];
+    recommendations: string[];
   }>;
   
   generateComplianceReport: (contentId: string) => Promise<DFECompliance>;
@@ -364,16 +364,16 @@ export interface GDPRComplianceService {
   
   handleSubjectAccessRequest: (userId: string) => Promise<{
     personalData;
-    processingActivities: string: any[];
-    processingPurposes: string: any[];
+    processingActivities: string[];
+    processingPurposes: string[];
     retentionPeriods: Record<string, string>;
-    recipients: string: any[];
+    recipients: string[];
   }>;
   
-  handleRightToErasure: (userId: string, dataCategories?: DataProtectionCategory: any[]) => Promise<{
+  handleRightToErasure: (userId: string, dataCategories?: DataProtectionCategory[]) => Promise<{
     success: boolean;
-    erasedCategories: DataProtectionCategory: any[];
-    retainedCategories: DataProtectionCategory: any[];
+    erasedCategories: DataProtectionCategory[];
+    retainedCategories: DataProtectionCategory[];
     retentionReasons: Record<string, string>;
   }>;
   
@@ -387,10 +387,10 @@ export interface GDPRComplianceService {
   
   logDataBreach: (details: {
     description: string;
-    affectedUsers: string: any[];
-    affectedDataCategories: DataProtectionCategory: any[];
+    affectedUsers: string[];
+    affectedDataCategories: DataProtectionCategory[];
     detectionDate: Date;
-    containmentActions: string: any[];
+    containmentActions: string[];
     severity: 'low' | 'medium' | 'high' | 'critical';
   }) => Promise<string>;
 }
@@ -403,7 +403,7 @@ export interface SafeguardingService {
     concernType: SafeguardingConcernType;
     description: string;
     reportedBy: string;
-    involvedUsers?: string: any[];
+    involvedUsers?: string[];
     contentReference?: string;
   }) => Promise<string>;
   
@@ -427,7 +427,7 @@ export interface SafeguardingService {
       severity: 'low' | 'medium' | 'high';
       detectionDate: Date;
     }>;
-    recommendedActions: string: any[];
+    recommendedActions: string[];
   }>;
   
   getSafeguardingReports: (filters?: {
@@ -435,7 +435,7 @@ export interface SafeguardingService {
     concernType?: SafeguardingConcernType;
     concernLevel?: SafeguardingConcernLevel;
     dateRange?: { start: Date; end: Date };
-  }) => Promise<SafeguardingReport: any[]>;
+  }) => Promise<SafeguardingReport[]>;
   
   getSafeguardingPolicies: () => Promise<Array<{
     id: string;
@@ -516,18 +516,18 @@ export interface AgeVerificationService {
  */
 export interface DataProtectionService {
   classifyData: (data) => Promise<{
-    categories: DataProtectionCategory: any[];
+    categories: DataProtectionCategory[];
     sensitivityLevel: 'low' | 'medium' | 'high';
-    personalDataFields: string: any[];
-    specialCategoryFields: string: any[];
+    personalDataFields: string[];
+    specialCategoryFields: string[];
   }>;
   
   applyDataMinimization: (data, purpose: string) => Promise<{
     minimizedData;
-    removedFields: string: any[];
+    removedFields: string[];
   }>;
   
-  applyPseudonymization: (data, fields: string: any[]) => Promise<{
+  applyPseudonymization: (data, fields: string[]) => Promise<{
     pseudonymizedData;
     mappingKey: string;
   }>;
@@ -548,7 +548,7 @@ export interface DataProtectionService {
   applyRetentionPolicy: (dataCategory: DataProtectionCategory) => Promise<{
     retentionPeriod: DataRetentionPeriod;
     retentionJustification: string;
-    archivingRequirements: string: any[];
+    archivingRequirements: string[];
     deletionMethod: string;
   }>;
   
diff --git a/src/lib/content-creation/contentCreationService.ts b/src/lib/content-creation/contentCreationService.ts
index 82c8e8c..ef98ee4 100644
--- a/src/lib/content-creation/contentCreationService.ts
+++ b/src/lib/content-creation/contentCreationService.ts
@@ -219,7 +219,7 @@ export class ContentCreationService {
   /**
    * List content based on filters
    */
-  public async listContent(filter: ContentLibraryFilter): Promise<ContentMetadata: any[]> {
+  public async listContent(filter: ContentLibraryFilter): Promise<ContentMetadata[]> {
     try {
       const response = await fetch(`${this.apiUrl}/api/content-creation/content/list`, {
         method: 'POST',
@@ -316,7 +316,7 @@ export class ContentCreationService {
   /**
    * Get content templates
    */
-  public async getTemplates(filter?: Partial<ContentTemplate>): Promise<ContentTemplate: any[]> {
+  public async getTemplates(filter?: Partial<ContentTemplate>): Promise<ContentTemplate[]> {
     try {
       const response = await fetch(`${this.apiUrl}/api/content-creation/templates`, {
         method: 'POST',
@@ -366,7 +366,7 @@ export class ContentCreationService {
   /**
    * Get default templates for different content types and key stages
    */
-  public async getDefaultTemplates(): Promise<Record<ContentType, Record<KeyStage, ContentTemplate: any: any[]>>> {
+  public async getDefaultTemplates(): Promise<Record<ContentType, Record<KeyStage, ContentTemplate[]>>> {
     try {
       const response = await fetch(`${this.apiUrl}/api/content-creation/templates/default`, {
         method: 'GET',
@@ -392,8 +392,8 @@ export class ContentCreationService {
    */
   public async adaptContent(
     contentId: string, 
-    targetLearningStyles: LearningStyle: any[], 
-    senSupport?: SENCategory: any[]
+    targetLearningStyles: LearningStyle[], 
+    senSupport?: SENCategory[]
   ): Promise<Partial<ContentDocument>> {
     try {
       const response = await fetch(`${this.apiUrl}/api/content-creation/ai/adapt`, {
@@ -480,8 +480,8 @@ export class ContentCreationService {
    */
   public async checkCurriculumAlignment(contentId: string): Promise<{
     alignmentScore: number;
-    suggestions: string: any[];
-    curriculumLinks: string: any[];
+    suggestions: string[];
+    curriculumLinks: string[];
   }> {
     try {
       const response = await fetch(`${this.apiUrl}/api/content-creation/content/${contentId}/curriculum-check`, {
diff --git a/src/lib/content-creation/types.ts b/src/lib/content-creation/types.ts
index 820e396..298f19a 100644
--- a/src/lib/content-creation/types.ts
+++ b/src/lib/content-creation/types.ts
@@ -108,23 +108,23 @@ export interface ContentMetadata {
   contentType: ContentType;
   keyStage: KeyStage;
   subject: string;
-  topics: string: any[];
-  learningObjectives: string: any[];
-  targetLearningStyles: LearningStyle: any[];
-  senSupport?: SENCategory: any[];
+  topics: string[];
+  learningObjectives: string[];
+  targetLearningStyles: LearningStyle[];
+  senSupport?: SENCategory[];
   authorId: string;
   createdAt: Date;
   updatedAt: Date;
   estimatedDuration?: number; // in minutes
   difficulty?: 'beginner' | 'intermediate' | 'advanced';
-  keywords: string: any[];
+  keywords: string[];
   permission: ContentPermission;
-  collaborators?: string: any[];
+  collaborators?: string[];
   version: number;
   isPublished: boolean;
   publishedAt?: Date;
-  curriculumLinks?: string: any[];
-  resourceLinks?: string: any[];
+  curriculumLinks?: string[];
+  resourceLinks?: string[];
 }
 
 /**
@@ -225,13 +225,13 @@ export interface QuestionElement extends ContentElement {
   type: ContentElementType.QUESTION;
   questionType: QuestionType;
   question: string;
-  options?: string: any[];
-  correctAnswer?: string | string: any: any[];
+  options?: string[];
+  correctAnswer?: string | string[];
   explanation?: string;
   points?: number;
   difficulty?: 'easy' | 'medium' | 'hard';
   timeLimit?: number; // in seconds
-  hints?: string: any[];
+  hints?: string[];
   feedback?: {
     correct?: string;
     incorrect?: string;
@@ -255,8 +255,8 @@ export interface InteractiveElement extends ContentElement {
  */
 export interface TableElement extends ContentElement {
   type: ContentElementType.TABLE;
-  headers: string: any[];
-  rows: string: any[][];
+  headers: string[];
+  rows: string[][];
   caption?: string;
   style?: {
     width?: string;
@@ -273,12 +273,12 @@ export interface ChartElement extends ContentElement {
   type: ContentElementType.CHART;
   chartType: 'bar' | 'line' | 'pie' | 'scatter' | 'radar';
   data: {
-    labels: string: any[];
+    labels: string[];
     datasets: {
       label: string;
-      data: number: any[];
-      backgroundColor?: string | string: any: any[];
-      borderColor?: string | string: any: any[];
+      data: number[];
+      backgroundColor?: string | string[];
+      borderColor?: string | string[];
     }[];
   };
   options?: Record<string, any>;
@@ -295,8 +295,8 @@ export interface ContentTemplate {
   name: string;
   description: string;
   contentType: ContentType;
-  keyStage: KeyStage: any[];
-  subjects: string: any[];
+  keyStage: KeyStage[];
+  subjects: string[];
   structure: {
     sections: {
       title: string;
@@ -315,7 +315,7 @@ export interface ContentTemplate {
     isPublic: boolean;
     usageCount: number;
     rating?: number;
-    tags: string: any[];
+    tags: string[];
   };
   previewImage?: string;
 }
@@ -325,7 +325,7 @@ export interface ContentTemplate {
  */
 export interface ContentDocument {
   metadata: ContentMetadata;
-  elements: ContentElement: any[];
+  elements: ContentElement[];
   version: number;
   settings: {
     theme?: string;
@@ -358,9 +358,9 @@ export interface AIGenerationPrompt {
   subject: string;
   topic: string;
   keyStage: KeyStage;
-  learningObjectives: string: any[];
-  targetLearningStyles?: LearningStyle: any[];
-  senSupport?: SENCategory: any[];
+  learningObjectives: string[];
+  targetLearningStyles?: LearningStyle[];
+  senSupport?: SENCategory[];
   difficulty?: 'beginner' | 'intermediate' | 'advanced';
   duration?: number; // in minutes
   additionalInstructions?: string;
@@ -387,18 +387,18 @@ export interface ContentSharingInvitation {
  * Content library filter interface
  */
 export interface ContentLibraryFilter {
-  contentTypes?: ContentType: any[];
-  keyStages?: KeyStage: any[];
-  subjects?: string: any[];
-  topics?: string: any[];
-  learningStyles?: LearningStyle: any[];
-  senCategories?: SENCategory: any[];
+  contentTypes?: ContentType[];
+  keyStages?: KeyStage[];
+  subjects?: string[];
+  topics?: string[];
+  learningStyles?: LearningStyle[];
+  senCategories?: SENCategory[];
   dateRange?: {
     start: Date;
     end: Date;
   };
-  authors?: string: any[];
-  permissions?: ContentPermission: any[];
+  authors?: string[];
+  permissions?: ContentPermission[];
   isPublished?: boolean;
   searchTerm?: string;
   sortBy?: 'title' | 'createdAt' | 'updatedAt' | 'rating';
@@ -439,10 +439,10 @@ export interface ContentCreationService {
   deleteContent(id: string): Promise<void>;
   publishContent(id: string): Promise<void>;
   unpublishContent(id: string): Promise<void>;
-  listContent(filter: ContentLibraryFilter): Promise<ContentMetadata: any[]>;
+  listContent(filter: ContentLibraryFilter): Promise<ContentMetadata[]>;
   shareContent(invitation: ContentSharingInvitation): Promise<void>;
   exportContent(id: string, options: ContentExportOptions): Promise<string>;
   generateWithAI(prompt: AIGenerationPrompt): Promise<Partial<ContentDocument>>;
-  getTemplates(filter?: Partial<ContentTemplate>): Promise<ContentTemplate: any[]>;
+  getTemplates(filter?: Partial<ContentTemplate>): Promise<ContentTemplate[]>;
   createTemplate(template: Omit<ContentTemplate, 'id'>): Promise<string>;
 }
diff --git a/src/lib/db-maintenance.ts b/src/lib/db-maintenance.ts
index b083c26..8843345 100644
--- a/src/lib/db-maintenance.ts
+++ b/src/lib/db-maintenance.ts
@@ -40,7 +40,7 @@ export interface DatabaseHealthCheckResult {
     message: string;
     details?;
   }>;
-  recommendations?: string: any[];
+  recommendations?: string[];
   error?: string;
 }
 
@@ -52,7 +52,7 @@ export async function checkDatabaseHealth(): Promise<DatabaseHealthCheckResult>
   try {
     const startTime = Date.now();
     const issues: Array<{type: string; severity; message: string; details?}> = [];
-    const recommendations: string: any[] = [];
+    const recommendations: string[] = [];
     
     // Check basic connectivity
     let connectionStatus = false;
@@ -364,11 +364,11 @@ export interface DatabaseSchemaValidationResult {
   status: 'valid' | 'error' | 'warning';
   message: string;
   timestamp: string;
-  missingModels?: string: any[];
-  extraModels?: string: any[];
+  missingModels?: string[];
+  extraModels?: string[];
   modelIssues?: Array<{
     model: string;
-    issues: string: any[];
+    issues: string[];
   }>;
   error?: string;
 }
@@ -395,10 +395,10 @@ export async function validateDatabaseSchema(): Promise<DatabaseSchemaValidation
     const extraModels = actualModels.filter(model => !expectedModels.includes(model));
     
     // Check for model issues
-    const modelIssues: Array<{model: string; issues: string: any[]}> = [];
+    const modelIssues: Array<{model: string; issues: string[]}> = [];
     
     for (const model of introspection.models) {
-      const issues: string: any[] = [];
+      const issues: string[] = [];
       
       // Check for required fields
       if (model.name === 'User' && !model.fields.some(field => field.name === 'email')) {
@@ -781,7 +781,7 @@ export async function collectDatabaseUsageStatistics(
     const operations = { reads: 0, writes: 0, deletes: 0 };
     const models: Record<string, { reads: number; writes: number; deletes: number }> = {};
     const users: Record<string, { operations: number; lastActive: string }> = {};
-    const queryTimes: number: any[] = [];
+    const queryTimes: number[] = [];
     let slowestQueryTimeMs = 0;
     let slowestQueryModel = '';
     
@@ -891,23 +891,23 @@ export async function collectDatabaseUsageStatistics(
 export interface DatabaseMaintenanceSchedule {
   daily: {
     time: string;
-    tasks: string: any[];
+    tasks: string[];
   };
   weekly: {
     day: string;
     time: string;
-    tasks: string: any[];
+    tasks: string[];
   };
   monthly: {
     day: number;
     time: string;
-    tasks: string: any[];
+    tasks: string[];
   };
   quarterly: {
-    months: number: any[];
+    months: number[];
     day: number;
     time: string;
-    tasks: string: any[];
+    tasks: string[];
   };
 }
 
diff --git a/src/lib/db-utils.ts b/src/lib/db-utils.ts
index c3d1202..2b6dd40 100644
--- a/src/lib/db-utils.ts
+++ b/src/lib/db-utils.ts
@@ -73,7 +73,7 @@ export interface PaginationParams {
  */
 export interface SearchParams {
   query?: string;
-  fields?: string: any[];
+  fields?: string[];
   filters?: Record<string, any>;
 }
 
@@ -81,7 +81,7 @@ export interface SearchParams {
  * Paginated result interface
  */
 export interface PaginatedResult<T> {
-  data: T: any[];
+  data: T[];
   pagination: {
     total: number;
     page: number;
@@ -144,7 +144,7 @@ export async function getPaginatedResults<T>(
   const hasMore = page < pageCount;
   
   return {
-    data: data as T: any: any[],
+    data: data as T[],
     pagination: {
       total,
       page,
@@ -161,7 +161,7 @@ export async function getPaginatedResults<T>(
 export interface BulkOperationResult {
   success: number;
   failed: number;
-  errors: any: any[];
+  errors: any[];
 }
 
 /**
@@ -171,7 +171,7 @@ export interface BulkOperationResult {
  * @param validator Optional validation function
  * @returns Bulk operation result
  */
-export async function bulkCreate(model: string, data: any: any[], validator?: (item) => any
+export async function bulkCreate(model: string, data: any[], validator?: (item: any) => any
 ): Promise<BulkOperationResult> {
   const result: BulkOperationResult = {
     success: 0,
@@ -212,8 +212,8 @@ export async function bulkCreate(model: string, data: any: any[], validator?: (i
  */
 export async function bulkUpdate(
   model: string,
-  data: { id: string; data }[],
-  validator?: (item) => any
+  data: { id: string; data: any }[],
+  validator?: (item: any) => any
 ): Promise<BulkOperationResult> {
   const result: BulkOperationResult = {
     success: 0,
@@ -252,7 +252,7 @@ export async function bulkUpdate(
  * @param ids Array of record IDs to delete
  * @returns Bulk operation result
  */
-export async function bulkDelete(model: string, ids: string: any[]): Promise<BulkOperationResult> {
+export async function bulkDelete(model: string, ids: string[]): Promise<BulkOperationResult> {
   const result: BulkOperationResult = {
     success: 0,
     failed: 0,
@@ -421,405 +421,3 @@ export async function getStudentLearningProfile(studentId: string) {
     };
   });
 }
-
-/**
- * Get teacher dashboard data
- * @param teacherId Teacher ID
- * @returns Teacher dashboard data
- */
-export async function getTeacherDashboardData(teacherId: string) {
-  return safeDbOperation(async () => {
-    const teacher = await prisma.user.findUnique({
-      where: { id: teacherId, role: 'TEACHER' },
-      include: {
-        profile: true
-      }
-    });
-    
-    if (!teacher) {
-      throw new DatabaseError('Teacher not found', DatabaseErrorType.NOT_FOUND);
-    }
-    
-    // Get teacher's assessments
-    const assessments = await prisma.assessment.findMany({
-      where: { createdBy: { id: teacherId } },
-      include: {
-        _count: {
-          select: { results: true }
-        }
-      },
-      take: 5,
-      orderBy: { createdAt: 'desc' }
-    });
-    
-    // Get teacher's resources
-    const resources = await prisma.resource.findMany({
-      where: { createdBy: { id: teacherId } },
-      take: 5,
-      orderBy: { createdAt: 'desc' }
-    });
-    
-    // Get teacher's curriculum plans
-    const curriculumPlans = await prisma.curriculumPlan.findMany({
-      where: { createdBy: { id: teacherId } },
-      take: 5,
-      orderBy: { createdAt: 'desc' }
-    });
-    
-    // Get recent communications
-    const communications = await prisma.parentTeacherCommunication.findMany({
-      where: { teacher: { id: teacherId } },
-      include: {
-        parent: {
-          select: {
-            id: true,
-            name: true,
-            profile: {
-              select: {
-                title: true,
-                firstName: true,
-                lastName: true
-              }
-            }
-          }
-        },
-        student: {
-          select: {
-            id: true,
-            name: true,
-            profile: {
-              select: {
-                firstName: true,
-                lastName: true,
-                yearGroup: true
-              }
-            }
-          }
-        }
-      },
-      take: 5,
-      orderBy: { date: 'desc' }
-    });
-    
-    // Remove sensitive data
-    const { password, ...userWithoutPassword } = teacher;
-    
-    // Return dashboard data
-    return {
-      teacher: userWithoutPassword,
-      recentActivity: {
-        assessments,
-        resources,
-        curriculumPlans,
-        communications
-      }
-    };
-  });
-}
-
-/**
- * Get educational psychologist dashboard data
- * @param edPsychId Educational Psychologist ID
- * @returns Educational Psychologist dashboard data
- */
-export async function getEdPsychDashboardData(edPsychId: string) {
-  return safeDbOperation(async () => {
-    const edPsych = await prisma.user.findUnique({
-      where: { id: edPsychId, role: 'EDUCATIONAL_PSYCHOLOGIST' },
-      include: {
-        profile: true
-      }
-    });
-    
-    if (!edPsych) {
-      throw new DatabaseError('Educational Psychologist not found', DatabaseErrorType.NOT_FOUND);
-    }
-    
-    // Get recent SEMH assessments
-    const semhAssessments = await prisma.semhAssessment.findMany({
-      where: { assessor: { id: edPsychId } },
-      include: {
-        student: {
-          select: {
-            id: true,
-            name: true,
-            profile: {
-              select: {
-                firstName: true,
-                lastName: true,
-                yearGroup: true,
-                school: true
-              }
-            }
-          }
-        }
-      },
-      take: 5,
-      orderBy: { dateCompleted: 'desc' }
-    });
-    
-    // Get recent biofeedback sessions
-    const biofeedbackSessions = await prisma.biofeedbackSession.findMany({
-      where: { facilitator: { id: edPsychId } },
-      include: {
-        student: {
-          select: {
-            id: true,
-            name: true,
-            profile: {
-              select: {
-                firstName: true,
-                lastName: true,
-                yearGroup: true,
-                school: true
-              }
-            }
-          }
-        }
-      },
-      take: 5,
-      orderBy: { date: 'desc' }
-    });
-    
-    // Get upcoming follow-ups
-    const upcomingFollowUps = await prisma.semhAssessment.findMany({
-      where: { 
-        assessor: { id: edPsychId },
-        followUpDate: {
-          gte: new Date()
-        }
-      },
-      include: {
-        student: {
-          select: {
-            id: true,
-            name: true,
-            profile: {
-              select: {
-                firstName: true,
-                lastName: true,
-                yearGroup: true,
-                school: true
-              }
-            }
-          }
-        }
-      },
-      take: 5,
-      orderBy: { followUpDate: 'asc' }
-    });
-    
-    // Remove sensitive data
-    const { password, ...userWithoutPassword } = edPsych;
-    
-    // Return dashboard data
-    return {
-      edPsych: userWithoutPassword,
-      recentActivity: {
-        semhAssessments,
-        biofeedbackSessions,
-        upcomingFollowUps
-      }
-    };
-  });
-}
-
-/**
- * Get parent dashboard data
- * @param parentId Parent ID
- * @returns Parent dashboard data
- */
-export async function getParentDashboardData(parentId: string) {
-  return safeDbOperation(async () => {
-    const parent = await prisma.user.findUnique({
-      where: { id: parentId, role: 'PARENT' },
-      include: {
-        profile: true,
-        children: {
-          include: {
-            profile: true
-          }
-        }
-      }
-    });
-    
-    if (!parent) {
-      throw new DatabaseError('Parent not found', DatabaseErrorType.NOT_FOUND);
-    }
-    
-    // Get children IDs
-    const childrenIds = parent.children.map(child => child.id);
-    
-    // Get recent assessment results
-    const assessmentResults = await prisma.assessmentResult.findMany({
-      where: { 
-        student: { 
-          id: { in: childrenIds } 
-        } 
-      },
-      include: {
-        assessment: true,
-        student: {
-          select: {
-            id: true,
-            name: true,
-            profile: {
-              select: {
-                firstName: true,
-                lastName: true,
-                yearGroup: true,
-                school: true
-              }
-            }
-          }
-        }
-      },
-      take: 10,
-      orderBy: { completedAt: 'desc' }
-    });
-    
-    // Get recent communications
-    const communications = await prisma.parentTeacherCommunication.findMany({
-      where: { 
-        parent: { id: parentId } 
-      },
-      include: {
-        teacher: {
-          select: {
-            id: true,
-            name: true,
-            profile: {
-              select: {
-                title: true,
-                firstName: true,
-                lastName: true
-              }
-            }
-          }
-        },
-        student: {
-          select: {
-            id: true,
-            name: true,
-            profile: {
-              select: {
-                firstName: true,
-                lastName: true,
-                yearGroup: true,
-                school: true
-              }
-            }
-          }
-        }
-      },
-      take: 5,
-      orderBy: { date: 'desc' }
-    });
-    
-    // Remove sensitive data
-    const { password, ...userWithoutPassword } = parent;
-    const children = parent.children.map(child => {
-      const { password, ...childWithoutPassword } = child;
-      return childWithoutPassword;
-    });
-    
-    // Return dashboard data
-    return {
-      parent: {
-        ...userWithoutPassword,
-        children
-      },
-      recentActivity: {
-        assessmentResults,
-        communications
-      }
-    };
-  });
-}
-
-// Database health check
-export async function checkDatabaseConnection() {
-  try {
-    // Simple query to check if database is accessible
-    await prisma.$queryRaw`SELECT 1`;
-    return true;
-  } catch (error) {
-    console.error('Database connection error:', error);
-    return false;
-  }
-}
-
-// Middleware for database error handling
-export function withDatabaseErrorHandling(
-  handler: (req: NextRequest) => Promise<NextResponse>
-) {
-  return async (req: NextRequest) => {
-    try {
-      return await handler(req);
-    } catch (error) {
-      console.error('Database operation error:', error);
-      
-      // Handle DatabaseError instances
-      if (error instanceof DatabaseError) {
-        switch (error.type) {
-          case DatabaseErrorType.NOT_FOUND:
-            return NextResponse.json(
-              { error: 'Record not found', details: error.message },
-              { status: 404 }
-            );
-          case DatabaseErrorType.DUPLICATE:
-            return NextResponse.json(
-              { error: 'Duplicate record', details: error.message },
-              { status: 409 }
-            );
-          case DatabaseErrorType.VALIDATION:
-            return NextResponse.json(
-              { error: 'Validation error', details: error.message },
-              { status: 400 }
-            );
-          case DatabaseErrorType.PERMISSION:
-            return NextResponse.json(
-              { error: 'Permission denied', details: error.message },
-              { status: 403 }
-            );
-          case DatabaseErrorType.CONNECTION:
-            return NextResponse.json(
-              { error: 'Database connection error', details: error.message },
-              { status: 503 }
-            );
-          default:
-            return NextResponse.json(
-              { error: 'Database operation failed', details: error.message },
-              { status: 500 }
-            );
-        }
-      }
-      
-      // Handle Prisma errors
-      if (error.code) {
-        if (error.code === 'P2025') {
-          return NextResponse.json(
-            { error: 'Record not found' },
-            { status: 404 }
-          );
-        } else if (error.code === 'P2002') {
-          return NextResponse.json(
-            { error: 'A record with this information already exists' },
-            { status: 409 }
-          );
-        } else if (error.code === 'P2000') {
-          return NextResponse.json(
-            { error: 'Input value too long' },
-            { status: 400 }
-          );
-        }
-      }
-      
-      // Generic error
-      return NextResponse.json(
-        { error: 'Database operation failed' },
-        { status: 500 }
-      );
-    }
-  };
-}
diff --git a/src/lib/events.ts b/src/lib/events.ts
index 694804a..f846942 100644
--- a/src/lib/events.ts
+++ b/src/lib/events.ts
@@ -31,7 +31,7 @@ export interface Event {
 
 // Event emitter
 class EventEmitter {
-  private listeners: Record<string, Function: any: any[]> = {};
+  private listeners: Record<string, Function[]> = {};
 
   on(eventType: string, callback: Function) {
     if (!this.listeners[eventType]) {
diff --git a/src/lib/heygen/cost-management.ts b/src/lib/heygen/cost-management.ts
index 099254b..e32b4ec 100644
--- a/src/lib/heygen/cost-management.ts
+++ b/src/lib/heygen/cost-management.ts
@@ -297,7 +297,7 @@ export async function getVideoForUser(params: VideoGenerationParams): Promise<Vi
  * Pre-generate common navigation videos for the free tier
  * This should be run as a scheduled job to build up the library of free videos
  */
-export async function preGenerateCommonVideos(navigationScripts: NavigationScript: any[]): Promise<void> {
+export async function preGenerateCommonVideos(navigationScripts: NavigationScript[]): Promise<void> {
   for (const script of navigationScripts) {
     const cacheKey = generateVideoCacheKey({
       text: script.text,
@@ -358,7 +358,7 @@ export async function preGenerateCommonVideos(navigationScripts: NavigationScrip
  * Get a list of pre-generated videos for a specific category
  * Used to populate the UI with available free videos
  */
-export async function getPreGeneratedVideosByCategory(category: string): Promise<PreGeneratedVideo: any[]> {
+export async function getPreGeneratedVideosByCategory(category: string): Promise<PreGeneratedVideo[]> {
   const videos = await db.preGeneratedVideo.findMany({
     where: { category },
     select: {
diff --git a/src/lib/heygen/heygen-api.ts b/src/lib/heygen/heygen-api.ts
index 497b4ef..d121900 100644
--- a/src/lib/heygen/heygen-api.ts
+++ b/src/lib/heygen/heygen-api.ts
@@ -114,7 +114,7 @@ export class HeygenAPI {
   /**
    * Get all available avatars
    */
-  public async getAvatars(): Promise<HeygenAvatar: any[]> {
+  public async getAvatars(): Promise<HeygenAvatar[]> {
     this.checkInitialized();
     try {
       const response = await this.axiosInstance.get('/v1/avatars');
@@ -128,7 +128,7 @@ export class HeygenAPI {
   /**
    * Get all videos for the account
    */
-  public async getVideos(): Promise<HeygenVideo: any[]> {
+  public async getVideos(): Promise<HeygenVideo[]> {
     this.checkInitialized();
     try {
       const response = await this.axiosInstance.get('/v1/videos');
@@ -191,7 +191,7 @@ export class HeygenAPI {
   /**
    * Get available voices
    */
-  public async getVoices(): Promise<HeygenVoice: any[]> {
+  public async getVoices(): Promise<HeygenVoice[]> {
     this.checkInitialized();
     try {
       const response = await this.axiosInstance.get('/v1/voices');
diff --git a/src/lib/heygen/heygen-service.ts b/src/lib/heygen/heygen-service.ts
index 616763c..a544923 100644
--- a/src/lib/heygen/heygen-service.ts
+++ b/src/lib/heygen/heygen-service.ts
@@ -52,7 +52,7 @@ export class HeygenService {
   /**
    * Get all available avatars
    */
-  public async getAvatars(): Promise<HeygenAvatar: any[]> {
+  public async getAvatars(): Promise<HeygenAvatar[]> {
     this.checkInitialized();
     return this.heygenApi.getAvatars();
   }
@@ -60,7 +60,7 @@ export class HeygenService {
   /**
    * Get all videos
    */
-  public async getAllVideos(): Promise<HeyGenVideo: any[]> {
+  public async getAllVideos(): Promise<HeyGenVideo[]> {
     this.checkInitialized();
     return this.heygenApi.getVideos();
   }
@@ -69,7 +69,7 @@ export class HeygenService {
    * Get videos for a specific user
    * @param userId User ID
    */
-  public async getUserVideos(userId: string): Promise<HeyGenVideo: any[]> {
+  public async getUserVideos(userId: string): Promise<HeyGenVideo[]> {
     this.checkInitialized();
     
     try {
@@ -189,7 +189,7 @@ export class HeygenService {
   /**
    * Get available voices
    */
-  public async getVoices(): Promise<any: any[]> {
+  public async getVoices(): Promise<any[]> {
     this.checkInitialized();
     return this.heygenApi.getVoices();
   }
diff --git a/src/lib/i18n-utils.tsx b/src/lib/i18n-utils.tsx
index 0a20c3f..5aa1f3c 100644
--- a/src/lib/i18n-utils.tsx
+++ b/src/lib/i18n-utils.tsx
@@ -188,7 +188,7 @@ let isInitialized = false;
  */
 export const initializeI18n = async (
   initialLanguage?: SupportedLanguage,
-  preloadLanguages: SupportedLanguage: any[] = []
+  preloadLanguages: SupportedLanguage[] = []
 ): Promise<void> => {
   if (isInitialized) {
     return;
@@ -330,7 +330,7 @@ export const getLanguageDirection = (language: SupportedLanguage): LanguageDirec
 /**
  * Get all available languages
  */
-export const getAvailableLanguages = (): LanguageInfo: any: any[] => {
+export const getAvailableLanguages = (): LanguageInfo[] => {
   return Object.values(LANGUAGE_INFO);
 };
 
diff --git a/src/lib/i18n/culturalContextService.ts b/src/lib/i18n/culturalContextService.ts
index 05eaebe..c89a262 100644
--- a/src/lib/i18n/culturalContextService.ts
+++ b/src/lib/i18n/culturalContextService.ts
@@ -339,15 +339,15 @@ export class CulturalContextService {
     accessibilityOptions?: MultilingualAccessibilityOptions
   ): Promise<{
     adaptedContent: string,
-    culturalNotes: string: any[],
-    adaptationsMade: string: any[]
+    culturalNotes: string[],
+    adaptationsMade: string[]
   }> {
     try {
       // In a real implementation, this would use more sophisticated adaptation
       // For now, we'll use a simple approach with mock data
       
-      const culturalNotes: string: any[] = [];
-      const adaptationsMade: string: any[] = [];
+      const culturalNotes: string[] = [];
+      const adaptationsMade: string[] = [];
       const adaptedContent = content;
       
       // Get cultural context
diff --git a/src/lib/i18n/i18nService.ts b/src/lib/i18n/i18nService.ts
index 8994f66..2ef4872 100644
--- a/src/lib/i18n/i18nService.ts
+++ b/src/lib/i18n/i18nService.ts
@@ -105,14 +105,14 @@ export class I18nService {
   /**
    * Get all supported languages
    */
-  public getSupportedLanguages(): LanguageMetadata: any: any[] {
+  public getSupportedLanguages(): LanguageMetadata[] {
     return Array.from(this.languageMetadata.values());
   }
   
   /**
    * Get enabled languages
    */
-  public getEnabledLanguages(): LanguageMetadata: any: any[] {
+  public getEnabledLanguages(): LanguageMetadata[] {
     return Array.from(this.languageMetadata.values())
       .filter(lang => lang.isEnabled);
   }
diff --git a/src/lib/i18n/types.ts b/src/lib/i18n/types.ts
index 0f35eb4..00a8503 100644
--- a/src/lib/i18n/types.ts
+++ b/src/lib/i18n/types.ts
@@ -107,7 +107,7 @@ export interface TranslationEntry {
  */
 export interface TranslationNamespaceData {
   namespace: TranslationNamespace;
-  translations: TranslationEntry: any[];
+  translations: TranslationEntry[];
   // Added for expansion
   completionPercentage?: number; // Percentage of completed translations
   lastUpdated?: Date; // When this namespace was last updated
@@ -118,10 +118,10 @@ export interface TranslationNamespaceData {
  */
 export interface LanguagePack {
   language: SupportedLanguage;
-  namespaces: TranslationNamespaceData: any[];
+  namespaces: TranslationNamespaceData[];
   // Added for expansion
   version?: string; // Version of the language pack
-  contributors?: string: any[]; // People who contributed to translations
+  contributors?: string[]; // People who contributed to translations
   lastUpdated?: Date; // When this pack was last updated
   completionStatus?: 'complete' | 'partial' | 'in-progress'; // Overall completion status
 }
@@ -132,7 +132,7 @@ export interface LanguagePack {
 export interface UserLanguagePreferences {
   userId: string;
   primaryLanguage: SupportedLanguage;
-  secondaryLanguages: SupportedLanguage: any[];
+  secondaryLanguages: SupportedLanguage[];
   autoDetect: boolean;
   translateContent: boolean;
   translateUserContent: boolean;
@@ -142,7 +142,7 @@ export interface UserLanguagePreferences {
   preferHumanTranslation: boolean; // Preference for human vs machine translation
   showOriginalText: boolean; // Whether to show original text alongside translation
   translationQualityFeedback: boolean; // Whether to collect feedback on translations
-  specializedVocabulary?: string: any[]; // User-specific vocabulary to maintain
+  specializedVocabulary?: string[]; // User-specific vocabulary to maintain
 }
 
 /**
@@ -160,7 +160,7 @@ export interface TranslationMemoryEntry {
   domain?: string; // Educational domain (math, science, etc.)
   qualityRating?: number; // Rating of translation quality (1-5)
   isVerified?: boolean; // Whether this translation has been verified
-  alternatives?: string: any[]; // Alternative translations
+  alternatives?: string[]; // Alternative translations
   notes?: string; // Notes about this translation
 }
 
@@ -194,15 +194,15 @@ export interface TranslationResponse {
   sourceLanguage: SupportedLanguage;
   targetLanguage: SupportedLanguage;
   confidence?: number;
-  alternatives?: string: any[];
+  alternatives?: string[];
   // Added for expansion
   engine?: string; // Translation engine used
   processingTime?: number; // Time taken to translate in ms
   characterCount?: number; // Number of characters translated
-  glossaryTermsUsed?: string: any[]; // Glossary terms used in translation
+  glossaryTermsUsed?: string[]; // Glossary terms used in translation
   qualityEstimate?: number; // Estimated quality score (0-1)
   needsReview?: boolean; // Whether this translation needs human review
-  culturalNotes?: string: any[]; // Cultural context notes
+  culturalNotes?: string[]; // Cultural context notes
 }
 
 /**
@@ -228,16 +228,16 @@ export interface ContentLocalizationMetadata {
   contentId: string;
   contentType: 'lesson' | 'assessment' | 'feedback' | 'resource' | 'communication';
   originalLanguage: SupportedLanguage;
-  availableTranslations: SupportedLanguage: any[];
+  availableTranslations: SupportedLanguage[];
   lastUpdated: Date;
   translationStatus: {
     [key in SupportedLanguage]?: 'complete' | 'partial' | 'machine-translated' | 'needs-review';
   };
   // Added for expansion
   priority?: 'high' | 'medium' | 'low'; // Translation priority
-  audience?: string: any[]; // Target audience for this content
-  keywords?: string: any[]; // Keywords for this content
-  curriculumLinks?: string: any[]; // Links to curriculum standards
+  audience?: string[]; // Target audience for this content
+  keywords?: string[]; // Keywords for this content
+  curriculumLinks?: string[]; // Links to curriculum standards
   accessibilityNotes?: string; // Notes about accessibility considerations
   translationNotes?: string; // Notes for translators
 }
@@ -317,7 +317,7 @@ export interface DocumentTranslationStatus {
 export interface BatchTranslationRequest {
   batchId: string;
   userId: string;
-  documentIds: string: any[];
+  documentIds: string[];
   sourceLanguage: SupportedLanguage;
   targetLanguage: SupportedLanguage;
   priority: 'high' | 'normal' | 'low';
@@ -357,7 +357,7 @@ export interface TranslationGlossary {
     definition?: string;
     context?: string;
     domain?: string;
-    examples?: string: any[];
+    examples?: string[];
   }>;
   lastUpdated: Date;
   createdBy: string;
@@ -373,7 +373,7 @@ export interface CulturalContextInfo {
     title: string;
     description: string;
     relevance: 'high' | 'medium' | 'low';
-    examples?: string: any[];
+    examples?: string[];
   }>;
   educationalSystemNotes: string;
   curriculumDifferences?: string;
diff --git a/src/lib/learning-utils.tsx b/src/lib/learning-utils.tsx
index f70f551..f012ed5 100644
--- a/src/lib/learning-utils.tsx
+++ b/src/lib/learning-utils.tsx
@@ -100,23 +100,23 @@ export interface LearningProfile {
   secondaryLearningStyle?: LearningStyle;
   learningPace: LearningPace;
   preferredDifficulty: DifficultyLevel;
-  interests: InterestCategory: any[];
+  interests: InterestCategory[];
   goals: {
     type: LearningGoalType;
     description: string;
     targetDate?: Date;
   }[];
-  strengths: string: any[];
-  areasForImprovement: string: any[];
+  strengths: string[];
+  areasForImprovement: string[];
   adaptations?: {
     dyslexia?: boolean;
     adhd?: boolean;
     visualImpairment?: boolean;
     hearingImpairment?: boolean;
     motorSkillChallenges?: boolean;
-    other?: string: any[];
+    other?: string[];
   };
-  preferredActivities: LearningActivityType: any[];
+  preferredActivities: LearningActivityType[];
   lastUpdated: Date;
 }
 
@@ -129,11 +129,11 @@ export interface LearningModule {
   description: string;
   difficulty: DifficultyLevel;
   estimatedDuration: number; // in minutes
-  prerequisites: string: any[];
-  learningOutcomes: string: any[];
-  keywords: string: any[];
-  categories: string: any[];
-  relatedInterests: InterestCategory: any[];
+  prerequisites: string[];
+  learningOutcomes: string[];
+  keywords: string[];
+  categories: string[];
+  relatedInterests: InterestCategory[];
   activities: {
     id: string;
     type: LearningActivityType;
@@ -149,10 +149,10 @@ export interface LearningModule {
     passingScore: number;
   }[];
   adaptiveContent: {
-    visual: string: any[];
-    auditory: string: any[];
-    readingWriting: string: any[];
-    kinesthetic: string: any[];
+    visual: string[];
+    auditory: string[];
+    readingWriting: string[];
+    kinesthetic: string[];
   };
 }
 
@@ -164,7 +164,7 @@ export interface ModuleProgress {
   moduleId: string;
   startDate: Date;
   lastAccessDate: Date;
-  completedActivities: string: any[];
+  completedActivities: string[];
   assessmentResults: {
     assessmentId: string;
     attempts: number;
@@ -209,8 +209,8 @@ export interface LearningRecommendation {
   reasonForRecommendation: string;
   difficulty: DifficultyLevel;
   estimatedDuration: number; // in minutes
-  matchesInterests: InterestCategory: any[];
-  matchesGoals: LearningGoalType: any[];
+  matchesInterests: InterestCategory[];
+  matchesGoals: LearningGoalType[];
   prerequisites: {
     moduleId: string;
     title: string;
@@ -244,7 +244,7 @@ export interface LearningStyleResult {
 }
 
 // Sample learning style assessment questions
-const LEARNING_STYLE_QUESTIONS: LearningStyleQuestion: any[] = [
+const LEARNING_STYLE_QUESTIONS: LearningStyleQuestion[] = [
   {
     id: 'q1',
     question: 'When learning a new skill, I prefer to:',
@@ -382,7 +382,7 @@ export const assessLearningStyle = (answers: Record<string, LearningStyle>): Lea
 /**
  * Get learning style assessment questions
  */
-export const getLearningStyleQuestions = (): LearningStyleQuestion: any: any[] => {
+export const getLearningStyleQuestions = (): LearningStyleQuestion[] => {
   return LEARNING_STYLE_QUESTIONS;
 };
 
@@ -463,12 +463,12 @@ export const trackModuleProgress = (
 export const getLearningRecommendations = (
   userId: string,
   count: number = 3
-): Promise<LearningRecommendation: any[]> => {
+): Promise<LearningRecommendation[]> => {
   // In a real implementation, this would query the database
   // For now, we'll simulate with a delay and return mock data
   return new Promise(resolve => {
     setTimeout(() => {
-      const recommendations: LearningRecommendation: any[] = [
+      const recommendations: LearningRecommendation[] = [
         {
           moduleId: 'module1',
           title: 'Introduction to Educational Psychology',
@@ -527,12 +527,12 @@ export const getLearningRecommendations = (
 /**
  * Get user achievements
  */
-export const getUserAchievements = (userId: string): Promise<Achievement: any[]> => {
+export const getUserAchievements = (userId: string): Promise<Achievement[]> => {
   // In a real implementation, this would query the database
   // For now, we'll simulate with a delay and return mock data
   return new Promise(resolve => {
     setTimeout(() => {
-      const achievements: Achievement: any[] = [
+      const achievements: Achievement[] = [
         {
           id: 'achievement1',
           title: 'First Steps',
@@ -741,14 +741,14 @@ export const getAdaptedContent = (
  * React hook for learning style assessment
  */
 export const useLearningStyleAssessment = (): {
-  questions: LearningStyleQuestion: any[];
+  questions: LearningStyleQuestion[];
   answers: Record<string, LearningStyle>;
   setAnswer: (questionId: string, style: LearningStyle) => void;
   result: LearningStyleResult | null;
   calculateResult: () => void;
   isComplete: boolean;
 } => {
-  const [questions] = useState<LearningStyleQuestion: any[]>(getLearningStyleQuestions());
+  const [questions] = useState<LearningStyleQuestion[]>(getLearningStyleQuestions());
   const [answers, setAnswers] = useState<Record<string, LearningStyle>>({});
   const [result, setResult] = useState<LearningStyleResult | null>(null);
   
@@ -866,12 +866,12 @@ export const useLearningRecommendations = (
   userId: string,
   count: number = 3
 ): {
-  recommendations: LearningRecommendation: any[];
+  recommendations: LearningRecommendation[];
   loading: boolean;
   error: string | null;
   refresh: () => Promise<void>;
 } => {
-  const [recommendations, setRecommendations] = useState<LearningRecommendation: any[]>([]);
+  const [recommendations, setRecommendations] = useState<LearningRecommendation[]>([]);
   const [loading, setLoading] = useState<boolean>(true);
   const [error, setError] = useState<string | null>(null);
   
@@ -907,12 +907,12 @@ export const useLearningRecommendations = (
 export const useAchievements = (
   userId: string
 ): {
-  achievements: Achievement: any[];
+  achievements: Achievement[];
   loading: boolean;
   error: string | null;
   refresh: () => Promise<void>;
 } => {
-  const [achievements, setAchievements] = useState<Achievement: any[]>([]);
+  const [achievements, setAchievements] = useState<Achievement[]>([]);
   const [loading, setLoading] = useState<boolean>(true);
   const [error, setError] = useState<string | null>(null);
   
diff --git a/src/lib/mobile/mobileService.ts b/src/lib/mobile/mobileService.ts
index 7d6c638..b98a66c 100644
--- a/src/lib/mobile/mobileService.ts
+++ b/src/lib/mobile/mobileService.ts
@@ -448,7 +448,7 @@ export class DeviceDetectionService {
 export class OfflineStorageService {
   private static instance: OfflineStorageService;
   private db: IDBDatabase | null = null;
-  private syncQueue: SyncQueueItem: any[] = [];
+  private syncQueue: SyncQueueItem[] = [];
   private isSyncing: boolean = false;
   private syncInterval: number = 30000; // 30 seconds
   private syncIntervalId: number | null = null;
diff --git a/src/lib/mobile/mobileTypes.ts b/src/lib/mobile/mobileTypes.ts
index 0ddaa63..77295c9 100644
--- a/src/lib/mobile/mobileTypes.ts
+++ b/src/lib/mobile/mobileTypes.ts
@@ -143,7 +143,7 @@ export interface PushNotification {
   clicked: boolean;
   clickedAt?: Date;
   priority: 'high' | 'normal' | 'low';
-  channels: string: any[]; // e.g., 'assessment', 'collaboration', 'system'
+  channels: string[]; // e.g., 'assessment', 'collaboration', 'system'
   userId: string;
   deviceId?: string; // If targeted to a specific device
 }
@@ -191,7 +191,7 @@ export interface MobileSettings {
     enabled: boolean;
     maxStorageSize: number; // in MB
     autoDownloadContent: boolean;
-    contentTypes: string: any[]; // Types of content to cache
+    contentTypes: string[]; // Types of content to cache
     syncOnWifiOnly: boolean;
   };
   dataUsage: {
@@ -223,7 +223,7 @@ export interface NavigationHistoryItem {
 export interface NavigationHistory {
   userId: string;
   deviceId: string;
-  items: NavigationHistoryItem: any[];
+  items: NavigationHistoryItem[];
   currentIndex: number;
   lastUpdated: Date;
 }
@@ -334,7 +334,7 @@ export interface MobileFeatureFlags {
       rolloutPercentage: number; // 0-100
       validFrom?: Date;
       validTo?: Date;
-      targetGroups?: string: any[]; // e.g., 'beta-testers', 'teachers', 'students'
+      targetGroups?: string[]; // e.g., 'beta-testers', 'teachers', 'students'
     };
   };
   lastUpdated: Date;
diff --git a/src/lib/monitoring/alerting.ts b/src/lib/monitoring/alerting.ts
index b29ca3d..5a6b4e1 100644
--- a/src/lib/monitoring/alerting.ts
+++ b/src/lib/monitoring/alerting.ts
@@ -20,7 +20,7 @@ export interface AlertConfig {
   level: AlertLevel;
   threshold: number;
   cooldown: number; // in milliseconds
-  channels: AlertChannel: any[];
+  channels: AlertChannel[];
   enabled: boolean;
 }
 
diff --git a/src/lib/monitoring/performance.ts b/src/lib/monitoring/performance.ts
index 6e138d4..5089124 100644
--- a/src/lib/monitoring/performance.ts
+++ b/src/lib/monitoring/performance.ts
@@ -9,7 +9,7 @@ import { NextWebVitalsMetric } from 'next/app';
 import { logInfo } from './logger';
 
 // Store performance metrics
-const performanceMetrics: Record<string, any: any: any[]> = {
+const performanceMetrics: Record<string, any[]> = {
   webVitals: [],
   apiCalls: [],
   pageLoads: [],
diff --git a/src/lib/plugins/googleDrive.ts b/src/lib/plugins/googleDrive.ts
index 6d2c263..09ef709 100644
--- a/src/lib/plugins/googleDrive.ts
+++ b/src/lib/plugins/googleDrive.ts
@@ -51,7 +51,7 @@ export interface GoogleDriveDocument {
   shared: boolean;
   starred: boolean;
   trashed: boolean;
-  parents: string: any[];
+  parents: string[];
 }
 
 /**
@@ -201,7 +201,7 @@ export class GoogleDriveClient {
   /**
    * List files in Google Drive
    */
-  async listFiles(query?: string, pageSize = 100): Promise<GoogleDriveDocument: any[]> {
+  async listFiles(query?: string, pageSize = 100): Promise<GoogleDriveDocument[]> {
     const accessToken = await this.ensureAccessToken();
     
     const params = new URLSearchParams({
@@ -690,7 +690,7 @@ export class GoogleDrivePlugin implements BasePlugin, DataIntegrationPlugin {
   /**
    * Sync platform content to Google Drive
    */
-  private async syncPlatformToDrive(): Promise<any: any[]> {
+  private async syncPlatformToDrive(): Promise<any[]> {
     // Implementation would depend on platform's content structure
     // This is a placeholder for the actual implementation
     return [];
@@ -699,7 +699,7 @@ export class GoogleDrivePlugin implements BasePlugin, DataIntegrationPlugin {
   /**
    * Sync Google Drive content to platform
    */
-  private async syncDriveToPlatform(): Promise<any: any[]> {
+  private async syncDriveToPlatform(): Promise<any[]> {
     // Implementation would depend on platform's content structure
     // This is a placeholder for the actual implementation
     return [];
diff --git a/src/lib/plugins/implementations/cognifitAssessmentPlugin.ts b/src/lib/plugins/implementations/cognifitAssessmentPlugin.ts
index 52072a7..677a337 100644
--- a/src/lib/plugins/implementations/cognifitAssessmentPlugin.ts
+++ b/src/lib/plugins/implementations/cognifitAssessmentPlugin.ts
@@ -20,7 +20,7 @@ interface CognifitApiClient {
   initialize(apiKey: string, apiSecret: string): Promise<boolean>;
   createAssessment(params: CognifitAssessmentParams): Promise<CognifitAssessment>;
   getAssessment(assessmentId: string): Promise<CognifitAssessment>;
-  scoreAssessment(assessmentId: string, responses: CognifitResponse: any[]): Promise<CognifitResult>;
+  scoreAssessment(assessmentId: string, responses: CognifitResponse[]): Promise<CognifitResult>;
   getResults(assessmentId: string): Promise<CognifitResult>;
 }
 
@@ -34,7 +34,7 @@ interface CognifitAssessmentParams {
     max: number;
   };
   domain: string;
-  subdomains: string: any[];
+  subdomains: string[];
   difficulty: string;
   itemCount: number;
   timeLimit?: number;
@@ -56,7 +56,7 @@ interface CognifitAssessment {
   createdAt: string;
   updatedAt: string;
   params: CognifitAssessmentParams;
-  items: CognifitItem: any[];
+  items: CognifitItem[];
 }
 
 /**
@@ -93,7 +93,7 @@ interface CognifitResult {
   percentile: number;
   completedAt: string;
   duration: number;
-  itemResults: CognifitItemResult: any[];
+  itemResults: CognifitItemResult[];
   domainScores: {
     [domain: string]: {
       score: number;
@@ -106,7 +106,7 @@ interface CognifitResult {
     byDomain: {
       [domain: string]: string;
     };
-    activities: string: any[];
+    activities: string[];
   };
 }
 
@@ -161,7 +161,7 @@ class MockCognifitApiClient implements CognifitApiClient {
     const id = `cognifit-${Date.now()}-${Math.floor(Math.random() * 1000)}`;
     
     // Create mock items based on parameters
-    const items: CognifitItem: any[] = [];
+    const items: CognifitItem[] = [];
     for (let i = 0; i < params.itemCount; i++) {
       const subdomain = params.subdomains[i % params.subdomains.length];
       items.push({
@@ -223,7 +223,7 @@ class MockCognifitApiClient implements CognifitApiClient {
    * @param responses The responses to score
    * @returns The assessment results
    */
-  async scoreAssessment(assessmentId: string, responses: CognifitResponse: any[]): Promise<CognifitResult> {
+  async scoreAssessment(assessmentId: string, responses: CognifitResponse[]): Promise<CognifitResult> {
     if (!this.initialized) {
       throw new Error('Cognifit API client not initialized');
     }
@@ -232,7 +232,7 @@ class MockCognifitApiClient implements CognifitApiClient {
     const assessment = await this.getAssessment(assessmentId);
     
     // Create mock item results
-    const itemResults: CognifitItemResult: any[] = [];
+    const itemResults: CognifitItemResult[] = [];
     let totalScore = 0;
     const maxScore = assessment.items.length * 10; // Assuming 10 points per item
     
@@ -544,7 +544,7 @@ export class CognifitAssessmentPlugin extends BaseAssessmentToolPlugin {
    * @param responses The student's responses
    * @returns The assessment results
    */
-  protected async scoreAssessmentImpl(assessmentId: string, responses: AssessmentToolPluginResponse: any[]): Promise<any> {
+  protected async scoreAssessmentImpl(assessmentId: string, responses: AssessmentToolPluginResponse[]): Promise<any> {
     try {
       // Convert platform responses to Cognifit responses
       const cognifitResponses = this.convertToCognifitResponses(responses);
@@ -613,7 +613,7 @@ export class CognifitAssessmentPlugin extends BaseAssessmentToolPlugin {
     
     // Map subject to domain
     let domain = 'general_cognition';
-    let subdomains: string: any[] = ['memory', 'attention', 'reasoning'];
+    let subdomains: string[] = ['memory', 'attention', 'reasoning'];
     
     if (params.subject === 'mathematics') {
       domain = 'mathematical_cognition';
@@ -673,7 +673,7 @@ export class CognifitAssessmentPlugin extends BaseAssessmentToolPlugin {
    * @param responses The platform responses
    * @returns The Cognifit responses
    */
-  private convertToCognifitResponses(responses: AssessmentToolPluginResponse: any[]): CognifitResponse: any: any[] {
+  private convertToCognifitResponses(responses: AssessmentToolPluginResponse[]): CognifitResponse[] {
     return responses.map(response => ({
       itemId: response.questionId,
       response: response.responseData,
diff --git a/src/lib/plugins/registry.ts b/src/lib/plugins/registry.ts
index 0cbdeef..d0b0e9c 100644
--- a/src/lib/plugins/registry.ts
+++ b/src/lib/plugins/registry.ts
@@ -139,7 +139,7 @@ class PluginRegistry implements IPluginRegistry {
   /**
    * List all plugins, optionally filtered by status
    */
-  listPlugins(status?: PluginStatus): PluginInstance: any: any[] {
+  listPlugins(status?: PluginStatus): PluginInstance[] {
     const instances = Array.from(this.instances.values());
     
     if (status) {
@@ -333,9 +333,9 @@ class PluginRegistry implements IPluginRegistry {
               author: dbPlugin.author,
               website: dbPlugin.website || '',
               icon: dbPlugin.icon || '',
-              tags: dbPlugin.tags as string: any: any[] || [],
-              supportedFeatures: dbPlugin.supportedFeatures as string: any: any[],
-              requiredPermissions: dbPlugin.requiredPermissions as string: any: any[],
+              tags: dbPlugin.tags as string[] || [],
+              supportedFeatures: dbPlugin.supportedFeatures as string[],
+              requiredPermissions: dbPlugin.requiredPermissions as string[],
               settings: dbPlugin.settings as Record<string, any> || {},
               compatibilityVersion: dbPlugin.compatibilityVersion,
             }),
@@ -355,9 +355,9 @@ class PluginRegistry implements IPluginRegistry {
               author: dbPlugin.author,
               website: dbPlugin.website,
               icon: dbPlugin.icon,
-              tags: dbPlugin.tags as string: any: any[],
-              supportedFeatures: dbPlugin.supportedFeatures as string: any: any[],
-              requiredPermissions: dbPlugin.requiredPermissions as string: any: any[],
+              tags: dbPlugin.tags as string[],
+              supportedFeatures: dbPlugin.supportedFeatures as string[],
+              requiredPermissions: dbPlugin.requiredPermissions as string[],
               settings: dbPlugin.settings as Record<string, any>,
               compatibilityVersion: dbPlugin.compatibilityVersion,
             },
diff --git a/src/lib/plugins/templates/assessmentToolPlugin.ts b/src/lib/plugins/templates/assessmentToolPlugin.ts
index 71b83a6..ae6afbc 100644
--- a/src/lib/plugins/templates/assessmentToolPlugin.ts
+++ b/src/lib/plugins/templates/assessmentToolPlugin.ts
@@ -256,7 +256,7 @@ export interface AssessmentToolPluginParams {
     max: number;
   };
   subject: string;
-  topics: string: any[];
+  topics: string[];
   difficultyLevel: string;
   questionCount: number;
   timeLimit?: number;
@@ -298,7 +298,7 @@ export interface AssessmentToolPluginResult {
   feedback: {
     overall: string;
     byTopic?: Record<string, string>;
-    nextSteps?: string: any[];
+    nextSteps?: string[];
   };
 }
 
@@ -333,7 +333,7 @@ export function convertToPluginFormat(assessment: Assessment): AssessmentToolPlu
  * @param responses The plugin responses
  * @returns The platform question responses
  */
-export function convertToQuestionResponses(responses: AssessmentToolPluginResponse: any[]): QuestionResponse: any: any[] {
+export function convertToQuestionResponses(responses: AssessmentToolPluginResponse[]): QuestionResponse[] {
   return responses.map(response => ({
     questionId: response.questionId,
     responseData: response.responseData,
diff --git a/src/lib/plugins/types.ts b/src/lib/plugins/types.ts
index 477f312..3f3de4f 100644
--- a/src/lib/plugins/types.ts
+++ b/src/lib/plugins/types.ts
@@ -80,15 +80,15 @@ export interface AssessmentToolPlugin extends BasePlugin {
 
 // Content provider plugin interface
 export interface ContentProviderPlugin extends BasePlugin {
-  searchContent: (query: string, filters?) => Promise<any: any[]>;
+  searchContent: (query: string, filters?) => Promise<any[]>;
   getContent: (contentId: string) => Promise<any>;
-  listCategories: () => Promise<string: any[]>;
+  listCategories: () => Promise<string[]>;
 }
 
 // Accessibility tool plugin interface
 export interface AccessibilityToolPlugin extends BasePlugin {
   enhanceContent: (content) => Promise<any>;
-  getAccessibilityFeatures: () => Promise<string: any[]>;
+  getAccessibilityFeatures: () => Promise<string[]>;
   checkAccessibility: (content) => Promise<any>;
 }
 
@@ -106,7 +106,7 @@ export interface PluginRegistry {
   registerPlugin: (plugin: BasePlugin) => Promise<boolean>;
   unregisterPlugin: (pluginId: string) => Promise<boolean>;
   getPlugin: (pluginId: string) => BasePlugin | null;
-  listPlugins: (status?: PluginStatus) => PluginInstance: any: any[];
+  listPlugins: (status?: PluginStatus) => PluginInstance[];
   enablePlugin: (pluginId: string) => Promise<boolean>;
   disablePlugin: (pluginId: string) => Promise<boolean>;
   updatePluginSettings: (pluginId: string, settings: Record<string, any>) => Promise<boolean>;
diff --git a/src/lib/research/researchProjectService.ts b/src/lib/research/researchProjectService.ts
index 64d0a6a..be63e95 100644
--- a/src/lib/research/researchProjectService.ts
+++ b/src/lib/research/researchProjectService.ts
@@ -105,10 +105,10 @@ export class ResearchProjectServiceImpl implements ResearchProjectService {
    * @returns Array of matching research projects
    */
   async listProjects(filters?: {
-    domains?: ResearchDomain: any[];
-    status?: ResearchProjectStatus: any[];
-    keyStages?: UKKeyStage: any[];
-  }): Promise<ResearchProject: any[]> {
+    domains?: ResearchDomain[];
+    status?: ResearchProjectStatus[];
+    keyStages?: UKKeyStage[];
+  }): Promise<ResearchProject[]> {
     console.log('Listing research projects');
     
     // Convert the map to an array
diff --git a/src/lib/research/types.ts b/src/lib/research/types.ts
index 051e9db..a603dcd 100644
--- a/src/lib/research/types.ts
+++ b/src/lib/research/types.ts
@@ -457,10 +457,10 @@ export interface ResearchProjectService {
   updateProject: (projectId: string, updates: Partial<ResearchProject>) => Promise<boolean>;
   
   listProjects: (filters?: {
-    domains?: ResearchDomain: any[];
-    status?: ResearchProjectStatus: any[];
-    keyStages?: UKKeyStage: any[];
-  }) => Promise<ResearchProject: any[]>;
+    domains?: ResearchDomain[];
+    status?: ResearchProjectStatus[];
+    keyStages?: UKKeyStage[];
+  }) => Promise<ResearchProject[]>;
   
   addCollaborator: (projectId: string, collaborator: {
     id: string;
@@ -490,10 +490,10 @@ export interface DataCollectionService {
   updateInstrument: (instrumentId: string, updates: Partial<DataCollectionInstrument>) => Promise<boolean>;
   
   listInstruments: (filters?: {
-    types?: DataCollectionMethod: any[];
-    domains?: ResearchDomain: any[];
-    keyStages?: UKKeyStage: any[];
-  }) => Promise<DataCollectionInstrument: any[]>;
+    types?: DataCollectionMethod[];
+    domains?: ResearchDomain[];
+    keyStages?: UKKeyStage[];
+  }) => Promise<DataCollectionInstrument[]>;
   
   startDataCollectionSession: (session: {
     projectId: string;
@@ -512,7 +512,7 @@ export interface DataCollectionService {
     isValid: boolean;
     reliability: number;
     validity: number;
-    issues: string: any[];
+    issues: string[];
   }>;
 }
 
@@ -527,9 +527,9 @@ export interface ImpactMeasurementService {
   updateFramework: (frameworkId: string, updates: Partial<ImpactMeasurementFramework>) => Promise<boolean>;
   
   listFrameworks: (filters?: {
-    domains?: ResearchDomain: any[];
-    levels?: ImpactLevel: any[];
-  }) => Promise<ImpactMeasurementFramework: any[]>;
+    domains?: ResearchDomain[];
+    levels?: ImpactLevel[];
+  }) => Promise<ImpactMeasurementFramework[]>;
   
   recordMeasurement: (measurement: Omit<ImpactMeasurementResult, 'id' | 'createdAt' | 'updatedAt'>) => Promise<string>;
   
@@ -540,7 +540,7 @@ export interface ImpactMeasurementService {
     level?: ImpactLevel;
     targetEntityId?: string;
     dateRange?: { start: Date; end: Date };
-  }) => Promise<ImpactMeasurementResult: any[]>;
+  }) => Promise<ImpactMeasurementResult[]>;
   
   analyzeImpact: (frameworkId: string, filters?: {
     projectId?: string;
@@ -560,16 +560,16 @@ export interface ImpactMeasurementService {
     domains: Record<ResearchDomain, {
       overallImpact: number;
       confidence: number;
-      keyFindings: string: any[];
+      keyFindings: string[];
     }>;
-    recommendations: string: any[];
+    recommendations: string[];
   }>;
   
   generateImpactReport: (frameworkId: string, projectId?: string) => Promise<{
     reportUrl: string;
     executiveSummary: string;
-    keyFindings: string: any[];
-    visualizations: string: any[];
+    keyFindings: string[];
+    visualizations: string[];
   }>;
 }
 
@@ -608,35 +608,35 @@ export interface LongitudinalTrackingService {
     domain: ResearchDomain;
     observer: string;
     notes: string;
-    attachments?: string: any[];
+    attachments?: string[];
   }) => Promise<boolean>;
   
   analyzeProgressionTrends: (filters: {
-    keyStages?: UKKeyStage: any[];
-    subjects?: UKSubject: any[];
-    interventionTypes?: string: any[];
+    keyStages?: UKKeyStage[];
+    subjects?: UKSubject[];
+    interventionTypes?: string[];
     dateRange?: { start: Date; end: Date };
   }) => Promise<{
     overallTrends: string;
     keyStageProgressions: Record<UKKeyStage, {
       averageProgressRate: number;
-      successFactors: string: any[];
-      challenges: string: any[];
+      successFactors: string[];
+      challenges: string[];
     }>;
     interventionEffectiveness: Record<string, {
       impactScore: number;
       confidence: number;
-      contextualFactors: string: any[];
+      contextualFactors: string[];
     }>;
-    recommendations: string: any[];
+    recommendations: string[];
   }>;
   
   generateProgressionReport: (participantId: string) => Promise<{
     reportUrl: string;
     summary: string;
-    keyMilestones: string: any[];
-    interventionImpacts: string: any[];
-    recommendations: string: any[];
+    keyMilestones: string[];
+    interventionImpacts: string[];
+    recommendations: string[];
   }>;
 }
 
@@ -653,11 +653,11 @@ export interface QualitativeDataService {
   listQualitativeRecords: (filters?: {
     projectId?: string;
     participantId?: string;
-    domains?: ResearchDomain: any[];
-    collectionMethods?: DataCollectionMethod: any[];
+    domains?: ResearchDomain[];
+    collectionMethods?: DataCollectionMethod[];
     dateRange?: { start: Date; end: Date };
-    tags?: string: any[];
-  }) => Promise<QualitativeDataRecord: any[]>;
+    tags?: string[];
+  }) => Promise<QualitativeDataRecord[]>;
   
   addCoding: (recordId: string, coding: {
     code: string;
@@ -666,15 +666,15 @@ export interface QualitativeDataService {
   }) => Promise<boolean>;
   
   identifyThemes: (projectId: string, filters?: {
-    domains?: ResearchDomain: any[];
+    domains?: ResearchDomain[];
     dateRange?: { start: Date; end: Date };
   }) => Promise<{
     themes: Array<{
       name: string;
       frequency: number;
-      relatedCodes: string: any[];
-      keyQuotes: string: any[];
-      domains: ResearchDomain: any[];
+      relatedCodes: string[];
+      keyQuotes: string[];
+      domains: ResearchDomain[];
     }>;
     connections: Array<{
       themeA: string;
@@ -682,16 +682,16 @@ export interface QualitativeDataService {
       strength: number;
       description: string;
     }>;
-    insights: string: any[];
+    insights: string[];
   }>;
   
   generateQualitativeReport: (projectId: string) => Promise<{
     reportUrl: string;
     executiveSummary: string;
     methodologySummary: string;
-    keyThemes: string: any[];
-    illustrativeQuotes: Record<string, string: any: any[]>;
-    implications: string: any[];
+    keyThemes: string[];
+    illustrativeQuotes: Record<string, string[]>;
+    implications: string[];
   }>;
 }
 
@@ -706,10 +706,10 @@ export interface ResearchPartnershipService {
   updatePartnership: (partnershipId: string, updates: Partial<ResearchPartnership>) => Promise<boolean>;
   
   listPartnerships: (filters?: {
-    status?: string: any[];
-    domains?: ResearchDomain: any[];
-    organizationTypes?: string: any[];
-  }) => Promise<ResearchPartnership: any[]>;
+    status?: string[];
+    domains?: ResearchDomain[];
+    organizationTypes?: string[];
+  }) => Promise<ResearchPartnership[]>;
   
   addPartnerOrganization: (partnershipId: string, organisation: {
     id: string;
@@ -731,22 +731,22 @@ export interface ResearchPartnershipService {
   generatePartnershipReport: (partnershipId: string) => Promise<{
     reportUrl: string;
     summary: string;
-    achievements: string: any[];
-    challenges: string: any[];
-    nextSteps: string: any[];
+    achievements: string[];
+    challenges: string[];
+    nextSteps: string[];
   }>;
   
   findPotentialPartners: (criteria: {
-    researchDomains: ResearchDomain: any[];
+    researchDomains: ResearchDomain[];
     geographicArea?: string;
-    organizationTypes?: string: any[];
-    keywords?: string: any[];
+    organizationTypes?: string[];
+    keywords?: string[];
   }) => Promise<Array<{
     organizationId: string;
     name: string;
     type: string;
-    researchInterests: string: any[];
-    previousCollaborations: string: any[];
+    researchInterests: string[];
+    previousCollaborations: string[];
     contactInformation: {
       contactPerson: string;
       email: string;
diff --git a/src/lib/security-utils.ts b/src/lib/security-utils.ts
index 846d815..846d481 100644
--- a/src/lib/security-utils.ts
+++ b/src/lib/security-utils.ts
@@ -124,7 +124,7 @@ export const sanitizeUrl = (url: string): string | null => {
  * @returns {Function} - Rate limiting function
  */
 export const createRateLimiter = (maxRequests: number, timeWindow: number) => {
-  const requests = new Map<string, number: any: any[]>();
+  const requests = new Map<string, number[]>();
 
   return (identifier: string): boolean => {
     const now = Date.now();
@@ -264,7 +264,7 @@ export const getSecureHeaders = () => {
  */
 export const validateSecureFileUpload = (
   file: File,
-  allowedTypes: string: any[],
+  allowedTypes: string[],
   maxSize: number
 ): boolean => {
   // Check file type
diff --git a/src/lib/stripe/stripe-service.ts b/src/lib/stripe/stripe-service.ts
index 076f931..f5f00e9 100644
--- a/src/lib/stripe/stripe-service.ts
+++ b/src/lib/stripe/stripe-service.ts
@@ -174,7 +174,7 @@ export async function createCreditPurchaseCheckout({
 /**
  * Get a customer's active subscriptions
  */
-export async function getActiveSubscriptions(customerId: string): Promise<Stripe.Subscription: any: any[]> {
+export async function getActiveSubscriptions(customerId: string): Promise<Stripe.Subscription[]> {
   try {
     const subscriptions = await stripe.subscriptions.list({
       customer: customerId,
@@ -239,7 +239,7 @@ export async function updateSubscription(
 /**
  * Get customer payment methods
  */
-export async function getCustomerPaymentMethods(customerId: string): Promise<Stripe.PaymentMethod: any: any[]> {
+export async function getCustomerPaymentMethods(customerId: string): Promise<Stripe.PaymentMethod[]> {
   try {
     const paymentMethods = await stripe.paymentMethods.list({
       customer: customerId,
@@ -581,7 +581,7 @@ async function handleInvoicePaid(invoice: Stripe.Invoice): Promise<void> {
     const tier = user.subscriptionTier;
     const monthlyCredits = TIER_MONTHLY_CREDITS[tier] || 0;
     
-    // Refresh the user's credits
+    // Update user credits
     await db.userCredits.update({
       where: { userId: user.id },
       data: {
@@ -592,7 +592,7 @@ async function handleInvoicePaid(invoice: Stripe.Invoice): Promise<void> {
       },
     });
     
-    // Log the invoice payment
+    // Log the invoice payment event
     await db.subscriptionEvent.create({
       data: {
         userId: user.id,
@@ -602,6 +602,7 @@ async function handleInvoicePaid(invoice: Stripe.Invoice): Promise<void> {
         metadata: {
           invoiceId: invoice.id,
           amount: invoice.amount_paid,
+          currency: invoice.currency,
         },
       },
     });
@@ -645,7 +646,7 @@ async function handleInvoicePaymentFailed(invoice: Stripe.Invoice): Promise<void
       },
     });
     
-    // Log the invoice payment failure
+    // Log the invoice payment failed event
     await db.subscriptionEvent.create({
       data: {
         userId: user.id,
@@ -655,9 +656,13 @@ async function handleInvoicePaymentFailed(invoice: Stripe.Invoice): Promise<void
         metadata: {
           invoiceId: invoice.id,
           amount: invoice.amount_due,
+          currency: invoice.currency,
+          attemptCount: invoice.attempt_count,
         },
       },
     });
+    
+    // TODO: Send payment failure notification to user
   } catch (error) {
     console.error('Error processing invoice payment failure:', error);
   }
@@ -667,8 +672,8 @@ async function handleInvoicePaymentFailed(invoice: Stripe.Invoice): Promise<void
  * Handle credit purchase
  */
 async function handleCreditPurchase(session: Stripe.Checkout.Session): Promise<void> {
-  if (!session.customer || !session.payment_intent) {
-    console.error('Missing customer or payment intent in session:', session.id);
+  if (!session.customer || !session.metadata?.creditAmount) {
+    console.error('Missing customer or credit amount in session:', session.id);
     return;
   }
   
@@ -676,6 +681,13 @@ async function handleCreditPurchase(session: Stripe.Checkout.Session): Promise<v
     ? session.customer
     : session.customer.id;
   
+  const creditAmount = parseInt(session.metadata.creditAmount, 10);
+  
+  if (isNaN(creditAmount)) {
+    console.error('Invalid credit amount in session metadata:', session.metadata.creditAmount);
+    return;
+  }
+  
   try {
     // Find the user by Stripe customer ID
     const user = await db.user.findFirst({
@@ -687,19 +699,7 @@ async function handleCreditPurchase(session: Stripe.Checkout.Session): Promise<v
       return;
     }
     
-    // Determine the credit amount from the line items
-    // In a real implementation, you'd retrieve the session with line items expanded
-    // For simplicity, we'll use the metadata
-    const creditAmount = session.metadata?.creditAmount 
-      ? parseInt(session.metadata.creditAmount, 10)
-      : 0;
-    
-    if (creditAmount <= 0) {
-      console.error('Invalid credit amount in session:', session.id);
-      return;
-    }
-    
-    // Add the credits to the user's account
+    // Check if user already has credits
     const existingCredits = await db.userCredits.findUnique({
       where: { userId: user.id },
     });
@@ -712,9 +712,6 @@ async function handleCreditPurchase(session: Stripe.Checkout.Session): Promise<v
           remainingCredits: {
             increment: creditAmount,
           },
-          purchasedCredits: {
-            increment: creditAmount,
-          },
         },
       });
     } else {
@@ -724,153 +721,21 @@ async function handleCreditPurchase(session: Stripe.Checkout.Session): Promise<v
           userId: user.id,
           remainingCredits: creditAmount,
           usedCredits: 0,
-          purchasedCredits: creditAmount,
           lastCreditRefresh: new Date(),
         },
       });
     }
     
-    // Log the credit purchase
+    // Log the credit purchase event
     await db.creditPurchase.create({
       data: {
         userId: user.id,
         amount: creditAmount,
         stripeSessionId: session.id,
-        stripePaymentIntentId: typeof session.payment_intent === 'string'
-          ? session.payment_intent
-          : session.payment_intent.id,
+        metadata: session.metadata,
       },
     });
   } catch (error) {
     console.error('Error processing credit purchase:', error);
   }
 }
-
-/**
- * Get subscription details for a user
- */
-export async function getUserSubscription(userId: string): Promise<{
-  tier: string;
-  status: string;
-  periodEnd: Date | null;
-  cancelAtPeriodEnd: boolean;
-  credits: {
-    remaining: number;
-    used: number;
-    purchased: number;
-    lastRefresh: Date | null;
-  };
-}> {
-  try {
-    // Get the user
-    const user = await db.user.findUnique({
-      where: { id: userId },
-    });
-    
-    if (!user) {
-      throw new Error('User not found');
-    }
-    
-    // Get the user's credits
-    const credits = await db.userCredits.findUnique({
-      where: { userId },
-    });
-    
-    return {
-      tier: user.subscriptionTier || 'free',
-      status: user.subscriptionStatus || 'inactive',
-      periodEnd: user.subscriptionPeriodEnd || null,
-      cancelAtPeriodEnd: user.cancelAtPeriodEnd || false,
-      credits: {
-        remaining: credits?.remainingCredits || 0,
-        used: credits?.usedCredits || 0,
-        purchased: credits?.purchasedCredits || 0,
-        lastRefresh: credits?.lastCreditRefresh || null,
-      },
-    };
-  } catch (error) {
-    console.error('Error fetching user subscription:', error);
-    throw new Error('Failed to fetch subscription details. Please try again later.');
-  }
-}
-
-/**
- * Get subscription pricing information
- */
-export async function getSubscriptionPricing(): Promise<{
-  standard: { monthly: number; yearly: number };
-  premium: { monthly: number; yearly: number };
-  family: { monthly: number; yearly: number };
-}> {
-  try {
-    // Fetch the prices from Stripe
-    const standardMonthly = await stripe.prices.retrieve(SUBSCRIPTION_PLANS.STANDARD.MONTHLY);
-    const standardYearly = await stripe.prices.retrieve(SUBSCRIPTION_PLANS.STANDARD.YEARLY);
-    const premiumMonthly = await stripe.prices.retrieve(SUBSCRIPTION_PLANS.PREMIUM.MONTHLY);
-    const premiumYearly = await stripe.prices.retrieve(SUBSCRIPTION_PLANS.PREMIUM.YEARLY);
-    const familyMonthly = await stripe.prices.retrieve(SUBSCRIPTION_PLANS.FAMILY.MONTHLY);
-    const familyYearly = await stripe.prices.retrieve(SUBSCRIPTION_PLANS.FAMILY.YEARLY);
-    
-    return {
-      standard: {
-        monthly: standardMonthly.unit_amount ? standardMonthly.unit_amount / 100 : 0,
-        yearly: standardYearly.unit_amount ? standardYearly.unit_amount / 100 : 0,
-      },
-      premium: {
-        monthly: premiumMonthly.unit_amount ? premiumMonthly.unit_amount / 100 : 0,
-        yearly: premiumYearly.unit_amount ? premiumYearly.unit_amount / 100 : 0,
-      },
-      family: {
-        monthly: familyMonthly.unit_amount ? familyMonthly.unit_amount / 100 : 0,
-        yearly: familyYearly.unit_amount ? familyYearly.unit_amount / 100 : 0,
-      },
-    };
-  } catch (error) {
-    console.error('Error fetching subscription pricing:', error);
-    // Return fallback pricing
-    return {
-      standard: { monthly: 9.99, yearly: 99.99 },
-      premium: { monthly: 19.99, yearly: 199.99 },
-      family: { monthly: 29.99, yearly: 299.99 },
-    };
-  }
-}
-
-/**
- * Get credit package pricing information
- */
-export async function getCreditPackagePricing(): Promise<{
-  small: { amount: number; price: number };
-  medium: { amount: number; price: number };
-  large: { amount: number; price: number };
-}> {
-  try {
-    // Fetch the prices from Stripe
-    const smallPackage = await stripe.prices.retrieve(CREDIT_PACKAGES.SMALL);
-    const mediumPackage = await stripe.prices.retrieve(CREDIT_PACKAGES.MEDIUM);
-    const largePackage = await stripe.prices.retrieve(CREDIT_PACKAGES.LARGE);
-    
-    return {
-      small: {
-        amount: smallPackage.metadata?.credits ? parseInt(smallPackage.metadata.credits, 10) : 50,
-        price: smallPackage.unit_amount ? smallPackage.unit_amount / 100 : 4.99,
-      },
-      medium: {
-        amount: mediumPackage.metadata?.credits ? parseInt(mediumPackage.metadata.credits, 10) : 150,
-        price: mediumPackage.unit_amount ? mediumPackage.unit_amount / 100 : 12.99,
-      },
-      large: {
-        amount: largePackage.metadata?.credits ? parseInt(largePackage.metadata.credits, 10) : 500,
-        price: largePackage.unit_amount ? largePackage.unit_amount / 100 : 39.99,
-      },
-    };
-  } catch (error) {
-    console.error('Error fetching credit package pricing:', error);
-    // Return fallback pricing
-    return {
-      small: { amount: 50, price: 4.99 },
-      medium: { amount: 150, price: 12.99 },
-      large: { amount: 500, price: 39.99 },
-    };
-  }
-}
diff --git a/src/lib/testing/testingService.ts b/src/lib/testing/testingService.ts
index 58d627d..a45bb8b 100644
--- a/src/lib/testing/testingService.ts
+++ b/src/lib/testing/testingService.ts
@@ -22,7 +22,7 @@ import {
  */
 export class TestingService {
   private config: TestConfig;
-  private reporters: TestReporter: any[] = [];
+  private reporters: TestReporter[] = [];
   private currentRun: TestRun | null = null;
   
   constructor(config: TestConfig) {
diff --git a/src/lib/testing/types.ts b/src/lib/testing/types.ts
index 9054708..1dfadd2 100644
--- a/src/lib/testing/types.ts
+++ b/src/lib/testing/types.ts
@@ -64,7 +64,7 @@ export interface TestSuite {
   id: string;
   name: string;
   description: string;
-  tests: TestResult: any[];
+  tests: TestResult[];
   startTime: Date;
   endTime?: Date;
   totalTests: number;
@@ -80,7 +80,7 @@ export interface TestRun {
   id: string;
   name: string;
   description: string;
-  suites: TestSuite: any[];
+  suites: TestSuite[];
   startTime: Date;
   endTime?: Date;
   environment: string;
@@ -128,11 +128,11 @@ export interface TestConfig {
   maxWorkers: number;
   bail: boolean;
   verbose: boolean;
-  reporters: string: any[];
-  testMatch: string: any[];
-  testIgnore: string: any[];
-  setupFiles: string: any[];
-  teardownFiles: string: any[];
+  reporters: string[];
+  testMatch: string[];
+  testIgnore: string[];
+  setupFiles: string[];
+  teardownFiles: string[];
   environmentVariables: Record<string, string>;
 }
 
@@ -157,9 +157,9 @@ export interface TestReporter {
 export interface EducationalTestContext {
   keyStage?: string;
   subject?: string;
-  learningObjectives?: string: any[];
-  specialEducationalNeeds?: string: any[];
-  curriculumAlignment?: string: any[];
+  learningObjectives?: string[];
+  specialEducationalNeeds?: string[];
+  curriculumAlignment?: string[];
 }
 
 /**
diff --git a/src/lib/voice/textToSpeech.ts b/src/lib/voice/textToSpeech.ts
index b0e1c81..42ec40e 100644
--- a/src/lib/voice/textToSpeech.ts
+++ b/src/lib/voice/textToSpeech.ts
@@ -26,7 +26,7 @@ export interface TextToSpeechState {
   currentPosition: number;
   currentSentence: string;
   progress: number;
-  availableVoices: SpeechSynthesisVoice: any[];
+  availableVoices: SpeechSynthesisVoice[];
 }
 
 // Text-to-speech service class
@@ -35,7 +35,7 @@ export class TextToSpeechService {
   private utterance: SpeechSynthesisUtterance | null = null;
   private options: TextToSpeechOptions;
   private state: TextToSpeechState;
-  private textQueue: string: any[] = [];
+  private textQueue: string[] = [];
   private highlightCallback: ((text: string, start: number, end: number) => void) | null = null;
   private onEndCallback: (() => void) | null = null;
   
@@ -126,7 +126,7 @@ export class TextToSpeechService {
   /**
    * Get available voices
    */
-  public getVoices(): SpeechSynthesisVoice: any: any[] {
+  public getVoices(): SpeechSynthesisVoice[] {
     return this.state.availableVoices;
   }
   
@@ -252,7 +252,7 @@ export class TextToSpeechService {
   /**
    * Split text into sentences
    */
-  private splitIntoSentences(text: string): string: any: any[] {
+  private splitIntoSentences(text: string): string[] {
     // Simple sentence splitting - in a real implementation, this would be more sophisticated
     return text
       .replace(/([.!?])\s+/g, '$1|')
diff --git a/src/pages/blog/categories.tsx b/src/pages/blog/categories.tsx
index 3c97007..75b85e9 100644
--- a/src/pages/blog/categories.tsx
+++ b/src/pages/blog/categories.tsx
@@ -20,7 +20,7 @@ interface Category {
 }
 
 interface BlogCategoriesPageProps {
-  categories: Category: any[];
+  categories: Category[];
 }
 
 export default function BlogCategoriesPage({ categories }: BlogCategoriesPageProps) {
diff --git a/src/pages/blog/new.tsx b/src/pages/blog/new.tsx
index 145fd4f..9a30344 100644
--- a/src/pages/blog/new.tsx
+++ b/src/pages/blog/new.tsx
@@ -15,7 +15,7 @@ interface Category {
 }
 
 interface NewBlogPostPageProps {
-  categories: Category: any[];
+  categories: Category[];
 }
 
 export default function NewBlogPostPage({ categories }: NewBlogPostPageProps) {
diff --git a/src/services/ai-avatar-video-service.ts b/src/services/ai-avatar-video-service.ts
index da9071d..e4ce131 100644
--- a/src/services/ai-avatar-video-service.ts
+++ b/src/services/ai-avatar-video-service.ts
@@ -68,7 +68,7 @@ export class AIAvatarVideoService {
    * Get a list of all videos for the current user
    * @returns Promise with an array of video metadata
    */
-  async getAllVideos(): Promise<VideoMetadata: any[]> {
+  async getAllVideos(): Promise<VideoMetadata[]> {
     try {
       const response = await fetch(`${this.apiUrl}/list`, {
         method: 'GET',
diff --git a/src/tests/lib/monitoring/monitoring.test.ts b/src/tests/lib/monitoring/monitoring.test.ts
index 8340a69..4d2c1fa 100644
--- a/src/tests/lib/monitoring/monitoring.test.ts
+++ b/src/tests/lib/monitoring/monitoring.test.ts
@@ -10,7 +10,7 @@ interface AlertConfig {
   level: string;
   threshold: number;
   cooldown: number;
-  channels: string: any[];
+  channels: string[];
   enabled: boolean;
 }
 
