'use client';

import dynamic from 'next/dynamic';

import React, { useState } from 'react';



import {
BarChart2,
  Users,
  Video,
  BookOpen,
  Settings,
  Download,
  Filter,
  Calendar,
  Search
} from 'lucide-react';
// Original component

const LearningAnalyticsDashboard = dynamic(
  () => import('@/components/analytics/LearningAnalyticsDashboard')
);

const ContentEffectivenessAnalysis = dynamic(
  () => import('@/components/analytics/ContentEffectivenessAnalysis')
);

const StudentProgressVisualization = dynamic(
  () => import('@/components/analytics/StudentProgressVisualization')
);

function AnalyticsPage() {
  // In a real application, these would come from authentication and context
  const [userRole, setUserRole] = useState<'student' | 'instructor' | 'admin'>('instructor');
  const [userId, setUserId] = useState<string>('user-1');
  const [courseId, setCourseId] = useState<string | undefined>('course-1');
  
  return (
    <div className="min-h-screen bg-grey-950 text-white">
      {/* Header */}
      <header className="bg-grey-900 border-b border-grey-800 p-4">
        <div className="container mx-auto">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between">
            <h1 className="text-2xl font-bold flex items-center mb-4 md:mb-0">
              <BarChart2 className="h-6 w-6 mr-2 text-blue-400" />
              Learning Analytics Dashboard
            </h1>
            
            <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4">
              {/* Role Selector (for demo purposes) */}
              <div className="flex items-center space-x-2">
                <Users className="h-5 w-5 text-grey-400" />
                <select
                  className="bg-grey-800 text-white rounded px-3 py-2 text-sm"
                  value={userRole}
                  onChange={(e: any) => setUserRole(e.target.value as any)}
                >
                  <option value="student">Student View</option>
                  <option value="instructor">Instructor View</option>
                  <option value="admin">Admin View</option>
                </select>
              </div>
              
              {/* Course Selector */}
              {userRole !== 'student' && (
                <div className="flex items-center space-x-2">
                  <BookOpen className="h-5 w-5 text-grey-400" />
                  <select
                    className="bg-grey-800 text-white rounded px-3 py-2 text-sm"
                    value={courseId || ''}
                    onChange={(e: any) => setCourseId(e.target.value || undefined)}
                  >
                    <option value="">All Courses</option>
                    <option value="course-1">Introduction to Psychology</option>
                    <option value="course-2">Cognitive Development</option>
                  </select>
                </div>
              )}
              
              {/* Settings Button */}
              <button
                className="flex items-center space-x-2 bg-grey-800 hover:bg-grey-700 text-white rounded px-3 py-2 text-sm"
              >
                <Settings className="h-4 w-4" />
                <span>Settings</span>
              </button>
            </div>
          </div>
        </div>
      </header>
      
      {/* Main Content */}
      <main className="container mx-auto p-4">
        <div className="grid grid-cols-1 gap-6">
          {/* Dashboard */}
          <LearningAnalyticsDashboard 
            userId={userId}
            courseId={courseId}
            userRole={userRole}
          />
          
          {/* Content Effectiveness Analysis */}
          <ContentEffectivenessAnalysis
            courseId={courseId}
            userRole={userRole}
          />
          
          {/* Student Progress Visualization */}
          <StudentProgressVisualization
            userId={userId}
            courseId={courseId}
            userRole={userRole}
          />
          
          {/* Additional Sections */}
          {userRole === 'admin' && (
            <div className="bg-grey-900 rounded-lg p-6">
              <h2 className="text-xl font-semibold text-white mb-4 flex items-center">
                <Video className="h-5 w-5 mr-2 text-blue-400" />
                Platform-Wide Analytics
              </h2>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="bg-grey-800 rounded-lg p-4">
                  <div className="text-grey-400 text-sm mb-1">Total Users</div>
                  <div className="text-white text-2xl font-semibold">1,250</div>
                </div>
                <div className="bg-grey-800 rounded-lg p-4">
                  <div className="text-grey-400 text-sm mb-1">Active Courses</div>
                  <div className="text-white text-2xl font-semibold">24</div>
                </div>
                <div className="bg-grey-800 rounded-lg p-4">
                  <div className="text-grey-400 text-sm mb-1">Content Hours</div>
                  <div className="text-white text-2xl font-semibold">342</div>
                </div>
              </div>
            </div>
          )}
        </div>
      </main>
      
      {/* Footer */}
      <footer className="bg-grey-900 border-t border-grey-800 p-4 mt-8">
        <div className="container mx-auto">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between text-grey-400 text-sm">
            <div>
              EdPsych AI Platform &copy; {new Date().getFullYear()} - Learning Analytics Module
            </div>
            <div className="mt-2 md:mt-0">
              Data last updated: {new Date().toLocaleString()}
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}

export default AnalyticsPage;