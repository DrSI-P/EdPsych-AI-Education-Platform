'use client';

import dynamic from 'next/dynamic';

import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Separator } from "@/components/ui/separator";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line, PieChart, Pie, Cell } from 'recharts';
import { Bell, BookOpen, Calendar, CheckCircle, Clock, FileText, Home, MessageSquare, Search, Settings, Star, Trophy, Users, User, BarChart2, School, GraduationCap } from "lucide-react";
const childrenProgress = [
  { name: 'English', progress: 75, target: 85 },
  { name: 'Mathematics', progress: 82, target: 85 },
  { name: 'Science', progress: 68, target: 80 },
  { name: 'History', progress: 90, target: 85 },
  { name: 'Geography', progress: 72, target: 80 },
];

const weeklyActivity = [
  { day: 'Mon', hours: 2.5 },
  { day: 'Tue', hours: 3.2 },
  { day: 'Wed', hours: 2.8 },
  { day: 'Thu', hours: 3.5 },
  { day: 'Fri', hours: 2.1 },
  { day: 'Sat', hours: 1.2 },
  { day: 'Sun', hours: 0.8 },
];


// Original component
function ParentDashboard() {
  const [activeTab, setActiveTab] = useState("dashboard");
  
  // Mock data for demonstration
  const parentData = {
    name: "Sarah Johnson",
    children: [
      { name: "Alex Johnson", mark: "Year 10", school: "Oakwood High" },
      { name: "Emma Johnson", mark: "Year 8", school: "Oakwood High" }
    ],
    upcomingEvents: [
      { title: "Parent-Teacher Conference", date: "June 15, 2025", time: "4:00 PM" },
      { title: "School Concert", date: "June 22, 2025", time: "6:30 PM" },
      { title: "End of Term Report", date: "July 10, 2025", time: "N/A" }
    ]
  };
  
  const childrenAssignments = [
    {
      id: 1,
      childName: "Alex",
      title: "History Essay: World War II",
      dueDate: "Tomorrow",
      status: "In Progress",
      subject: "History"
    },
    {
      id: 2,
      childName: "Alex",
      title: "Math Quiz: Algebra",
      dueDate: "Friday",
      status: "Not Started",
      subject: "Mathematics"
    },
    {
      id: 3,
      childName: "Emma",
      title: "Science Project: Ecosystems",
      dueDate: "Next Week",
      status: "In Progress",
      subject: "Science"
    }
  ];
  
  const recentUpdates = [
    {
      id: 1,
      childName: "Alex",
      type: "Mark",
      subject: "Mathematics",
      details: "Scored 85% on Algebra Test",
      date: "Yesterday"
    },
    {
      id: 2,
      childName: "Emma",
      type: "Attendance",
      subject: null,
      details: "Absent from school",
      date: "June 3, 2025"
    },
    {
      id: 3,
      childName: "Alex",
      type: "Behaviour",
      subject: null,
      details: "Positive note from English teacher",
      date: "June 2, 2025"
    }
  ];

  return (
    <div className="container mx-auto py-8">
      <div className="flex flex-col md:flex-row gap-6">
        {/* Sidebar */}
        <div className="w-full md:w-64 space-y-4">
          <Card>
            <CardContent className="p-4 flex flex-col items-centre">
              <Avatar className="h-20 w-20 my-2">
                <AvatarImage src="/images/avatars/parent-avatar.png" alt="Parent Avatar" />
                <AvatarFallback>SJ</AvatarFallback>
              </Avatar>
              <h2 className="text-xl font-bold mt-2">{parentData.name}</h2>
              <p className="text-muted-foreground">Parent Account</p>
              <Button className="w-full mt-4">Edit Profile</Button>
            </CardContent>
            <Separator />
            <CardContent className="p-0">
              <div className="space-y-1 p-2">
                <Button 
                  variant={activeTab === "dashboard" ? "default" : "ghost"} 
                  className="w-full justify-start" 
                  onClick={() => setActiveTab("dashboard")}
                >
                  <Home className="mr-2 h-4 w-4" />
                  Dashboard
                </Button>
                <Button 
                  variant={activeTab === "children" ? "default" : "ghost"} 
                  className="w-full justify-start"
                  onClick={() => setActiveTab("children")}
                >
                  <Users className="mr-2 h-4 w-4" />
                  My Children
                </Button>
                <Button 
                  variant={activeTab === "progress" ? "default" : "ghost"} 
                  className="w-full justify-start"
                  onClick={() => setActiveTab("progress")}
                >
                  <BarChart2 className="mr-2 h-4 w-4" />
                  Progress Reports
                </Button>
                <Button 
                  variant={activeTab === "assignments" ? "default" : "ghost"} 
                  className="w-full justify-start"
                  onClick={() => setActiveTab("assignments")}
                >
                  <FileText className="mr-2 h-4 w-4" />
                  Assignments
                </Button>
                <Button 
                  variant={activeTab === "messages" ? "default" : "ghost"} 
                  className="w-full justify-start"
                  onClick={() => setActiveTab("messages")}
                >
                  <MessageSquare className="mr-2 h-4 w-4" />
                  Messages
                </Button>
                <Button 
                  variant={activeTab === "calendar" ? "default" : "ghost"} 
                  className="w-full justify-start"
                  onClick={() => setActiveTab("calendar")}
                >
                  <Calendar className="mr-2 h-4 w-4" />
                  Calendar
                </Button>
                <Button 
                  variant={activeTab === "settings" ? "default" : "ghost"} 
                  className="w-full justify-start"
                  onClick={() => setActiveTab("settings")}
                >
                  <Settings className="mr-2 h-4 w-4" />
                  Settings
                </Button>
              </div>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="pb-2">
              <CardTitle className="text-sm font-medium">My Children</CardTitle>
            </CardHeader>
            <CardContent className="pt-0">
              <div className="space-y-4">
                {parentData.children.map((child, index) => (
                  <div key={index} className="flex items-centre space-x-3">
                    <Avatar className="h-10 w-10">
                      <AvatarFallback>{child.name.charAt(0)}</AvatarFallback>
                    </Avatar>
                    <div>
                      <p className="font-medium text-sm">{child.name}</p>
                      <p className="text-xs text-muted-foreground">{child.mark} â€¢ {child.school}</p>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>
        
        {/* Main Content */}
        <div className="flex-1">
          <div className="flex justify-between items-centre mb-6">
            <div>
              <h1 className="text-3xl font-bold tracking-tight">Parent Dashboard</h1>
              <p className="text-muted-foreground">
                Monitor your children's progress and stay connected with their education
              </p>
            </div>
            <div className="flex items-centre gap-4">
              <div className="relative">
                <Search className="absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground" />
                <input
                  type="search"
                  placeholder="Search..."
                  className="w-[200px] rounded-full bg-background pl-8 py-2 text-sm ring-1 ring-slate-200 dark:ring-slate-800"
                />
              </div>
              <Button variant="outline" size="icon">
                <Bell className="h-4 w-4" />
              </Button>
            </div>
          </div>
          
          {activeTab === "dashboard" && (
            <div className="space-y-6">
              {/* Children Quick Stats */}
              <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
                <Card>
                  <CardHeader className="flex flex-row items-centre justify-between space-y-0 pb-2">
                    <CardTitle className="text-sm font-medium">
                      Children
                    </CardTitle>
                    <Users className="h-4 w-4 text-muted-foreground" />
                  </CardHeader>
                  <CardContent>
                    <div className="text-2xl font-bold">{parentData.children.length}</div>
                    <p className="text-xs text-muted-foreground mt-2">
                      Registered in the system
                    </p>
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader className="flex flex-row items-centre justify-between space-y-0 pb-2">
                    <CardTitle className="text-sm font-medium">
                      Upcoming Events
                    </CardTitle>
                    <Calendar className="h-4 w-4 text-muted-foreground" />
                  </CardHeader>
                  <CardContent>
                    <div className="text-2xl font-bold">{parentData.upcomingEvents.length}</div>
                    <p className="text-xs text-muted-foreground mt-2">
                      In the next 30 days
                    </p>
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader className="flex flex-row items-centre justify-between space-y-0 pb-2">
                    <CardTitle className="text-sm font-medium">
                      Pending Assignments
                    </CardTitle>
                    <FileText className="h-4 w-4 text-muted-foreground" />
                  </CardHeader>
                  <CardContent>
                    <div className="text-2xl font-bold">{childrenAssignments.length}</div>
                    <p className="text-xs text-muted-foreground mt-2">
                      Across all children
                    </p>
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader className="flex flex-row items-centre justify-between space-y-0 pb-2">
                    <CardTitle className="text-sm font-medium">
                      Recent Updates
                    </CardTitle>
                    <Bell className="h-4 w-4 text-muted-foreground" />
                  </CardHeader>
                  <CardContent>
                    <div className="text-2xl font-bold">{recentUpdates.length}</div>
                    <p className="text-xs text-muted-foreground mt-2">
                      In the past week
                    </p>
                  </CardContent>
                </Card>
              </div>
              
              {/* Children Progress */}
              <Card>
                <CardHeader>
                  <CardTitle>Children's Academic Progress</CardTitle>
                  <CardDescription>
                    Current progress across all subjects
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="h-[300px]">
                    <ResponsiveContainer width="100%" height="100%">
                      <BarChart
                        data={childrenProgress}
                        margin={{
                          top: 5,
                          right: 30,
                          left: 20,
                          bottom: 5,
                        }}
                      >
                        <CartesianGrid strokeDasharray="3 3" />
                        <XAxis dataKey="name" />
                        <YAxis />
                        <Tooltip />
                        <Legend />
                        <Bar dataKey="progress" fill="#8884d8" name="Current Progress" />
                        <Bar dataKey="target" fill="#82ca9d" name="Target" />
                      </BarChart>
                    </ResponsiveContainer>
                  </div>
                </CardContent>
              </Card>
              
              {/* Upcoming Events */}
              <Card>
                <CardHeader>
                  <CardTitle>Upcoming Events</CardTitle>
                  <CardDescription>
                    School events and important dates
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {parentData.upcomingEvents.map((event, index) => (
                      <div key={index} className="flex items-centre justify-between p-3 border rounded-lg">
                        <div className="flex items-centre space-x-3">
                          <div className="w-10 h-10 bg-primary/10 rounded-full flex items-centre justify-centre">
                            <Calendar className="h-5 w-5 text-primary" />
                          </div>
                          <div>
                            <h4 className="font-medium">{event.title}</h4>
                            <p className="text-sm text-muted-foreground">{event.date} {event.time !== "N/A" && `â€¢ ${event.time}`}</p>
                          </div>
                        </div>
                        <Button variant="outline" size="sm">Add to Calendar</Button>
                      </div>
                    ))}
                  </div>
                </CardContent>
                <CardFooter>
                  <Button variant="outline" className="w-full">
                    View All Events
                  </Button>
                </CardFooter>
              </Card>
              
              {/* Recent Updates */}
              <Card>
                <CardHeader>
                  <CardTitle>Recent Updates</CardTitle>
                  <CardDescription>
                    Latest updates about your children
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {recentUpdates.map((update) => (
                      <div key={update.id} className="flex items-start space-x-3 p-3 border rounded-lg">
                        <div className={`w-10 h-10 rounded-full flex items-centre justify-centre ${
                          update.type === 'Mark' ? 'bg-blue-100' : 
                          update.type === 'Attendance' ? 'bg-amber-100' : 'bg-green-100'
                        }`}>
                          {update.type === 'Mark' ? (
                            <GraduationCap className="h-5 w-5 text-blue-600" />
                          ) : update.type === 'Attendance' ? (
                            <School className="h-5 w-5 text-amber-600" />
                          ) : (
                            <Star className="h-5 w-5 text-green-600" />
                          )}
                        </div>
                        <div className="flex-1">
                          <div className="flex items-centre justify-between">
                            <h4 className="font-medium">{update.childName}</h4>
                            <span className="text-sm text-muted-foreground">{update.date}</span>
                          </div>
                          <p className="text-sm mt-1">{update.details}</p>
                          {update.subject && (
                            <Badge variant="outline" className="mt-2">{update.subject}</Badge>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
                <CardFooter>
                  <Button variant="outline" className="w-full">
                    View All Updates
                  </Button>
                </CardFooter>
              </Card>
            </div>
          )}
          
          {activeTab !== "dashboard" && (
            <Card>
              <CardHeader>
                <CardTitle>{activeTab.charAt(0).toUpperCase() + activeTab.slice(1)}</CardTitle>
                <CardDescription>
                  This section is under development. Please check back soon for updates.
                </CardDescription>
              </CardHeader>
              <CardContent className="flex flex-col items-centre justify-centre py-10">
                <div className="rounded-full bg-primary/10 p-6 mb-4">
                  <Settings className="h-10 w-10 text-primary animate-spin-slow" />
                </div>
                <h3 className="text-xl font-medium mb-2">Coming Soon</h3>
                <p className="text-centre text-muted-foreground max-w-md">
                  We're working hard to bring you the best {activeTab} experience. 
                  This feature will be available in the next update.
                </p>
              </CardContent>
              <CardFooter>
                <Button variant="outline" className="w-full" onClick={() => setActiveTab("dashboard")}>
                  Return to Dashboard
                </Button>
              </CardFooter>
            </Card>
          )}
        </div>
      </div>
    </div>
  );
}

export default ParentDashboard;