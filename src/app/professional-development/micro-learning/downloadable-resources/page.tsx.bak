"use client";

import React, { useState } from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Input } from "@/components/ui/input";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
import { Search, Download, FileText, Clock, Award, Filter, CheckCircle, Bookmark, BookmarkCheck, Eye, FileIcon } from "lucide-react";

// Mock data for downloadable resources
const resources = [
  {
    id: "res-1",
    title: "Formative Assessment Toolkit",
    description: "Comprehensive toolkit with templates and guides for implementing formative assessment.",
    category: "Assessment",
    fileType: "PDF",
    fileSize: "4.2 MB",
    pages: 28,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["assessment", "formative", "feedback", "templates"],
    popularity: 98,
    dateAdded: "2025-05-01",
    thumbnail: "/images/resources/formative-assessment.jpg",
    downloadUrl: "/resources/formative-assessment-toolkit.pdf",
    downloads: 1245,
    bookmarked: true,
    completed: true,
    author: "Dr. Emma Thompson",
    authorTitle: "Educational Psychologist"
  },
  {
    id: "res-2",
    title: "Differentiation Planning Templates",
    description: "Ready-to-use templates for planning differentiated lessons across subjects.",
    category: "Pedagogy",
    fileType: "DOCX",
    fileSize: "2.8 MB",
    pages: 15,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["differentiation", "planning", "templates", "inclusion"],
    popularity: 95,
    dateAdded: "2025-05-03",
    thumbnail: "/images/resources/differentiation.jpg",
    downloadUrl: "/resources/differentiation-templates.docx",
    downloads: 1089,
    bookmarked: false,
    completed: false,
    author: "James Wilson",
    authorTitle: "Lead Practitioner for Inclusive Education"
  },
  {
    id: "res-3",
    title: "EAL Support Materials",
    description: "Visual aids, vocabulary resources, and scaffolding materials for EAL students.",
    category: "Inclusion",
    fileType: "ZIP",
    fileSize: "15.6 MB",
    pages: 42,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["EAL", "inclusion", "language support", "visual aids"],
    popularity: 92,
    dateAdded: "2025-05-05",
    thumbnail: "/images/resources/eal-support.jpg",
    downloadUrl: "/resources/eal-support-materials.zip",
    downloads: 876,
    bookmarked: false,
    completed: false,
    author: "Sophia Chen",
    authorTitle: "EAL Specialist Teacher"
  },
  {
    id: "res-4",
    title: "Questioning Techniques Cheat Sheet",
    description: "Quick reference guide for effective questioning strategies across Bloom's taxonomy.",
    category: "Pedagogy",
    fileType: "PDF",
    fileSize: "1.2 MB",
    pages: 4,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["questioning", "critical thinking", "Bloom's taxonomy", "classroom practise"],
    popularity: 90,
    dateAdded: "2025-05-07",
    thumbnail: "/images/resources/questioning.jpg",
    downloadUrl: "/resources/questioning-techniques.pdf",
    downloads: 1356,
    bookmarked: true,
    completed: true,
    author: "Dr. Scott I-Patrick",
    authorTitle: "Educational Psychologist"
  },
  {
    id: "res-5",
    title: "Positive Behaviour Management Toolkit",
    description: "Comprehensive toolkit for implementing positive behaviour strategies in your classroom.",
    category: "Behaviour",
    fileType: "PDF",
    fileSize: "8.5 MB",
    pages: 35,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["behaviour", "positive reinforcement", "classroom management", "templates"],
    popularity: 94,
    dateAdded: "2025-05-10",
    thumbnail: "/images/resources/positive-behaviour.jpg",
    downloadUrl: "/resources/positive-behaviour-toolkit.pdf",
    downloads: 1567,
    bookmarked: false,
    completed: false,
    author: "Michael Roberts",
    authorTitle: "Behaviour Specialist"
  },
  {
    id: "res-6",
    title: "Metacognition Lesson Plans",
    description: "Ready-to-use lesson plans for developing metacognitive skills across subjects.",
    category: "Pedagogy",
    fileType: "DOCX",
    fileSize: "5.3 MB",
    pages: 22,
    keyStage: ["KS2", "KS3", "KS4"],
    tags: ["metacognition", "learning strategies", "self-regulation", "lesson plans"],
    popularity: 88,
    dateAdded: "2025-05-12",
    thumbnail: "/images/resources/metacognition.jpg",
    downloadUrl: "/resources/metacognition-lesson-plans.docx",
    downloads: 943,
    bookmarked: false,
    completed: false,
    author: "Dr. Rebecca Williams",
    authorTitle: "Cognitive Science Specialist"
  },
  {
    id: "res-7",
    title: "Working Memory Support Strategies",
    description: "Visual aids and classroom resources for supporting students with working memory difficulties.",
    category: "SEND",
    fileType: "ZIP",
    fileSize: "12.8 MB",
    pages: 30,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["working memory", "SEND", "cognitive support", "visual aids"],
    popularity: 86,
    dateAdded: "2025-05-15",
    thumbnail: "/images/resources/working-memory.jpg",
    downloadUrl: "/resources/working-memory-support.zip",
    downloads: 782,
    bookmarked: false,
    completed: false,
    author: "Dr. Sarah Johnson",
    authorTitle: "Educational Psychologist"
  },
  {
    id: "res-8",
    title: "Effective Feedback Templates",
    description: "Templates and examples for providing effective written and verbal feedback.",
    category: "Assessment",
    fileType: "DOCX",
    fileSize: "3.6 MB",
    pages: 18,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["feedback", "assessment", "templates", "examples"],
    popularity: 91,
    dateAdded: "2025-05-18",
    thumbnail: "/images/resources/feedback.jpg",
    downloadUrl: "/resources/feedback-templates.docx",
    downloads: 1124,
    bookmarked: true,
    completed: true,
    author: "Dr. Scott I-Patrick",
    authorTitle: "Educational Psychologist"
  },
  {
    id: "res-9",
    title: "Retrieval Practise Activity Pack",
    description: "Ready-to-use retrieval practise activities for different subjects and age groups.",
    category: "Pedagogy",
    fileType: "PDF",
    fileSize: "6.2 MB",
    pages: 25,
    keyStage: ["KS2", "KS3", "KS4"],
    tags: ["retrieval practise", "memory", "cognitive science", "activities"],
    popularity: 93,
    dateAdded: "2025-05-20",
    thumbnail: "/images/resources/retrieval-practise.jpg",
    downloadUrl: "/resources/retrieval-practise-pack.pdf",
    downloads: 1032,
    bookmarked: false,
    completed: false,
    author: "Dr. Tom Blake",
    authorTitle: "Cognitive Science in Education Specialist"
  },
  {
    id: "res-10",
    title: "Autism-Friendly Classroom Resources",
    description: "Visual supports, schedules, and sensory resources for supporting autistic students.",
    category: "SEND",
    fileType: "ZIP",
    fileSize: "18.5 MB",
    pages: 45,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["autism", "SEND", "inclusion", "visual supports"],
    popularity: 89,
    dateAdded: "2025-05-22",
    thumbnail: "/images/resources/autism-support.jpg",
    downloadUrl: "/resources/autism-friendly-resources.zip",
    downloads: 876,
    bookmarked: false,
    completed: false,
    author: "Dr. Lisa Adams",
    authorTitle: "Autism Education Specialist"
  },
  {
    id: "res-11",
    title: "Dual Coding Templates",
    description: "Templates and examples for implementing dual coding principles in teaching materials.",
    category: "Pedagogy",
    fileType: "PPTX",
    fileSize: "9.8 MB",
    pages: 32,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["dual coding", "cognitive science", "visual learning", "templates"],
    popularity: 87,
    dateAdded: "2025-05-25",
    thumbnail: "/images/resources/dual-coding.jpg",
    downloadUrl: "/resources/dual-coding-templates.pptx",
    downloads: 743,
    bookmarked: false,
    completed: false,
    author: "Dr. Mark Wilson",
    authorTitle: "Cognitive Science Researcher"
  },
  {
    id: "res-12",
    title: "Oracy Development Activities",
    description: "Structured activities and resources for developing speaking and listening skills.",
    category: "Literacy",
    fileType: "PDF",
    fileSize: "7.2 MB",
    pages: 28,
    keyStage: ["KS1", "KS2", "KS3", "KS4"],
    tags: ["oracy", "speaking", "listening", "activities"],
    popularity: 85,
    dateAdded: "2025-05-28",
    thumbnail: "/images/resources/oracy.jpg",
    downloadUrl: "/resources/oracy-activities.pdf",
    downloads: 687,
    bookmarked: false,
    completed: false,
    author: "Helen Carter",
    authorTitle: "Literacy and Oracy Specialist"
  }
];

// Mock data for categories
const categories = [
  { id: "all", name: "All Categories" },
  { id: "assessment", name: "Assessment" },
  { id: "pedagogy", name: "Pedagogy" },
  { id: "behaviour", name: "Behaviour" },
  { id: "send", name: "SEND" },
  { id: "inclusion", name: "Inclusion" },
  { id: "literacy", name: "Literacy" }
];

// Mock data for key stages
const keyStages = [
  { id: "all", name: "All Key Stages" },
  { id: "ks1", name: "Key Stage 1" },
  { id: "ks2", name: "Key Stage 2" },
  { id: "ks3", name: "Key Stage 3" },
  { id: "ks4", name: "Key Stage 4" }
];

// Mock data for file types
const fileTypes = [
  { id: "all", name: "All File Types" },
  { id: "pdf", name: "PDF" },
  { id: "docx", name: "Word (DOCX)" },
  { id: "pptx", name: "PowerPoint (PPTX)" },
  { id: "xlsx", name: "Excel (XLSX)" },
  { id: "zip", name: "ZIP Archive" }
];

// Mock data for completion certificates
const certificates = [
  {
    id: "cert-1",
    title: "Assessment Resources Specialist",
    description: "Download all assessment-related resources",
    progress: 67,
    requiredResources: ["res-1", "res-4", "res-8"],
    completedResources: ["res-1", "res-8"],
    image: "/images/certificates/assessment-specialist.jpg"
  },
  {
    id: "cert-2",
    title: "Pedagogy Resources Expert",
    description: "Download all pedagogy-related resources",
    progress: 20,
    requiredResources: ["res-2", "res-4", "res-6", "res-9", "res-11"],
    completedResources: ["res-4"],
    image: "/images/certificates/pedagogy-expert.jpg"
  },
  {
    id: "cert-3",
    title: "Inclusion Resources Champion",
    description: "Download all inclusion and SEND-related resources",
    progress: 0,
    requiredResources: ["res-3", "res-7", "res-10"],
    completedResources: [],
    image: "/images/certificates/inclusion-champion.jpg"
  }
];

// Mock data for featured collections
const featuredCollections = [
  {
    id: "fc-1",
    title: "New Teacher Essentials",
    description: "Essential resources for teachers in their first years of teaching",
    resources: ["res-1", "res-2", "res-5", "res-8"],
    image: "/images/collections/new-teacher.jpg"
  },
  {
    id: "fc-2",
    title: "Cognitive Science in Practise",
    description: "Resources for applying cognitive science principles in your classroom",
    resources: ["res-6", "res-7", "res-9", "res-11"],
    image: "/images/collections/cognitive-science.jpg"
  },
  {
    id: "fc-3",
    title: "Inclusive Classroom Toolkit",
    description: "Resources for creating an inclusive environment for all learners",
    resources: ["res-2", "res-3", "res-7", "res-10", "res-12"],
    image: "/images/collections/inclusive-classroom.jpg"
  }
];

// Mock data for evidence base
const evidenceBase = [
  {
    id: "eb-1",
    title: "Assessment Resources",
    description: "Research evidence supporting our assessment resources",
    content: `
      <p>Our assessment resources are based on robust research evidence about effective assessment practices. The resources incorporate principles from formative assessment research, which consistently shows positive effects on student learning.</p>
      
      <p>Key research findings that inform our assessment resources include:</p>
      <ul>
        <li>Formative assessment practices can produce significant learning gains, with effect sizes between 0.4 and 0.7 (Black & Wiliam, 1998)</li>
        <li>Effective feedback focuses on the task, process, and self-regulation rather than the self (Hattie & Timperley, 2007)</li>
        <li>Clear success criteria and exemplars help students understand quality and set appropriate goals (Sadler, 1989)</li>
        <li>Peer and self-assessment develop metacognitive skills and assessment literacy (Topping, 2018)</li>
      </ul>
      
      <p>The Education Endowment Foundation's Teaching and Learning Toolkit rates feedback (a key component of formative assessment) as having a very high impact (+8 months) for very low cost, based on extensive evidence.</p>
      
      <p>References:</p>
      <ul>
        <li>Black, P., & Wiliam, D. (1998). Assessment and classroom learning. Assessment in Education, 5(1), 7-74.</li>
        <li>Hattie, J., & Timperley, H. (2007). The power of feedback. Review of Educational Research, 77(1), 81-112.</li>
        <li>Sadler, D. R. (1989). Formative assessment and the design of instructional systems. Instructional Science, 18(2), 119-144.</li>
        <li>Topping, K. J. (2018). Using peer assessment to inspire reflection and learning. Routledge.</li>
      </ul>
    `,
    relatedResources: ["res-1", "res-4", "res-8"]
  },
  {
    id: "eb-2",
    title: "Cognitive Science Resources",
    description: "Research evidence supporting our cognitive science resources",
    content: `
      <p>Our cognitive science resources are based on well-established research findings about how people learn. These resources translate cognitive science principles into practical classroom applications.</p>
      
      <p>Key research-supported cognitive science principles that inform our resources include:</p>
      <ul>
        <li><strong>Retrieval Practise:</strong> Actively recalling information strengthens memory more effectively than re-reading or highlighting (Roediger & Butler, 2011)</li>
        <li><strong>Spaced Practise:</strong> Distributing learning over time leads to better long-term retention than massed practise (Carpenter et al., 2012)</li>
        <li><strong>Dual Coding:</strong> Combining verbal and visual information enhances learning by creating multiple pathways to retrieval (Paivio, 1986; Mayer & Moreno, 2003)</li>
        <li><strong>Concrete Examples:</strong> Abstract concepts are better understood when linked to concrete examples (Rawson et al., 2015)</li>
        <li><strong>Elaboration:</strong> Explaining and connecting ideas promotes deeper processing and better retention (Weinstein et al., 2018)</li>
      </ul>
      
      <p>The Education Endowment Foundation's review of cognitive science applications in education supports the implementation of these principles in classroom practise.</p>
      
      <p>References:</p>
      <ul>
        <li>Carpenter, S. K., Cepeda, N. J., Rohrer, D., Kang, S. H., & Pashler, H. (2012). Using spacing to enhance diverse forms of learning: Review of recent research and implications for instruction. Educational Psychology Review, 24(3), 369-378.</li>
        <li>Mayer, R. E., & Moreno, R. (2003). Nine ways to reduce cognitive load in multimedia learning. Educational Psychologist, 38(1), 43-52.</li>
        <li>Paivio, A. (1986). Mental representations: A dual coding approach. Oxford University Press.</li>
        <li>Rawson, K. A., Thomas, R. C., & Jacoby, L. L. (2015). The power of examples: Illustrative examples enhance conceptual learning of declarative concepts. Educational Psychology Review, 27(3), 483-504.</li>
        <li>Roediger, H. L., & Butler, A. C. (2011). The critical role of retrieval practise in long-term retention. Trends in Cognitive Sciences, 15(1), 20-27.</li>
        <li>Weinstein, Y., Madan, C. R., & Sumeracki, M. A. (2018). Teaching the science of learning. Cognitive Research: Principles and Implications, 3(1), 2.</li>
      </ul>
    `,
    relatedResources: ["res-6", "res-9", "res-11"]
  },
  {
    id: "eb-3",
    title: "Inclusive Education Resources",
    description: "Research evidence supporting our inclusive education resources",
    content: `
      <p>Our inclusive education resources are based on research evidence about effective practices for supporting diverse learners, including those with special educational needs and disabilities.</p>
      
      <p>Key research findings that inform our inclusive education resources include:</p>
      <ul>
        <li>Universal Design for Learning (UDL) principles improve outcomes for all students, not just those with identified needs (CAST, 2018)</li>
        <li>Differentiated instruction that provides multiple pathways to learning goals increases student engagement and achievement (Tomlinson & Moon, 2013)</li>
        <li>Explicit instruction with clear explanations, guided practise, and independent practise is particularly effective for students with learning difficulties (Hughes et al., 2017)</li>
        <li>Visual supports and structured environments benefit students with autism and other neurodevelopmental conditions (Wong et al., 2015)</li>
        <li>Peer-assisted learning strategies benefit both helpers and those being helped (Bowman-Perrott et al., 2013)</li>
      </ul>
      
      <p>The Education Endowment Foundation's guidance report on Special Educational Needs in Mainstream Schools emphasizes that good teaching for SEND students is good teaching for all students.</p>
      
      <p>References:</p>
      <ul>
        <li>Bowman-Perrott, L., Davis, H., Vannest, K., Williams, L., Greenwood, C., & Parker, R. (2013). Academic benefits of peer tutoring: A meta-analytic review of single-case research. School Psychology Review, 42(1), 39-55.</li>
        <li>CAST (2018). Universal Design for Learning Guidelines version 2.2. Retrieved from http://udlguidelines.cast.org</li>
        <li>Education Endowment Foundation (2020). Special Educational Needs in Mainstream Schools: Guidance Report.</li>
        <li>Hughes, C. A., Morris, J. R., Therrien, W. J., & Benson, S. K. (2017). Explicit instruction: Historical and contemporary contexts. Learning Disabilities Research & Practise, 32(3), 140-148.</li>
        <li>Tomlinson, C. A., & Moon, T. R. (2013). Assessment and student success in a differentiated classroom. ASCD.</li>
        <li>Wong, C., Odom, S. L., Hume, K. A., Cox, A. W., Fettig, A., Kucharczyk, S., ... & Schultz, T. R. (2015). Evidence-based practices for children, youth, and young adults with autism spectrum disorder: A comprehensive review. Journal of Autism and Developmental Disorders, 45(7), 1951-1966.</li>
      </ul>
    `,
    relatedResources: ["res-2", "res-3", "res-7", "res-10"]
  }
];

export default function DownloadableResourcesPage() {
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("all");
  const [selectedKeyStage, setSelectedKeyStage] = useState("all");
  const [selectedFileType, setSelectedFileType] = useState("all");
  const [showCompleted, setShowCompleted] = useState(true);
  const [showBookmarked, setShowBookmarked] = useState(false);

  // Filter resources based on search term and filters
  const filteredResources = resources.filter((resource) => {
    // Search term filter
    const matchesSearch = 
      resource.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      resource.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
      resource.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));
    
    // Category filter
    const matchesCategory = 
      selectedCategory === "all" || 
      resource.category.toLowerCase() === selectedCategory.toLowerCase();
    
    // Key Stage filter
    const matchesKeyStage = 
      selectedKeyStage === "all" || 
      resource.keyStage.some(ks => ks.toLowerCase() === selectedKeyStage.toLowerCase());
    
    // File Type filter
    const matchesFileType = 
      selectedFileType === "all" || 
      resource.fileType.toLowerCase() === selectedFileType.toLowerCase();
    
    // Completion filter
    const matchesCompletion = !showCompleted || !resource.completed;
    
    // Bookmarked filter
    const matchesBookmarked = !showBookmarked || resource.bookmarked;
    
    return matchesSearch && matchesCategory && matchesKeyStage && matchesFileType && matchesCompletion && matchesBookmarked;
  });

  // Handle resource download
  const handleDownload = (resource: any) => {
    // In a real implementation, this would trigger a download
    console.log(`Downloading resource: ${resource.title}`);
    // Mock implementation - would actually download the file
    alert(`Downloading: ${resource.title}`);
  };

  // Handle bookmark toggle
  const handleToggleBookmark = (resource: any) => {
    // In a real implementation, this would update the database
    console.log(`Toggling bookmark for: ${resource.title}`);
    // Mock implementation - would actually toggle the bookmark
    alert(`Toggled bookmark for: ${resource.title}`);
  };

  // Get resources for a collection
  const getResourcesForCollection = (collection: any) => {
    return resources.filter(resource => collection.resources.includes(resource.id));
  };

  // Get file icon based on file type
  const getFileIcon = (fileType: string) => {
    switch (fileType.toLowerCase()) {
      case 'pdf':
        return <FileText className="h-5 w-5 text-red-500" />;
      case 'docx':
        return <FileText className="h-5 w-5 text-blue-500" />;
      case 'pptx':
        return <FileText className="h-5 w-5 text-orange-500" />;
      case 'xlsx':
        return <FileText className="h-5 w-5 text-green-500" />;
      case 'zip':
        return <FileText className="h-5 w-5 text-purple-500" />;
      default:
        return <FileText className="h-5 w-5 text-grey-500" />;
    }
  };

  return (
    <div className="min-h-screen bg-grey-50">
      <div className="pt-16 pb-8 bg-blue-600 text-white">
        <div className="container mx-auto px-4">
          <h1 className="text-3xl font-bold mb-2">Downloadable Resources</h1>
          <p className="text-xl">Access high-quality teaching resources aligned with evidence-based practices</p>
        </div>
      </div>
      
      <main className="container mx-auto px-4 py-8">
        <Tabs defaultValue="browse" className="w-full">
          <TabsList className="grid grid-cols-5 mb-8">
            <TabsTrigger value="browse">Browse Resources</TabsTrigger>
            <TabsTrigger value="collections">Featured Collections</TabsTrigger>
            <TabsTrigger value="certificates">Completion Certificates</TabsTrigger>
            <TabsTrigger value="evidence">Evidence Base</TabsTrigger>
            <TabsTrigger value="upload">Upload Resource</TabsTrigger>
          </TabsList>
          
          {/* Browse Resources Tab */}
          <TabsContent value="browse" className="space-y-6">
            <div className="flex flex-col md:flex-row gap-4 mb-6">
              <div className="relative flex-grow">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-grey-400" />
                <Input
                  type="text"
                  placeholder="Search downloadable resources..."
                  className="pl-10"
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                />
              </div>
              
              <div className="flex flex-wrap gap-2">
                <select 
                  className="px-3 py-2 border rounded-md bg-white"
                  value={selectedCategory}
                  onChange={(e) => setSelectedCategory(e.target.value)}
                >
                  {categories.map(category => (
                    <option key={category.id} value={category.id}>{category.name}</option>
                  ))}
                </select>
                
                <select 
                  className="px-3 py-2 border rounded-md bg-white"
                  value={selectedKeyStage}
                  onChange={(e) => setSelectedKeyStage(e.target.value)}
                >
                  {keyStages.map(keyStage => (
                    <option key={keyStage.id} value={keyStage.id}>{keyStage.name}</option>
                  ))}
                </select>
                
                <select 
                  className="px-3 py-2 border rounded-md bg-white"
                  value={selectedFileType}
                  onChange={(e) => setSelectedFileType(e.target.value)}
                >
                  {fileTypes.map(fileType => (
                    <option key={fileType.id} value={fileType.id}>{fileType.name}</option>
                  ))}
                </select>
                
                <Button 
                  variant="outline" 
                  className={`flex items-centre gap-2 ${showCompleted ? 'bg-blue-50' : ''}`}
                  onClick={() => setShowCompleted(!showCompleted)}
                >
                  <CheckCircle className={`h-4 w-4 ${showCompleted ? 'text-blue-500' : 'text-grey-300'}`} />
                  {showCompleted ? 'Include Downloaded' : 'Hide Downloaded'}
                </Button>
                
                <Button 
                  variant="outline" 
                  className={`flex items-centre gap-2 ${showBookmarked ? 'bg-yellow-50' : ''}`}
                  onClick={() => setShowBookmarked(!showBookmarked)}
                >
                  <BookmarkCheck className={`h-4 w-4 ${showBookmarked ? 'text-yellow-500' : 'text-grey-300'}`} />
                  {showBookmarked ? 'Bookmarked Only' : 'All Resources'}
                </Button>
              </div>
            </div>
            
            {filteredResources.length === 0 ? (
              <div className="text-centre py-12">
                <h3 className="text-xl font-semibold mb-2">No resources found</h3>
                <p className="text-grey-500">Try adjusting your search or filters</p>
              </div>
            ) : (
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredResources.map((resource) => (
                  <Card key={resource.id} className={`overflow-hidden ${resource.completed ? 'border-green-200 bg-green-50' : ''}`}>
                    <div className="h-40 bg-grey-200 relative">
                      {/* In a real implementation, this would be an actual image */}
                      <div className="absolute inset-0 flex items-centre justify-centre bg-blue-100">
                        <span className="text-blue-500 font-medium">{resource.title} Thumbnail</span>
                      </div>
                      {resource.completed && (
                        <div className="absolute top-2 right-2 bg-green-500 text-white px-2 py-1 rounded-md text-xs font-medium">
                          Downloaded
                        </div>
                        )}
                        {resource.bookmarked && (
                          <div className="absolute top-2 left-2 bg-yellow-500 text-white px-2 py-1 rounded-md text-xs font-medium">
                            Bookmarked
                          </div>
                        )}
                      </div>
                      <CardHeader>
                        <div className="flex justify-between items-start">
                          <CardTitle className="text-lg">{resource.title}</CardTitle>
                          <div className="flex items-centre gap-1">
                            {getFileIcon(resource.fileType)}
                            <span className="text-sm font-medium">{resource.fileType}</span>
                          </div>
                        </div>
                        <div className="flex items-centre gap-2 text-sm text-grey-500">
                          <FileText className="h-4 w-4" />
                          <span>{resource.pages} pages</span>
                          <span>•</span>
                          <span>{resource.fileSize}</span>
                        </div>
                        <CardDescription>{resource.description}</CardDescription>
                      </CardHeader>
                      <CardContent>
                        <div className="flex flex-wrap gap-2 mb-4">
                          <Badge variant="outline" className="bg-blue-50">{resource.category}</Badge>
                          {resource.keyStage.map((ks) => (
                            <Badge key={ks} variant="outline" className="bg-purple-50">{ks}</Badge>
                          ))}
                        </div>
                        <div className="flex flex-wrap gap-1 mb-3">
                          {resource.tags.map((tag) => (
                            <span key={tag} className="text-xs text-grey-500">#{tag}</span>
                          ))}
                        </div>
                        <div className="flex items-centre gap-4 text-sm text-grey-500">
                          <div className="flex items-centre gap-1">
                            <Download className="h-4 w-4" />
                            <span>{resource.downloads} downloads</span>
                          </div>
                          <div className="flex items-centre gap-1">
                            <Eye className="h-4 w-4" />
                            <span>Preview available</span>
                          </div>
                        </div>
                      </CardContent>
                      <CardFooter className="flex justify-between">
                        <Button
                          variant="outline"
                          className="flex items-centre gap-2"
                          onClick={() => handleToggleBookmark(resource)}
                        >
                          {resource.bookmarked ? (
                            <BookmarkCheck className="h-4 w-4 text-yellow-500" />
                          ) : (
                            <Bookmark className="h-4 w-4" />
                          )}
                          {resource.bookmarked ? 'Bookmarked' : 'Bookmark'}
                        </Button>
                        <Button
                          variant="default"
                          className="flex items-centre gap-2"
                          onClick={() => handleDownload(resource)}
                        >
                          <Download className="h-4 w-4" />
                          Download
                        </Button>
                      </CardFooter>
                    </Card>
                  ))}
                </div>
              )}
            </TabsContent>
            
            {/* Featured Collections Tab */}
            <TabsContent value="collections" className="space-y-8">
              <div className="prose max-w-none mb-6">
                <h2>Featured Collections</h2>
                <p>
                  Our curated collections bring together related resources to help you develop expertise in specific areas.
                  Download a collection to enhance your professional development portfolio.
                </p>
              </div>
              
              {featuredCollections.map((collection) => (
                <Card key={collection.id} className="overflow-hidden">
                  <div className="md:flex">
                    <div className="md:w-1/3 bg-grey-200 md:h-auto h-40 relative">
                      {/* In a real implementation, this would be an actual image */}
                      <div className="absolute inset-0 flex items-centre justify-centre bg-indigo-100">
                        <span className="text-indigo-500 font-medium">{collection.title} Image</span>
                      </div>
                    </div>
                    <div className="md:w-2/3">
                      <CardHeader>
                        <CardTitle>{collection.title}</CardTitle>
                        <CardDescription>{collection.description}</CardDescription>
                      </CardHeader>
                      <CardContent>
                        <h4 className="font-medium mb-3">Included Resources:</h4>
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                          {getResourcesForCollection(collection).map((resource) => (
                            <div key={resource.id} className="flex items-start gap-2">
                              {resource.completed ? (
                                <CheckCircle className="h-5 w-5 text-green-500 mt-0.5" />
                              ) : (
                                <div className="h-5 w-5 border-2 rounded-full mt-0.5" />
                              )}
                              <div>
                                <p className="font-medium">{resource.title}</p>
                                <p className="text-sm text-grey-500">{resource.fileType} • {resource.fileSize}</p>
                              </div>
                            </div>
                          ))}
                        </div>
                      </CardContent>
                      <CardFooter>
                        <Button className="w-full">Download Collection</Button>
                      </CardFooter>
                    </div>
                  </div>
                </Card>
              ))}
            </TabsContent>
            
            {/* Completion Certificates Tab */}
            <TabsContent value="certificates" className="space-y-8">
              <div className="prose max-w-none mb-6">
                <h2>Completion Certificates</h2>
                <p>
                  Earn certificates by downloading sets of related resources. These certificates can be added to your
                  professional development portfolio and shared with your school leadership team.
                </p>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                {certificates.map((certificate) => (
                  <Card key={certificate.id} className="overflow-hidden">
                    <div className="h-48 bg-grey-200 relative">
                      {/* In a real implementation, this would be an actual image */}
                      <div className="absolute inset-0 flex items-centre justify-centre bg-yellow-100">
                        <span className="text-yellow-700 font-medium">{certificate.title} Certificate</span>
                      </div>
                    </div>
                    <CardHeader>
                      <CardTitle>{certificate.title}</CardTitle>
                      <CardDescription>{certificate.description}</CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      <div>
                        <div className="flex justify-between mb-1">
                          <span className="text-sm font-medium">Progress</span>
                          <span className="text-sm text-grey-500">{certificate.completedResources.length}/{certificate.requiredResources.length}</span>
                        </div>
                        <Progress value={certificate.progress} className="h-2" />
                      </div>
                      
                      <div className="space-y-2">
                        <h4 className="font-medium">Required Resources:</h4>
                        {certificate.requiredResources.map((resourceId) => {
                          const resource = resources.find(r => r.id === resourceId);
                          return resource ? (
                            <div key={resource.id} className="flex items-centre gap-2">
                              {certificate.completedResources.includes(resource.id) ? (
                                <CheckCircle className="h-4 w-4 text-green-500" />
                              ) : (
                                <div className="h-4 w-4 border rounded-full" />
                              )}
                              <span className={certificate.completedResources.includes(resource.id) ? "line-through text-grey-500" : ""}>
                                {resource.title}
                              </span>
                            </div>
                          ) : null;
                        })}
                      </div>
                    </CardContent>
                    <CardFooter>
                      <Button
                        disabled={certificate.progress < 100}
                        className="w-full"
                        variant={certificate.progress < 100 ? "outline" : "default"}
                      >
                        {certificate.progress < 100 ? "Download All Resources" : "Download Certificate"}
                      </Button>
                    </CardFooter>
                  </Card>
                ))}
              </div>
            </TabsContent>
            
            {/* Evidence Base Tab */}
            <TabsContent value="evidence" className="space-y-8">
              <div className="prose max-w-none mb-6">
                <h2>Evidence Base</h2>
                <p>
                  Our downloadable resources are based on robust research evidence and best practices in educational psychology.
                  Explore the research foundations behind our resources to deepen your understanding.
                </p>
              </div>
              
              <Accordion type="single" collapsible className="w-full">
                {evidenceBase.map((evidence) => (
                  <AccordionItem key={evidence.id} value={evidence.id}>
                    <AccordionTrigger className="text-lg font-medium">
                      {evidence.title}
                    </AccordionTrigger>
                    <AccordionContent>
                      <div className="prose max-w-none" dangerouslySetInnerHTML={{ __html: evidence.content }} />
                      
                      <div className="mt-6">
                        <h4 className="font-medium mb-3">Related Resources:</h4>
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                          {evidence.relatedResources.map((resourceId) => {
                            const resource = resources.find(r => r.id === resourceId);
                            return resource ? (
                              <div key={resource.id} className="flex items-centre gap-2">
                                {getFileIcon(resource.fileType)}
                                <span>{resource.title}</span>
                              </div>
                            ) : null;
                          })}
                        </div>
                      </div>
                    </AccordionContent>
                  </AccordionItem>
                ))}
              </Accordion>
            </TabsContent>
            
            {/* Upload Resource Tab */}
            <TabsContent value="upload" className="space-y-6">
              <div className="prose max-w-none mb-6">
                <h2>Upload a Resource</h2>
                <p>
                  Share your own teaching resources with the EdPsych AI community. Uploaded resources will be reviewed by our team
                  before being made available to other users.
                </p>
              </div>
              
              <Card>
                <CardHeader>
                  <CardTitle>Resource Upload</CardTitle>
                  <CardDescription>
                    Please provide details about the resource you'd like to share.
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <form className="space-y-4">
                    <div className="space-y-2">
                      <label htmlFor="title" className="font-medium">Resource Title</label>
                      <Input id="title" placeholder="e.g., Differentiation Planning Templates" />
                    </div>
                    
                    <div className="space-y-2">
                      <label htmlFor="description" className="font-medium">Description</label>
                      <textarea
                        id="description"
                        className="w-full min-h-[100px] p-2 border rounded-md"
                        placeholder="Please describe your resource..."
                      />
                    </div>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <label htmlFor="category" className="font-medium">Category</label>
                        <select id="category" className="w-full p-2 border rounded-md">
                          {categories.map(category => (
                            <option key={category.id} value={category.id}>{category.name}</option>
                          ))}
                        </select>
                      </div>
                      
                      <div className="space-y-2">
                        <label htmlFor="keyStage" className="font-medium">Key Stage</label>
                        <select id="keyStage" className="w-full p-2 border rounded-md">
                          {keyStages.filter(ks => ks.id !== "all").map(keyStage => (
                            <option key={keyStage.id} value={keyStage.id}>{keyStage.name}</option>
                          ))}
                        </select>
                      </div>
                    </div>
                    
                    <div className="space-y-2">
                      <label htmlFor="tags" className="font-medium">Tags (comma separated)</label>
                      <Input id="tags" placeholder="e.g., differentiation, planning, templates, inclusion" />
                    </div>
                    
                    <div className="space-y-2">
                      <label htmlFor="file" className="font-medium">Upload File</label>
                      <div className="border-2 border-dashed border-grey-300 rounded-md p-6 text-centre">
                        <div className="flex flex-col items-centre">
                          <FileIcon className="h-10 w-10 text-grey-400 mb-2" />
                          <p className="text-sm text-grey-500 mb-2">Drag and drop your file here, or click to browse</p>
                          <p className="text-xs text-grey-400 mb-4">Supported formats: PDF, DOCX, PPTX, XLSX, ZIP (Max 50MB)</p>
                          <Button variant="outline" size="sm">Browse Files</Button>
                        </div>
                      </div>
                    </div>
                    
                    <div className="space-y-2">
                      <label className="flex items-centre gap-2">
                        <input type="checkbox" className="h-4 w-4" />
                        <span>I confirm that I have the rights to share this resource and grant permission for it to be used by other educators.</span>
                      </label>
                    </div>
                  </form>
                </CardContent>
                <CardFooter>
                  <Button className="w-full">Upload Resource</Button>
                </CardFooter>
              </Card>
            </TabsContent>
          </Tabs>
        </main>
        
        <footer className="bg-grey-100 py-8 mt-12">
          <div className="container mx-auto px-4">
            <div className="text-centre">
              <h3 className="text-lg font-semibold mb-2">EdPsych AI Platform</h3>
              <p className="text-grey-600 mb-4">Professional Development Resources</p>
              <p className="text-sm text-grey-500">
                © {new Date().getFullYear()} EdPsych AI. All downloadable resources are based on evidence-based practices and aligned with UK educational standards.
              </p>
            </div>
          </div>
        </footer>
      </div>